
    TTTTTTTTTT  AAAAAAAAAA   BBBBBBB      LLLL        OOOOOOOOOO
    TTTTTTTTTT  AAA    AAA   BBBBBBBBB    LLLL        OOOOOOOOOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBBBBBB      LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBBBBBBBB    LLLLLLLLL   OOOOOOOOOO
       TTT      AAA    AAA   BBBBBBB      LLLLLLLLL   OOOOOOOOOO

 <TABLO  Version 7.0   August 2018>                                    





                     GEMPACK SOFTWARE
     << COPYRIGHT 1987-2018:  The Impact Project and KPSOFT >>
   
   

    +++  INFORMATION ABOUT THIS PRINT FILE  +++
   

 ! This file was created at 15:50:59 on 09-SEP-2022 by the program
 !  <TABLO  Version 7.0   August 2018>
 ! which accesses some of the routines in the GEMPACK software release
 !  <GEMPACK Release 12.1.004   January 2020>
 
 !     -------------------------------------------------------                
 !    !            GEMPACK Software System Licence            !               
 !    !  Source Code Licence for the GEMPACK Software System  !               
 !    !                 Licence No.  GFM-0048                 !               
 !    !          Licence for Release 12.1 of GEMPACK          !               
 !    !           Center for Global Trade Analysis            !               
 !    !         Department of Agricultural Economics          !               
 !    !                   Krannert Building                   !               
 !    !                   Purdue University                   !               
 !     -------------------------------------------------------                
    

    +++  END OF INFORMATION ABOUT THIS PRINT FILE  +++

 ======================================================
           TABLO PORTABLE   
 ++> TABLO OPTIONS   ( --> indicates those in effect )
 ======================================================



      -----------                   ----------
  --> F1 CHECK                      L1 CHECK
      F2 CONDENSATION               L2 CONDENSATION
      F3 CODE GENERATION        --> L3 CODE GENERATION
      Mode
      ----
      INTERACTIVE
      BATCH
  --> UNSPECIFIED


 ==================================================
 ++> TABLO Input file is 'gtapaez.tab'
 ++> This Information file is 'gtapaez'
 ==================================================



 ******************************************************************************
 -1-
 -->                     Starting CHECK stage

 ******************************************************************************


      1   !<
      2       ==================================
      3       Global Trade Analysis Project
      4       The GTAP Modeling Framework
      5       GTAP Version 6.2
      6       September 2003
      7       ==================================
      8    
      9       For documentation see:
     10       (a) Hertel, T.W. and M.E. Tsigas, "Structure of the Standard GTAP Model",
     11       Chapter 2 in T.W. Hertel (editor) "Global Trade Analysis: Modeling and
     12       Applications", Cambridge University Press, 1997.
     13    
     14       (b) R.A. McDougall, "A New Regional Household Demand System for GTAP",
     15       GTAP Technical Paper #20, Center for Global Trade Analysis, Purdue
     16       University
     17    
     18       (c) Hertel T.W., K. Itakura and R.A. McDougall, "GTAP.TAB: The Standard
     19       GTAP Model" (yet to be drafted), GTAP Technical Paper, Center for Global
     20       Trade Analysis, Purdue University,
     21       http://www.agecon.purdue.edu/gtap/techpapr/.  This technical paper
     22       documents all of the changes since the GTAP book TAB file.
     23    
     24    
     25       --------------------
     26       HISTORY of this file
     27       --------------------
     28    
     29       Version 6.2 fixes bugs and provides minor enhancements:
     30           - EV_ALT, CNTdpar fix
     31           - SX_IR fix
     32           - new treatment of export and import tariffs
     33           - original levels defined for power-of-tax variables
     34           - CNTalleffir range extended from TRAD_COMM to DEMD_COMM
     35           - INCOME formula, quantity index equations more AnalyzeGE-friendly
     36    
     37       Version 6.1 fixes bugs in 6.0:
     38           - Computation of tax receipts ratio is now separately done for total
     39             tax and indirect tax (equation DTAXRATIO and DINDTAXRATIO).
     40           - Computation of DTBALR, the ratio of the trade balance to regional
     41             income, has been corrected (equation DTBALRATIO).
     42           - Computation of EV_ALT, the summary variable for EV, has been
     43             corrected (equation EV_DECOMPOSITION).
     44       Also the notation has been changed for the tax-income ratio variables:
     45           TGCR -> del_taxrgc,    TPCR -> del_taxrpc,    TIUR -> del_taxriu,
     46           TFUR -> del_taxrfu,    TOUTR -> del_taxrout,  TEXPR -> del_taxrexp,
     47           TIMPR -> del_taxrimp,  TINCR -> del_taxrinc,  DTAXR -> del_ttaxr.
     48    
     49       Version 6.0 replaces version 5.0 used in the August 2000 short course, but
     50       never formally released.  The subsequent changes have been quite
     51       significant (primarily focused on final demand and welfare decomposition),
     52       so we decided to give it a new version number.  This also prevents
     53       confusion with the soon to be released version 5.0 GTAP data set.
     54    
     55       The differences with the previous publicly released version of GTAP.TAB,
     56       Version 4.1, dated November 1998, are numerous.  One goal of this version
     57       is to reorganize the TAB file which had not be redesigned since its
     58       inception.  In addition, there is a long list of substantive changes that
     59       have been made between Version 4.1 and 6.0.  These include:
     60    
     61           - provision for multiple margins sectors (to accommodate post version
     62             5 GTAP data)
     63           - introduction of the new theory of final demand following McDougall's
     64             GTAP Technical Paper #20
     65           - modification of the welfare decomposition following McDougall's
     66             Technical Paper #20
     67           - correction to the treatment of technical change, ao, in the presence
     68             of ESUBT > 0 (affects equations VADEMAND and INTDEMAND)
     69           - addition of import-augmenting "technical change" in the Armington
     70             nest: ams which can be used to lower the effective price of imported
     71             products
     72           - specification of Baldwin-type capital accmulation effects following
     73             Francois' Technical Paper #7
     74           - introduction of uniform consumption tax instrument, tp(r)
     75    
     76    
     77       ----------------------------------
     78       Overview of the GTAP.TAB Structure
     79       ----------------------------------
     80       Preliminaries:
     81           FILES
     82           SETS
     83           READ statements of Base Data
     84           Common VARIABLES
     85           Common COEFFICIENTS
     86    
     87       Modules:
     88           1.  Government Consumption
     89           2.  Private Consumption
     90           3.  Firms
     91           4.  Investment, Global Bank, and Savings
     92           5.  International Trade
     93           6.  International Transport Services
     94           7.  Regional Household
     95           8.  Equilibrium Conditions
     96    
     97       Appendices:
     98           A.  Summary Indices
     99           B.  Equivalent Variation
    100           C.  Welfare Decomposition
    101           D.  Terms of Trade Decomposition
    102   >!
    103    
    104    
    105   !<
    106       -----
    107       FILES
    108       -----
    109   >!
    110    
    111   File
    112       GTAPSETS # file with set specification #;
    113   File
    114       GTAPDATA # file containing all base data #;
    115   File
    116       GTAPPARM # file containing behavioral parameters #;
    117    
    118   ! EC edits for new shocks !
    119   File
    120       GTAPSUPP # Supplementary file with additional set and mapping #;
    121   File
    122       (new) GTAPSUM # Summary results file #;
    123   ! !
    124   !<
    125       ----
    126       SETS
    127       ----
    128    
    129       Sets define relevant groupings of entities over which we will be
    130       performing operations in the model.  SUBSETS are defined in order to
    131       facilitate summation over only a portion of a given group, e.g., tradeable
    132       commodities.  Users with access to GEMPACK can increase the maximum set
    133       sizes to permit larger aggregations, provided you have sufficient RAM for
    134       implementing them The standard model (10x10 aggregation with decomposition
    135       code) is designed to run with 16 Mb of RAM.
    136    
    137    
    138       Aide-Memoire for Sets
    139       ---------------------
    140    
    141       |--------------------------------------|
    142       |         DEMD_COMM                    |
    143       |----------------------------------------------------|
    144       | ENDW_COMM |  LAND_COMM |  NLAND_COMM |  CGDS_COMM  |
    145       |----------------------------------------------------|
    146       |        NSAV_COMM                                   |
    147       |----------------------------------------------------|
    148                   |                     PROD_COMM          |
    149                   |----------------------------------------|
    150    
    151       For Endowments,
    152       |-------------------------|
    153       | ENDW_COMM               |
    154       |-------------------------|
    155       | ENDWM_COMM | ENDWS_COMM |
    156       |-------------------------|
    157       | NAEZ_COMM    | AEZ_COMM |
    158       |-------------------------|
    159   >!
    160    
    161    
    162   Coefficient
    163       VERNUM # version of GTAP data #;
    164   Read
    165       VERNUM from file GTAPDATA header "DVER";
    166   Update (change)
    167       VERNUM = 0.0; ! force it to be copied to update file !
    168    
    169   Set
    170       REG # regions in the model #
    171       maximum size 10 read elements from file GTAPSETS header "H1";
    172   Set
    173       TRAD_COMM # traded commodities #
    174       maximum size 10 read elements from file GTAPSETS header "H2";
    175    
    176    
    177   Set
    178       MARG_COMM # margin commodities #
    179       maximum size 10 read elements from file GTAPSETS header "MARG";
    180   Subset
    181       MARG_COMM is subset of TRAD_COMM;
    182   Set
    183       NMRG_COMM # non-margin commodities # = TRAD_COMM - MARG_COMM;
    184   Set
    185       CGDS_COMM # capital goods commodities #
    186       maximum size 1 read elements from file GTAPSETS header "H9";
    187   Set
    188       ENDW_COMM # endowment commodities #
    189       maximum size 5 read elements from file GTAPSETS header "H6";
    190   Set
    191       PROD_COMM # produced commodities # = TRAD_COMM union CGDS_COMM;
    192   Set
    193       DEMD_COMM # demanded commodities # = ENDW_COMM union TRAD_COMM;
    194   Set
    195       NSAV_COMM # non-savings commodities # = DEMD_COMM union CGDS_COMM;
    196   Subset
    197       PROD_COMM is subset of NSAV_COMM;
    198    
    199   !<
    200       Check for non-overlapping sets (users can't use the same name for elements
    201       of ENDW_COMM, TRAD_COMM or CGDS_COMM).
    202   >!
    203    
    204   Coefficient
    205       SIZE_TRAD # size of TRAD_COMM set #;
    206   Formula
    207       SIZE_TRAD = sum(i,TRAD_COMM, 1);
    208   Coefficient
    209       SIZE_ENDW # size of ENDW_COMM set #;
    210   Formula
    211       SIZE_ENDW = sum(i,ENDW_COMM, 1);
    212   Coefficient
    213       SIZE_DEMD # size of DEMD_COMM set #;
    214   Formula
    215       SIZE_DEMD = sum(i,DEMD_COMM, 1);
    216   Assertion (initial)
    217       SIZE_DEMD = SIZE_TRAD + SIZE_ENDW;
    218    
    219   Coefficient
    220       SIZE_CGDS # size of CGDS_COMM set #;
    221   Formula
    222       SIZE_CGDS = sum(i,CGDS_COMM, 1);
    223   Coefficient
    224       SIZE_PROD # size of PROD_COMM set #;
    225   Formula
    226       SIZE_PROD = sum(i,PROD_COMM, 1);
    227   Assertion (initial)
    228       SIZE_PROD = SIZE_TRAD + SIZE_CGDS;
    229    
    230   !<
    231       The sluggish endowments are now defined dynamically, based on the variable
    232       SLUG.  SLUG is a binary variable that is zero for mobile endowments and
    233       one for sluggish endowments.  We must define and read in this variable
    234       before proceeding further.
    235   >!
    236   Coefficient (integer,parameter) (all,i,ENDW_COMM)
    237       SLUG(i) # sluggish primary factor endowments #;
    238   Read
    239       SLUG from file GTAPPARM header "SLUG";
    240    
    241   Set
    242       ENDWS_COMM
    243       # sluggish endowment commodities # = (all,i,ENDW_COMM: SLUG(i)>0);
    244   Set
    245       ENDWM_COMM
    246       # mobile endowment commodities # = ENDW_COMM - ENDWS_COMM;
    247   Set
    248       ENDWC_COMM # capital endowment commodity # (capital);
    249   !<
    250       This single element set is defined for the sake of convenience.
    251   >!
    252   Subset
    253       ENDWC_COMM is subset of ENDW_COMM;
    254    
    255   !< GTAP-AEZ SETS!
    256    
    257   !< GTAP-AEZ SETS:
    258   Modeling agricultural demand for land (splitted in AEZs) requires breaking down
    259   the set of produced commodities (PROD_COMM) in land and non-land using produced
    260   commodities. The land using commodities, in turn, are broken down in forests,
    261   crops, and pasture-grown animals.
    262    
    263   A potential problem is that each of these sets can have different elements, de-
    264   pending ond the desired aggregation. For example, the first 13  GTAP sectors use
    265   land, so they are part of LAND_COMM. It is possible, that these 13 products are
    266   arbitrarily grouped, so we need a flexible mechanism that recognizes
    267   this and assigns the arbitray grouping to LAND_COMM. We accomplish this by
    268   defining the sets dynamically.>!
    269    
    270   !<Dynamic definition of the set of land-commodities>!
    271    
    272   Set !Typically this set is not read, but I need it for dynamic set definitions!
    273       DTRAD_COMM # traded commodities #
    274       maximum size 10 read elements from file GTAPSETS header "DH2";
    275    
    276   !Sectoral mapping from GTAP to model TRAD_COMM commodities is needed for other
    277   mapping subsets of TRAD_COMM onto the land comm, forests, crops, graze, etc.!
    278    
    279   Mapping G2TRAD_COMM from DTRAD_COMM to TRAD_COMM;
    280   Read (BY_ELEMENTS) G2TRAD_COMM from file GTAPSETS header "MCOM";
    281    
    282   !<Dynamic Agregated Land Commodity Set Definition>!
    283   Set
    284       DLAND_COMM #Land commodities in GTAP Version 7 that have Land rents#
    285       (pdr,wht,gro,v_f,osd,c_b,pfb,ocr,ctl,rmk,wol,frs);
    286    
    287   Subset DLAND_COMM is subset of DTRAD_COMM;
    288    
    289   COEFFICIENT (all,c,DTRAD_COMM) UNITVEC0(c) #Auxiliary unit vector#;
    290   FORMULA (all,c,DTRAD_COMM) UNITVEC0(c)=1;
    291    
    292   COEFFICIENT (all,i,TRAD_COMM) ISLAND(i) #Is a land Commodity?#;
    293   FORMULA (all,i,TRAD_COMM)
    294   ISLAND(i)= sum{c, DLAND_COMM: G2TRAD_COMM(c) eq i, UNITVEC0(c) };
    295    
    296   SET LAND_COMM = (all, i, TRAD_COMM : ISLAND(i)>0);
    297    
    298   MAPPING G2LAND_COMM from  DLAND_COMM to LAND_COMM;
    299   FORMULA (all,c,DLAND_COMM) G2LAND_COMM(c)=G2TRAD_COMM(c);
    300   Subset
    301       LAND_COMM is subset of PROD_COMM;
Declaration of 'LAND_COMM' as a SUBSET of 'PROD_COMM'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
    302   !<End of Dynamic Agregated Land Commodity Set Definition>!
    303    
    304   Set
    305       NLNDP_COMM # non-land produced commodities # = PROD_COMM - LAND_COMM;
    306    
    307   !<Other sets needed in the land nests>!
    308    
    309    
    310   !<Dynamic Agregated Crop Commodity Set Definition>!
    311   Set
    312       DCROP_COMM #The GTAP Crops#  (pdr,wht,gro,v_f,osd,c_b,pfb,ocr);
    313   Subset DCROP_COMM is subset of DTRAD_COMM;
    314   Subset DCROP_COMM is subset of DLAND_COMM;
    315    
    316   COEFFICIENT (all,c,DTRAD_COMM) UNITVEC(c) #Auxiliary unit vector#;
    317   FORMULA (all,c,DTRAD_COMM) UNITVEC(c)=1;
    318    
    319   COEFFICIENT (all,i,TRAD_COMM) ISCROP(i) #Is a crop Commodity?#;
    320   FORMULA (all,i,TRAD_COMM)
    321   ISCROP(i)= sum{c, DCROP_COMM: G2TRAD_COMM(c) eq i, UNITVEC(c) };
    322    
    323   SET CROP_COMM = (all, i, TRAD_COMM : ISCROP(i)>0);
    324    
    325   MAPPING G2CROP_COMM from  DCROP_COMM to CROP_COMM;
    326   FORMULA (all,c,DCROP_COMM) G2CROP_COMM(c)=G2TRAD_COMM(c);
    327   Subset
    328       CROP_COMM is subset of PROD_COMM;
Declaration of 'CROP_COMM' as a SUBSET of 'PROD_COMM'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
    329   Subset
    330       CROP_COMM is subset of LAND_COMM;
    331   !<End of Dynamic Agregated Crop Commodity Set Definition>!
    332    
    333   !<Dynamic Agregated Forest Commodity Set Definition>!
    334   Set    DFOREST_COMM #The GTAP Forests# (frs);
    335   Subset DFOREST_COMM is subset of DTRAD_COMM;
    336   Subset DFOREST_COMM is subset of DLAND_COMM;
    337    
    338   COEFFICIENT (all,i,TRAD_COMM) ISFOR(i) #Is a Forest Commodity?#;
    339   FORMULA (all,i,TRAD_COMM)
    340   ISFOR(i)= sum{c, DFOREST_COMM: G2TRAD_COMM(c) eq i, UNITVEC(c) };
    341    
    342   SET FOREST_COMM = (all, i, TRAD_COMM : ISFOR(i)>0);
    343    
    344   MAPPING G2FOREST_COM from  DFOREST_COMM to FOREST_COMM;
    345   FORMULA (all,c,DFOREST_COMM) G2FOREST_COM(c)=G2TRAD_COMM(c);
    346   Subset
    347       FOREST_COMM is subset of PROD_COMM;
Declaration of 'FOREST_COMM' as a SUBSET of 'PROD_COMM'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
    348   Subset
    349       FOREST_COMM is subset of LAND_COMM;
    350   !<End of Dynamic Agregated Forest Commodity Set Definition>!
    351    
    352    
    353   !<Dynamic Agregated Grazing Commodity Set Definition>!
    354   Set
    355       DGRAZE_COMM #The GTAP grazing livestock commodities#
    356           (ctl,rmk,wol);
    357   Subset DGRAZE_COMM is subset of DTRAD_COMM;
    358   Subset DGRAZE_COMM is subset of DLAND_COMM;
    359    
    360   COEFFICIENT (all,i,TRAD_COMM) ISGRAZE(i) #Is a Grazing Commodity?#;
    361   FORMULA (all,i,TRAD_COMM)
    362   ISGRAZE(i)= sum{c, DGRAZE_COMM: G2TRAD_COMM(c) eq i, UNITVEC(c) };
    363    
    364   SET GRAZE_COMM = (all, i, TRAD_COMM : ISGRAZE(i)>0);
    365    
    366   MAPPING G2GRAZE_COMM from  DGRAZE_COMM to GRAZE_COMM;
    367   FORMULA (all,c,DGRAZE_COMM) G2GRAZE_COMM(c)=G2TRAD_COMM(c);
    368   Subset
    369       GRAZE_COMM is subset of PROD_COMM;
Declaration of 'GRAZE_COMM' as a SUBSET of 'PROD_COMM'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
    370   Subset
    371       GRAZE_COMM is subset of LAND_COMM;
    372   !<End of Dynamic Agregated Grazing Commodity Set Definition>!
    373    
    374   Set
    375       AGRLAND_COMM # land-using agr commodities # = LAND_COMM - FOREST_COMM;
    376    
    377   Set !This is NLNDP_COMM + FOREST_COMM  -- see equatio FORLAND_SUPPLY!
    378       NAGLAND_COMM # non-agr land produced commodities # =
    379       PROD_COMM - AGRLAND_COMM;
    380    
    381   !<In turn, the land using commodities are produced using land (AEZz) and non-
    382   land endowments. Because we're modeling competition between AEZs directly we
    383   need to breakdown the set ENDW_COMM in AEZ_COMM and NAEZ_COMM>!
    384   Set
    385       AEZ_COMM # set of land endowments, disaggregated by AEZ #
    386       maximum size 18 read elements from file GTAPSETS header "AEZS";
    387   Subset
    388       AEZ_COMM is subset of ENDW_COMM;
    389   Subset
    390       AEZ_COMM is subset of ENDWS_COMM;
    391   Set
    392       NAEZ_COMM # set of non-aez endowments # = ENDW_COMM - AEZ_COMM;
    393   !<The supply of sluggish commodities by the regional household (ENDWS_COMM)
    394   also need to be differentiated between land and non-land endowments>!
    395   Set
    396       SNAEZ_COMM # non-land, sluggish commodities # = ENDWS_COMM - AEZ_COMM;
    397   Subset
    398       SNAEZ_COMM is subset of NAEZ_COMM;
    399    
    400   Set
    401       NCROP_COMM # non-crop commodities produced using land # =
    402       PROD_COMM - CROP_COMM;
    403    
    404   !<END OF GTAP-AEZ SETS>!
    405    
    406   !<END OF GTAP-AEZ SETS>!
    407    
    408   !<
    409       ----------------------------
    410       READ Statements of Base Data
    411       ----------------------------
    412    
    413       We read in here almost all the base data, and define variables and
    414       coefficients associated with them.  A few data arrays used each in a
    415       single module are read in those modules: VKB, VTMFSD, and DPARSUM.
    416    
    417       The READ statements are divided into six sections:
    418    
    419       Saving
    420       Government Consumption
    421       Private Consumption
    422       Firms
    423       Global Bank
    424       International Trade and Transport
    425    
    426       Since these are invariant for each solution of the model, they are termed
    427       coefficients.  Coefficients are assigned upper case to distinguish them
    428       from variables.  (This is purely cosmetic, as GEMPACK is not
    429       case-sensitive.) Variables in GEMPACK are assigned lower case labels to
    430       denote the fact that they are percentage changes.  In some cases, original
    431       levels values for selected variables are defined to permit the user to
    432       compare post-simulation levels values across several simulations.
    433    
    434       The updating command indicates how the new level of the coefficient will
    435       be computed based on the previous solution of the linearized equations.
    436       Note that the notation used in the update commands is a shorthand for
    437       total differentials of these coefficient values.  Thus, w * v indicates
    438       that we want to take the total differential of W * V, plug in the
    439       calculated values of w and v, and add this to the base level in order to
    440       obtain a revised value for this product.
    441   >!
    442    
    443    
    444   !<
    445       Saving
    446       ------
    447   >!
    448    
    449   Variable (all,r,REG)
    450       psave(r) # price of savings in region r #;
    451   Variable (all,r,REG)
    452       qsave(r) # regional demand for NET savings #;
    453   Coefficient (all,r,REG)
    454       SAVE(r) # expenditure on NET savings in region r valued at agent's prices #;
    455   Update (all,r,REG)
    456       SAVE(r) = psave(r) * qsave(r);
    457   Read
    458       SAVE from file GTAPDATA header "SAVE";
    459    
    460    
    461   !<
    462       Government Consumption
    463       ----------------------
    464   >!
    465    
    466   Variable (all,i,TRAD_COMM)(all,s,REG)
    467       pgd(i,s) # price of domestic i in government consumption in s #;
    468   Variable (orig_level=VDGM)(all,i,TRAD_COMM)(all,s,REG)
    469       qgd(i,s) # government hhld demand for domestic i in region s #;
    470   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    471       VDGA(i,r) # government consumption expenditure on domestic i in r #;
    472   Update (all,i,TRAD_COMM)(all,r,REG)
    473       VDGA(i,r) = pgd(i,r) * qgd(i,r);
    474   Read
    475       VDGA from file GTAPDATA header "VDGA";
    476    
    477   Variable (orig_level=1.0)(all,i,NSAV_COMM)(all,r,REG)
    478       pm(i,r) # market price of commodity i in region r #;
    479   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    480       VDGM(i,r) # government consumption expenditure on domestic i in r #;
    481   Update (all,i,TRAD_COMM)(all,r,REG)
    482       VDGM(i,r) = pm(i,r) * qgd(i,r);
    483   Read
    484       VDGM from file GTAPDATA header "VDGM";
    485    
    486   Variable (all,i,TRAD_COMM)(all,s,REG)
    487       pgm(i,s) # price of imports of i in government consumption in s #;
    488   Variable (orig_level=VIGM)(all,i,TRAD_COMM)(all,s,REG)
    489       qgm(i,s) # government hhld demand for imports of i in region s #;
    490   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    491       VIGA(i,r) # government consumption expenditure on imported i #;
    492   Update (all,i,TRAD_COMM)(all,r,REG)
    493       VIGA(i,r) = pgm(i,r) * qgm(i,r);
    494   Read
    495       VIGA from file GTAPDATA header "VIGA";
    496    
    497   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
    498       pim(i,r) # market price of composite import i in region r #;
    499   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    500       VIGM(i,r) # gov't consumption expenditure on i in r #;
    501   Update (all,i,TRAD_COMM)(all,r,REG)
    502       VIGM(i,r) = pim(i,r) * qgm(i,r);
    503   Read
    504       VIGM from file GTAPDATA header "VIGM";
    505    
    506    
    507   !<
    508       Private Consumption
    509       -------------------
    510   >!
    511    
    512   Variable (all,i,TRAD_COMM)(all,s,REG)
    513       ppd(i,s) # price of domestic i to private households in s #;
    514   Variable (orig_level=VDPM)(all,i,TRAD_COMM)(all,s,REG)
    515       qpd(i,s) # private hhld demand for domestic i in region s #;
    516   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    517       VDPA(i,r) # private consumption expenditure on domestic i in r #;
    518   Update (all,i,TRAD_COMM)(all,r,REG)
    519       VDPA(i,r) = ppd(i,r) * qpd(i,r);
    520   Read
    521       VDPA from file GTAPDATA header "VDPA";
    522    
    523   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    524       VDPM(i,r) # private consumption expenditure on domestic i in r #;
    525   Update (all,i,TRAD_COMM)(all,r,REG)
    526       VDPM(i,r) = pm(i,r) * qpd(i,r);
    527   Read
    528       VDPM from file GTAPDATA header "VDPM";
    529    
    530   Variable (all,i,TRAD_COMM)(all,s,REG)
    531       ppm(i,s) # price of imports of i by private households in s #;
    532   Variable (orig_level=VIPM)(all,i,TRAD_COMM)(all,s,REG)
    533       qpm(i,s) # private hhld demand for imports of i in region s #;
    534   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    535       VIPA(i,r) # private consumption expenditure on imported i in r #;
    536   Update (all,i,TRAD_COMM)(all,r,REG)
    537       VIPA(i,r) = ppm(i,r) * qpm(i,r);
    538   Read
    539       VIPA from file GTAPDATA header "VIPA";
    540    
    541   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    542       VIPM(i,r) # private consumption expenditure on i in r #;
    543   Update (all,i,TRAD_COMM)(all,r,REG)
    544       VIPM(i,r)= pim(i,r) * qpm(i,r);
    545   Read
    546       VIPM from file GTAPDATA header "VIPM";
    547    
    548    
    549   !<
    550       Firms
    551       -----
    552   >!
    553    
    554   Variable (all,i,NSAV_COMM)(all,r,REG)
    555       ps(i,r) # supply price of commodity i in region r #;
    556   Variable (orig_level=VOM)(all,i,NSAV_COMM)(all,r,REG)
    557       qo(i,r) # industry output of commodity i in region r #;
    558   Coefficient (ge 0)(all,i,ENDW_COMM)(all,r,REG)
    559       EVOA(i,r) # value of commodity i output in region r #;
    560   Update (all,i,ENDW_COMM)(all,r,REG)
    561       EVOA(i,r) = ps(i,r) * qo(i,r);
    562   Read
    563       EVOA from file GTAPDATA header "EVOA";
    564    
    565   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    566       pfe(i,j,r) # firms' price for endowment commodity i in ind. j, region r #;
    567   Variable (orig_level=VFM)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    568       qfe(i,j,r)  # demand for endowment i for use in ind. j in region r #;
    569   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    570       EVFA(i,j,r) # producer expenditure on i by j in r at agent's prices #;
    571   Update (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    572       EVFA(i,j,r) = pfe(i,j,r) * qfe(i,j,r);
    573   Read
    574       EVFA from file GTAPDATA header "EVFA";
    575    
    576   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    577       pfd(i,j,s) # price index for domestic purchases of i by j in region s #;
    578   Variable (orig_level=VDFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    579       qfd(i,j,s)  # domestic good i demanded by industry j in region s #;
    580   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    581       VDFA(i,j,r) # purchases of domestic i for use by j in region r #;
    582   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    583       VDFA(i,j,r) = pfd(i,j,r) * qfd(i,j,r);
    584   Read
    585       VDFA from file GTAPDATA header "VDFA";
    586    
    587   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    588       pfm(i,j,s) # price index for imports of i by j in region s #;
    589   Variable (orig_level=VIFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    590       qfm(i,j,s) # demand for i by industry j in region s #;
    591   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    592       VIFA(i,j,r) # purchases of imported i for use by j in region r #;
    593   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    594       VIFA(i,j,r) = pfm(i,j,r) * qfm(i,j,r);
    595   Read
    596       VIFA from file GTAPDATA header "VIFA";
    597    
    598   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    599       pmes(i,j,r) # market price of sluggish endowment i used by j in r #;
    600   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    601       VFM(i,j,r) # producer expenditure on i by j in r valued at mkt prices #;
    602   Update (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
    603       VFM(i,j,r) = pm(i,r) * qfe(i,j,r);
    604   Update (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    605       VFM(i,j,r) = pmes(i,j,r) * qfe(i,j,r);
    606   Read
    607       VFM from file GTAPDATA header "VFM";
    608    
    609   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    610       VIFM(i,j,r) # purchases of imports i for use by j in region r #;
    611   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    612       VIFM(i,j,r) = pim(i,r) * qfm(i,j,r);
    613   Read
    614       VIFM from file GTAPDATA header "VIFM";
    615    
    616   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    617       VDFM(i,j,r) # purchases of domestic i for use by j in region r #;
    618   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    619       VDFM(i,j,r) = pm(i,r) * qfd(i,j,r);
    620   Read
    621       VDFM from file GTAPDATA header "VDFM";
    622    
    623    
    624   !<
    625       Global Bank
    626       -----------
    627   >!
    628    
    629   Variable (all,r,REG)
    630       kb(r) # beginning-of-period capital stock in r #;
    631   Variable (all,r,REG)
    632       pcgds(r) # price of investment goods = ps("cgds",r) #;
    633   Coefficient (ge 0)(all,r,REG)
    634       VDEP(r) # value of capital depeciation in r (exogenous) #;
    635   Update (all,r,REG)
    636       VDEP(r) = kb(r) * pcgds(r);
    637   Read
    638       VDEP from file GTAPDATA header "VDEP";
    639   !<
    640       Value of capital depreciation is used to compute the (exogenous)
    641       depreciation rate and therefore does not appear in update.
    642   >!
    643    
    644    
    645   !<
    646       International Trade and Transport
    647       ---------------------------------
    648   >!
    649    
    650   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    651       pms(i,r,s) # domestic price for good i supplied from r to region s #;
    652   Variable (orig_level=VXMD)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    653       qxs(i,r,s) # export sales of commodity i from r to region s #;
    654   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    655       VIMS(i,r,s) # imports of i from r to s valued at domestic mkt prices #;
    656   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    657       VIMS(i,r,s) = pms(i,r,s) * qxs(i,r,s);
    658   Read
    659       VIMS from file GTAPDATA header "VIMS";
    660    
    661   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    662       pcif(i,r,s) # CIF world price of commodity i supplied from r to s #;
    663   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    664       VIWS(i,r,s) # imports of i from r to s valued CIF (tradeables only) #;
    665   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    666       VIWS(i,r,s) = pcif(i,r,s) * qxs(i,r,s);
    667   Read
    668       VIWS from file GTAPDATA header "VIWS";
    669    
    670   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    671       pfob(i,r,s) # FOB world price of commodity i supplied from r to s #;
    672   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    673       VXWD(i,r,s) # exports of i from r to s valued FOB (tradeables only) #;
    674   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    675       VXWD(i,r,s) = pfob(i,r,s) * qxs(i,r,s);
    676   Read
    677       VXWD from file GTAPDATA header "VXWD";
    678    
    679   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    680       VXMD(i,r,s)
    681       # exports of i from r to s valued at mkt prices (tradeables only) #;
    682   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    683       VXMD(i,r,s) = pm(i,r) * qxs(i,r,s);
    684   Read
    685       VXMD from file GTAPDATA header "VXMD";
    686    
    687   Variable (orig_level=VST)(all,m,MARG_COMM)(all,r,REG)
    688       qst(m,r) # sales of m from r to international transport #;
    689   Coefficient (ge 0)(all,m,MARG_COMM)(all,r,REG)
    690       VST(m,r)
    691       # exprts of m from r for int'l trnsport valued at mkt p (tradeables only) #;
    692   Update (all,m,MARG_COMM)(all,r,REG)
    693       VST(m,r) = pm(m,r) * qst(m,r);
    694   Read
    695       VST from file GTAPDATA header "VST";
    696    
    697    
    698   !<
    699       ----------------
    700       Common VARIABLES
    701       ----------------
    702    
    703       Common variables are defined as variables which are used in more than one
    704       module.  For example, the variable y(r) is used in the Goverment
    705       Consumption, Private Consumption, Firms, Regional Household and
    706       Investment, Global Bank and Savings modules.  Appendices, e.g., Summary
    707       Indices, are not included in this definition.
    708   >!
    709    
    710   Variable (all,r,REG)
    711       y(r) # regional household income in region r #;
    712   Variable (all,r,REG)
    713       pop(r) # regional population #;
    714   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    715       qoes(i,j,r) # supply of sluggish endowment i used by j in r #;
    716   Variable (all,i,ENDW_COMM)(all,r,REG)
    717       endwslack(i,r) # slack variable in endowment market clearing condition #;
    718   !<
    719       This is exogenous, unless the user wishes to employ a partial equilibrium
    720       closure in which the price of one or more of the primary factors is fixed.
    721   >!
    722    
    723   Variable (all,r,REG)
    724       pgov(r) # price index for gov't hhld expenditure in region r #;
    725   Variable (all,r,REG)
    726       yg(r)
    727       # regional government consumption expenditure in region r #;
    728   Variable (all,r,REG)
    729       ug(r) # per capita utility from gov't expend. in region r #;
    730   Variable (all,r,REG)
    731       ppriv(r)
    732       # price index for private consumption expenditure in region r #;
    733   Variable (all,r,REG)
    734       uepriv(r)
    735       # elasticity of cost wrt utility from private consumption #;
    736   Variable (all,r,REG)
    737       yp(r) # regional private consumption expenditure in region r #;
    738   Variable (all,r,REG)
    739       up(r) # per capita utility from private expend. in region r #;
    740   Variable (orig_level=1) (all,i,NSAV_COMM)(all,r,REG)
    741       to(i,r) # output (or income) tax in region r #;
    742   ![[! UB edits starts !]]!
    743    
    744   Variable (orig_level=1) (all,i,NSAV_COMM)(all,r,REG)
    745       to_1(i,r) # output (or income) tax in region r : SNSAV_COMM #;
    746    
    747   Variable (orig_level=1) (all,r,REG)
    748       to_2(r) # output (or income) tax in region r : AEZ_COMM #;
    749    
    750   Equation E_to_1 # to equation NSAV_COMM # (all,i,NSAV_COMM)(all,r,REG)
    751       to(i,r) = to_1(i,r) + IF(i in AEZ_COMM, to_2(r));
    752    
    753   ![[! UB edits stops !]]!
    754    
    755    
    756   !<
    757       Note:  It is important that the user NOT shock the tax on capital goods
    758       output, as this will cause an inconsistency in the update relationship for
    759       VOM(cgds).
    760   >!
    761   Variable (orig_level=VIM)(all,i,TRAD_COMM)(all,s,REG)
    762       qim(i,s) # aggregate imports of i in region s, market price weights #;
    763   Variable
    764       globalcgds # global supply of capital goods for NET investment #;
    765   Variable
    766       pcgdswld # world average price of capital goods (net investment weights) #;
    767    
    768   !<
    769       The following variables could be dropped when converting to levels
    770       equation for income.  They are only needed for the linearized equation.
    771       The idea here is to look at the ratio of taxes to income in order to
    772       preserve homogeneity in prices.  (We could also look at changes in tax
    773       revenue, but then a uniform price increase would change this variable.)
    774       Obviously a simple percentage change variable doesn't work, since many
    775       taxes are initially zero.  The basic logic of this approach is as follows:
    776    
    777       Let R be the ratio of taxes to income: R = T/Y, then:
    778           dR = d(T/Y) = R(t - y)/100
    779       multiply through by Y to get:
    780           YdR = dT - Ty/100
    781       This ratio change is computed for each tax type and for total taxes.  Then
    782       the change in tax revenue itself may be computed as:
    783           dT = YdR + Ty/100
    784       in order to determine regional income.
    785   >!
    786    
    787   Variable (change) (all,r,REG)
    788       del_taxrgc(r) # change in ratio of government consumption tax to INCOME #;
    789   Variable (change) (all,r,REG)
    790       del_taxrpc(r) # change in ratio of private consumption tax to INCOME #;
    791   Variable (change) (all,r,REG)
    792       del_taxriu(r) # change in ratio of tax on intermediate usage to INCOME #;
    793   Variable (change) (all,r,REG)
    794       del_taxrfu(r) # change in ratio of tax on primary factor usage to INCOME #;
    795   Variable (change) (all,r,REG)
    796       del_taxrout(r) # change in ratio of output tax to INCOME #;
    797   Variable (change) (all,r,REG)
    798       del_taxrexp(r) # change in ratio of export tax to INCOME #;
    799   Variable (change) (all,r,REG)
    800       del_taxrimp(r) # change in ratio of import tax to INCOME #;
    801   Variable (change) (all,r,REG)
    802       del_taxrinc(r) # change in ratio of income tax to INCOME #;
    803    
    804    
    805   !<
    806       -------------------
    807       Common COEFFICIENTS
    808       -------------------
    809    
    810       Key Derivatives of the Base Data
    811       Regional Expenditure and Income
    812       Indirect Tax Receipts
    813       Miscellaneous Coefficients
    814    
    815       Common Coefficients are defined as coefficients which are used in more
    816       than one module.  For example, ESUBD(i) is used in the Goverment
    817       Household, Private Household, and Firms modules.
    818   >!
    819    
    820    
    821   !<
    822       Key Derivatives of the Base Data
    823       --------------------------------
    824   >!
    825    
    826   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
    827       VFA(i,j,r) # producer expenditure on i by j in r valued at agent's prices #;
    828   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    829       VFA(i,j,r) = EVFA(i,j,r);
    830   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    831       VFA(i,j,s) = VDFA(i,j,s) + VIFA(i,j,s);
    832    
    833   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    834       VOA(i,r) # value of commodity i output in region r at agent's prices #;
    835   Formula (all,i,ENDW_COMM)(all,r,REG)
    836       VOA(i,r) = EVOA(i,r);
    837   Formula (all,i,PROD_COMM)(all,r,REG)
    838       VOA(i,r) = sum(j,DEMD_COMM, VFA(j,i,r));
    839    
    840   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    841       VDM(i,r) # domestic sales of i in r at mkt prices (tradeables only) #;
    842   Formula (all,i,TRAD_COMM)(all,r,REG)
    843       VDM(i,r) = VDPM(i,r) + VDGM(i,r) + sum(j,PROD_COMM, VDFM(i,j,r));
    844    
    845   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    846       VOM(i,r) # value of commodity i output in region r at market prices #;
    847   Formula (all,i,ENDW_COMM)(all,r,REG)
    848       VOM(i,r) = sum(j,PROD_COMM, VFM(i,j,r));
    849   Formula (all,m,MARG_COMM)(all,r,REG)
    850       VOM(m,r) = VDM(m,r) + sum(s,REG, VXMD(m,r,s)) + VST(m,r);
    851   Formula (all,i,NMRG_COMM)(all,r,REG)
    852       VOM(i,r) = VDM(i,r) + sum(s,REG, VXMD(i,r,s));
    853   Formula (all,h,CGDS_COMM)(all,r,REG)
    854       VOM(h,r) = VOA(h,r);
    855    
    856    
    857   !<
    858       Regional Expenditure and Income
    859       -------------------------------
    860    
    861       Regional income is allocated between private consumption expenditure,
    862       government consumption expenditure, and saving.
    863    
    864    
    865       Expenditure of Regional Household
    866       .................................
    867    
    868                  Regional household(h.h.)
    869                   Expenditure = Income
    870                            _/|\_
    871                          _/  |  \_
    872                        _/    |    \_
    873                      _/      |      \_
    874                    _/        |        \_
    875          Private h.h.        |        Government h.h.
    876          ( PRIVEXP )         |          ( GOVEXP )
    877             _/\_             |              _/\_
    878           _/    \_           |            _/    \_
    879          /        \          |           /        \
    880       Domestic  Imported   Savings    Domestic    Imported
    881        Goods     Goods     ( SAVE )    Goods       Goods
    882       ( VDPA )  ( VIPA )              ( VDGA )    ( VIGA )
    883    
    884       Note: The coefficients at the ends of branches are
    885             Base Data, e.g., VDPA, SAVE.
    886   >!
    887    
    888   ! government consumption expenditure, GOVEXP !
    889   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    890       VGA(i,r) # government consn expenditure on i in r at agent's prices #;
    891   Formula (all,i,TRAD_COMM)(all,s,REG)
    892       VGA(i,s) = VDGA(i,s) + VIGA(i,s);
    893   Coefficient (all,r,REG)
    894       GOVEXP(r) # government expenditure in region r #;
    895   Formula (all,r,REG)
    896       GOVEXP(r) = sum(i,TRAD_COMM, VGA(i,r));
    897    
    898   ! private consumption expenditure, PRIVEXP !
    899   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    900       VPA(i,r) # private hhld expenditure on i in r valued at agent's prices #;
    901   Formula (all,i,TRAD_COMM)(all,s,REG)
    902       VPA(i,s) = VDPA(i,s) + VIPA(i,s);
    903   Coefficient (all,r,REG)
    904       PRIVEXP(r) # private consumption expenditure in region r #;
    905   Formula (all,r,REG)
    906       PRIVEXP(r) = sum(i,TRAD_COMM, VPA(i,r));
    907    
    908   ! aggregate expenditure + saving = aggregate income !
    909   Coefficient (all,r,REG)
    910       INCOME(r) # level of expenditure, which equals NET income in region r #;
    911   Formula (all,r,REG)
    912       INCOME(r) = PRIVEXP(r) + GOVEXP(r) + SAVE(r) ;
    913    
    914   ! aggregate expenditure + saving = aggregate income !
    915   Variable (levels) (all,r,REG)
    916       INCOME_track(r) # tracking level of expenditure #;
    917   Formula (initial) (all,r,REG) INCOME_track(r) = INCOME(r);
    918        Equation E_INCOME_track (all,r,REG)
    919        p_INCOME_track(r) = y(r);
    920    
    921    
    922    
    923   !<
    924       Indirect Tax Receipts
    925       ---------------------
    926   >!
    927    
    928   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    929       DGTAX(i,r) # tax on government consumption of domestic good i in region r #;
    930   Formula (all,i,TRAD_COMM)(all,r,REG)
    931       DGTAX(i,r) = VDGA(i,r) - VDGM(i,r);
    932   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    933       IGTAX(i,r) # tax on government consumption of imported good i in region r #;
    934   Formula (all,i,TRAD_COMM)(all,r,REG)
    935       IGTAX(i,r) = VIGA(i,r) - VIGM(i,r);
    936   Coefficient (all,r,REG)
    937       TGC(r) # government consumption tax payments in r #;
    938   Formula (all,r,REG)
    939       TGC(r) = sum(i,TRAD_COMM, DGTAX(i,r) + IGTAX(i,r));
    940    
    941   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    942       DPTAX(i,r) # tax on private consumption of domestic good i in region r #;
    943   Formula (all,i,TRAD_COMM)(all,r,REG)
    944       DPTAX(i,r) = VDPA(i,r) - VDPM(i,r);
    945   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    946       IPTAX(i,r) # tax on private consumption of imported good i in region r #;
    947   Formula (all,i,TRAD_COMM)(all,r,REG)
    948       IPTAX(i,r) = VIPA(i,r) - VIPM(i,r);
    949   Coefficient (all,r,REG)
    950       TPC(r) # private consumption tax payments in r #;
    951   Formula (all,r,REG)
    952       TPC(r) = sum(i,TRAD_COMM, DPTAX(i,r) + IPTAX(i,r));
    953    
    954   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    955       DFTAX(i,j,r) # tax on use of domestic intermediate good i by j in r #;
    956   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    957       DFTAX(i,j,r) = VDFA(i,j,r) - VDFM(i,j,r);
    958   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    959       IFTAX(i,j,r) # tax on use of imported intermediate good i by j in r #;
    960   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    961       IFTAX(i,j,r) = VIFA(i,j,r) - VIFM(i,j,r);
    962   Coefficient (all,r,REG)
    963       TIU(r) # firms' tax payments on intermediate goods usage in r #;
    964   Formula (all,r,REG)
    965       TIU(r) = sum(i,TRAD_COMM, sum(j,PROD_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));
    966    
    967   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    968       ETAX(i,j,r) # tax on use of endowment good i by industry j in region r #;
    969   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    970       ETAX(i,j,r) = VFA(i,j,r) - VFM(i,j,r);
    971   Coefficient (all,r,REG)
    972       TFU(r) # firms' tax payments on primary factor usage in r #;
    973   Formula (all,r,REG)
    974       TFU(r) = sum(i,ENDW_COMM, sum(j,PROD_COMM, ETAX(i,j,r)));
    975    
    976   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    977       PTAX(i,r) # output tax on good i in region r #;
    978   Formula (all,i,NSAV_COMM)(all,r,REG)
    979       PTAX(i,r) = VOM(i,r) - VOA(i,r);
    980   Coefficient (all,r,REG)
    981       TOUT(r) # production tax payments in r #;
    982   Formula (all,r,REG)
    983       TOUT(r) = sum(i,PROD_COMM, PTAX(i,r));
    984    
    985   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    986       XTAXD(i,r,s) # tax on exports of good i from source r to destination s #;
    987   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    988       XTAXD(i,r,s) = VXWD(i,r,s) - VXMD(i,r,s);
    989   Coefficient (all,r,REG)
    990       TEX(r) # export tax payments in r #;
    991   Formula (all,r,REG)
    992       TEX(r) = sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s)));
    993    
    994   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    995       MTAX(i,r,s) # tax on imports of good i from source r in destination s #;
    996   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    997       MTAX(i,r,s) = VIMS(i,r,s) - VIWS(i,r,s);
    998   Coefficient (all,r,REG)
    999       TIM(r) # import tax payments in r #;
   1000   Formula (all,r,REG)
   1001       TIM(r) = sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r)));
   1002    
   1003    
   1004   !<
   1005       Miscellaneous Coefficients
   1006       --------------------------
   1007   >!
   1008    
   1009   ! domestic/imported substitution elasticity !
   1010   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
   1011       ESUBD(i,r)
   1012       # region-generic el. of sub. domestic/imported for all agents #;
   1013   Read
   1014       ESUBD from file GTAPPARM header "ESBD";
   1015    
   1016   ! net global investment expenditure !
   1017   Coefficient (all,r,REG)
   1018       REGINV(r) # regional GROSS investment in r (value of "cgds" output) #;
   1019   Formula (all,r,REG)
   1020       REGINV(r) = sum(k,CGDS_COMM, VOA(k,r));
   1021   Coefficient (all,r,REG)
   1022       NETINV(r) # regional NET investment in region r #;
   1023   Formula (all,r,REG)
   1024       NETINV(r) = sum(k,CGDS_COMM, VOA(k,r)) - VDEP(r);
   1025   Coefficient
   1026       GLOBINV # global expenditures on net investment #;
   1027   Formula
   1028       GLOBINV = sum(r,REG, NETINV(r));
   1029    
   1030   ! elasticity of cost wrt utility from private consumption !
   1031   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1032       CONSHR(i,r) # share of private hhld consumption devoted to good i in r #;
   1033   Formula (all,i,TRAD_COMM)(all,r,REG)
   1034       CONSHR(i,r) = VPA(i,r) / sum(k,TRAD_COMM, VPA(k,r));
   1035   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
   1036       INCPAR(i,r)
   1037       # expansion parameter in the CDE minimum expenditure function #;
   1038   Read
   1039       INCPAR from file GTAPPARM header "INCP";
   1040   Coefficient (all,r,REG)
   1041       UELASPRIV(r)
   1042       # elasticity of cost wrt utility from private consumption #;
   1043   Formula (all,r,REG)
   1044       UELASPRIV(r) = sum(i,TRAD_COMM, CONSHR(i,r) * INCPAR(i,r));
   1045    
   1046    
   1047   !<
   1048       =======
   1049       Modules
   1050       =======
   1051    
   1052       1. Government Consumption
   1053       2. Private Consumption
   1054       3. Firms
   1055       4. Investment, Global Bank, and Savings
   1056       5. International Trade
   1057       6. International Transport Services
   1058       7. Regional Household
   1059       8. Equilibrium Conditions
   1060   >!
   1061    
   1062    
   1063   !<
   1064       -------------------------
   1065       1. Government Consumption
   1066       -------------------------
   1067    
   1068       1-0. Module-Specific Variables
   1069       1-1. Demands for Composite Goods
   1070       1-2. Composite Tradeables
   1071   >!
   1072    
   1073    
   1074   !<
   1075       1-0. Module-Specific Variables
   1076       ------------------------------
   1077    
   1078       only used in this Government Consumption module
   1079   >!
   1080    
   1081   Variable (all,i,TRAD_COMM)(all,r,REG)
   1082       pg(i,r) # government consumption price for commodity i in region r #;
   1083   Variable (all,i,TRAD_COMM)(all,r,REG)
   1084       qg(i,r) # government hhld demand for commodity i in region r #;
   1085    
   1086    
   1087   !<
   1088       1-1. Demands for Composite Goods
   1089       --------------------------------
   1090   >!
   1091    
   1092   Equation GPRICEINDEX
   1093   # definition of price index for aggregate gov't purchases (HT 40) #
   1094   (all,r,REG)
   1095       pgov(r) = sum(i,TRAD_COMM, [VGA(i,r) / GOVEXP(r)] * pg(i,r));
   1096    
   1097   Equation GOVDMNDS
   1098   # government consumption demands for composite commodities (HT 41) #
   1099   (all,i,TRAD_COMM)(all,r,REG)
   1100       qg(i,r) - pop(r) = ug(r) - [pg(i,r) - pgov(r)];
   1101    
   1102   Equation GOVU
   1103   # utility from government consumption in r #
   1104   (all,r,REG)
   1105       yg(r) - pop(r) = pgov(r) + ug(r);
   1106    
   1107    
   1108   !<
   1109       1-2. Composite Tradeables
   1110       -------------------------
   1111   >!
   1112    
   1113   Variable (all,i,TRAD_COMM)(all,r,REG)
   1114       tgd(i,r) # tax on domestic i purchased by government hhld in r #;
   1115    
   1116   Variable (all,i,TRAD_COMM)(all,r,REG)
   1117       tgm(i,r) # tax on imported i purchased by gov't hhld in r #;
   1118    
   1119   Equation GHHDPRICE
   1120   # eq'n links domestic market and government consumption prices (HT 19) #
   1121   (all,i,TRAD_COMM)(all,r,REG)
   1122       pgd(i,r) = tgd(i,r) + pm(i,r);
   1123    
   1124   Equation GHHIPRICES
   1125   # eq'n links domestic market and government consumption prices (HT 22) #
   1126   (all,i,TRAD_COMM)(all,r,REG)
   1127       pgm(i,r) = tgm(i,r) + pim(i,r);
   1128    
   1129   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   1130       GMSHR(i,s) # share of imports for gov't hhld at agent's prices #;
   1131   Formula (all,i,TRAD_COMM)(all,s,REG)
   1132       GMSHR(i,s) = VIGA(i,s) / VGA(i,s);
   1133    
   1134   Equation GCOMPRICE
   1135   # government consumption price for composite commodities (HT 42) #
   1136   (all,i,TRAD_COMM)(all,s,REG)
   1137       pg(i,s) =  GMSHR(i,s) * pgm(i,s) + [1 - GMSHR(i,s)] * pgd(i,s);
   1138    
   1139   Equation GHHLDAGRIMP
   1140   # government consumption demand for aggregate imports (HT 43) #
   1141   (all,i,TRAD_COMM)(all,s,REG)
   1142       qgm(i,s) = qg(i,s) + ESUBD(i,s) * [pg(i,s) - pgm(i,s)];
   1143    
   1144   Equation GHHLDDOM
   1145   # government consumption demand for domestic goods (HT 44) #
   1146   (all,i,TRAD_COMM)(all,s,REG)
   1147       qgd(i,s) = qg(i,s) + ESUBD(i,s) * [pg(i,s) - pgd(i,s)];
   1148    
   1149   Equation TGCRATIO
   1150   # change in ratio of government consumption tax payments to regional income #
   1151   (all,r,REG)
   1152       100.0 * INCOME(r) * del_taxrgc(r) + TGC(r) * y(r)
   1153           = sum(i,TRAD_COMM,
   1154               VDGA(i,r) * tgd(i,r) + DGTAX(i,r) * [pm(i,r) + qgd(i,r)])
   1155           + sum(i,TRAD_COMM,
   1156               VIGA(i,r) * tgm(i,r) + IGTAX(i,r) * [pim(i,r) + qgm(i,r)]);
   1157    
   1158    
   1159   !<
   1160       -----------------------------
   1161       2. Private Consumption Module
   1162       -----------------------------
   1163    
   1164       2-0. Module-Specific Variables
   1165       2-1. Utility from Private Consumption
   1166       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
   1167       2-3. Composite Tradeables
   1168   >!
   1169    
   1170    
   1171   !<
   1172       2-0. Module-Specific Variables
   1173       ------------------------------
   1174    
   1175       only used in this Private Consumption module
   1176   >!
   1177    
   1178   Variable (all,i,TRAD_COMM)(all,r,REG)
   1179       pp(i,r) # private consumption price for commodity i in region r #;
   1180   Variable (all,i,TRAD_COMM)(all,r,REG)
   1181       qp(i,r) # private hhld demand for commodity i in region r #;
   1182    
   1183    
   1184   !<
   1185       2-1. Utility from Private Consumption
   1186       -------------------------------------
   1187   >!
   1188    
   1189   Equation PHHLDINDEX
   1190   # price index for private consumption expenditure #
   1191   (all,r,REG)
   1192       ppriv(r) = sum(i,TRAD_COMM, CONSHR(i,r) * pp(i,r));
   1193    
   1194   Equation PRIVATEU
   1195   # computation of utility from private consumption in r (HT 45) #
   1196   (all,r,REG)
   1197       yp(r) - pop(r) = ppriv(r) + UELASPRIV(r) * up(r);
   1198   !<
   1199       This equation determines private consumption utility for a representative
   1200       household in region r, based on the per capita private expenditure
   1201       function.  (HT 45)
   1202   >!
   1203    
   1204   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1205       XWCONSHR(i,r)
   1206       # expansion-parameter-weighted consumption share #;
   1207   Formula (all,i,TRAD_COMM)(all,r,REG)
   1208       XWCONSHR(i,r) = CONSHR(i,r) * INCPAR(i,r) / UELASPRIV(r);
   1209    
   1210   Equation UTILELASPRIV
   1211   # elasticity of expenditure wrt utility from private consumption #
   1212   (all,r,REG)
   1213       uepriv(r)
   1214           = sum(i,TRAD_COMM, XWCONSHR(i,r) * [pp(i,r) + qp(i,r) - yp(r)]);
   1215    
   1216    
   1217   !<
   1218       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
   1219       --------------------------------------------------------------------
   1220   >!
   1221    
   1222   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
   1223       SUBPAR(i,r)
   1224       # substitution parameter in CDE minimum expenditure function #;
   1225   Read
   1226       SUBPAR from file GTAPPARM header "SUBP";
   1227    
   1228   !<
   1229       (HT F1 - F3)
   1230   >!
   1231   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1232       ALPHA(i,r) # 1 - sub. parameter in the CDE minimum expenditure function #;
   1233   Formula (all,i,TRAD_COMM)(all,r,REG)
   1234       ALPHA(i,r) = 1 - SUBPAR(i,r);
   1235    
   1236   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1237       APE(i,k,r) # Allen partial elst. of sub. between composite i and k in r #;
   1238   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1239       APE(i,k,r)
   1240           = ALPHA(i,r) + ALPHA(k,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r));
   1241   Formula (all,i,TRAD_COMM)(all,r,REG)
   1242       APE(i,i,r)
   1243           = 2.0 * ALPHA(i,r)
   1244           - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))
   1245           - ALPHA(i,r) / CONSHR(i,r);
   1246    
   1247   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1248       EY(i,r) # income elast. of private hhld demand for i in r (HT F4) #;
   1249   Formula (all,i,TRAD_COMM)(all,r,REG)
   1250       EY(i,r)
   1251           =   [1.0 / sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r))]
   1252               * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   1253                   + sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   1254           + [ALPHA(i,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))];
   1255    
   1256   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1257       EP(i,k,r)
   1258       # uncomp. elast. of private hhld demand for i wrt price of k in r (HT F5) #;
   1259   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1260       EP(i,k,r) = 0;
   1261   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1262       EP(i,k,r) = [APE(i,k,r) - EY(i,r)] * CONSHR(k,r);
   1263    
   1264   Equation PRIVDMNDS
   1265   # private consumption demands for composite commodities (HT 46) #
   1266   (all,i,TRAD_COMM)(all,r,REG)
   1267       qp(i,r) - pop(r)
   1268           = sum(k,TRAD_COMM, EP(i,k,r) * pp(k,r)) + EY(i,r) * [yp(r) - pop(r)];
   1269   !<
   1270       Private consumption demands for composite commodities.  Demand system is
   1271       on a per capita basis.  Here, yp(r) - pop(r) is % change in per capita
   1272       income.  (HT 46)
   1273   >!
   1274    
   1275    
   1276   !<
   1277       2-3. Composite Tradeables
   1278       -------------------------
   1279   >!
   1280    
   1281   Variable (all,r,REG)
   1282       tp(r) # comm.-, source-gen. shift in tax on private cons. #;
   1283   !<
   1284       The variable tp(r) can be swapped with del_ttaxr(r) in order to generate a
   1285       tax replacement scenario, whereby taxes remain a constant share of
   1286       national income.
   1287   >!
   1288    
   1289   Variable (all,i,TRAD_COMM)(all,r,REG)
   1290       tpd(i,r) # comm.-, source-spec. shift in tax on private cons. of dom. #;
   1291   Variable (all,i,TRAD_COMM)(all,r,REG)
   1292       atpd(i,r) # power of tax on domestic i purchased by private hhld in r #;
   1293   Equation TPDSHIFT
   1294   # permits uniform consumption tax change #
   1295   (all,i,TRAD_COMM)(all,r,REG)
   1296       atpd(i,r) = tpd(i,r) + tp(r);
   1297    
   1298   Equation PHHDPRICE
   1299   # eq'n links domestic market and private consumption prices (HT 18) #
   1300   (all,i,TRAD_COMM)(all,r,REG)
   1301       ppd(i,r) = atpd(i,r) + pm(i,r);
   1302    
   1303   Variable (all,i,TRAD_COMM)(all,r,REG)
   1304       tpm(i,r) # comm.-, source-spec. shift in tax on private cons. of imp. #;
   1305   Variable (all,i,TRAD_COMM)(all,r,REG)
   1306       atpm(i,r) # power of tax on imported i purchased by private hhld in r #;
   1307   Equation TPMSHIFT
   1308   # permits uniform consumption tax change #
   1309   (all,i,TRAD_COMM)(all,r,REG)
   1310       atpm(i,r) = tpm(i,r) + tp(r);
   1311    
   1312   Equation PHHIPRICES
   1313   # eq'n links domestic market and private consumption prices (HT 21) #
   1314   (all,i,TRAD_COMM)(all,r,REG)
   1315       ppm(i,r) = atpm(i,r) + pim(i,r);
   1316    
   1317   Equation TPCRATIO
   1318   # change in ratio of private consumption tax payments to regional income #
   1319   (all,r,REG)
   1320       100.0 * INCOME(r) * del_taxrpc(r) + TPC(r) * y(r)
   1321           = sum(i,TRAD_COMM,
   1322               VDPA(i,r) * atpd(i,r) + DPTAX(i,r) * [pm(i,r) + qpd(i,r)])
   1323           + sum(i,TRAD_COMM,
   1324               VIPA(i,r) * atpm(i,r) + IPTAX(i,r) * [pim(i,r) + qpm(i,r)]);
   1325    
   1326   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   1327       PMSHR(i,s) # share of imports for priv hhld at agent's prices #;
   1328   Formula (all,i,TRAD_COMM)(all,s,REG)
   1329       PMSHR(i,s) = VIPA(i,s) / VPA(i,s);
   1330    
   1331   Equation PCOMPRICE
   1332   # private consumption price for composite commodities (HT 47) #
   1333   (all,i,TRAD_COMM)(all,s,REG)
   1334       pp(i,s) = PMSHR(i,s) * ppm(i,s) + [1 - PMSHR(i,s)] * ppd(i,s);
   1335    
   1336   Equation PHHLDDOM
   1337   # private consumption demand for domestic goods (HT 48) #
   1338   (all,i,TRAD_COMM)(all,s,REG)
   1339       qpd(i,s) = qp(i,s) + ESUBD(i,s) * [pp(i,s) - ppd(i,s)];
   1340    
   1341   Equation PHHLDAGRIMP
   1342   # private consumption demand for aggregate imports (HT 49) #
   1343   (all,i,TRAD_COMM)(all,s,REG)
   1344       qpm(i,s) = qp(i,s) + ESUBD(i,s) * [pp(i,s) - ppm(i,s)];
   1345    
   1346    
   1347   !<
   1348       ---------
   1349       3. Firms
   1350       ---------
   1351    
   1352       We now turn to the behavioral equations for firms.  The following picture
   1353       describes factor demands.  The first set of equations describe demands for
   1354       primary factors.  (See table 4 of Hertel and Tsigas.)
   1355    
   1356       Production structure
   1357       --------------------
   1358    
   1359                                qo(j,r)  [ao(j,r)]
   1360                                /\
   1361                               /  \  <----- CES
   1362                              /    \
   1363                             /      \
   1364                            /        \
   1365         [ava(j,r)]  qva(j,r)        qf(i,j,r)  [af(i,j,r)]
   1366                     /|\                    /\
   1367    CES ----->      / | \                  /  \  <------ CES
   1368                   /  |  \                /    \
   1369                  /   |   \              /      \
   1370                 /    |    \            /        \
   1371             Land   Labor  Capital  Domestic     Foreign
   1372                  qfe(i,j,r)         qfd(i,j,r)  qfm(i,j,r)
   1373                [afe(i,j,r)]
   1374    
   1375    
   1376    
   1377       3-0. Module-Specific Variables
   1378       3-1. Total Output Nest
   1379       3-2. Composite Intermediates Nest
   1380       3-3. Value-Added Nest
   1381       3-4. Zero Profits Equations
   1382   >!
   1383    
   1384    
   1385   !<
   1386       3-0. Module-Specific Variables
   1387       ------------------------------
   1388    
   1389       only used in this Firms module or the Summary Indices or Welfare
   1390       appendices
   1391   >!
   1392    
   1393   Variable (all,j,PROD_COMM)(all,r,REG)
   1394       pva(j,r) # firms' price of value added in industry j of region r #;
   1395   Variable (all,j,PROD_COMM)(all,r,REG)
   1396       qva(j,r) # value added in industry j of region r #;
   1397   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1398       pf(i,j,r) # firms' price for commodity i for use by j in r #;
   1399   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1400       qf(i,j,r) # demand for commodity i for use by j in region r #;
   1401   Variable (all,j,PROD_COMM)(all,r,REG)
   1402       ao(j,r) # output augmenting technical change in sector j of r #;
   1403   Variable (all,i,PROD_COMM)(all,r,REG)
   1404       ava(i,r) # value added augmenting tech change in sector i of r #;
   1405   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1406       af(i,j,r) # composite intermed. input i augmenting tech change by j of r #;
   1407   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1408       afe(i,j,r) # primary factor i augmenting tech change by j of r #;
   1409   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1410       ams(i,r,s) # import i from region r augmenting tech change in region s #;
   1411    
   1412    
   1413    
   1414    
   1415   !<
   1416       3-2. Composite Intermediates Nest
   1417       ---------------------------------
   1418   >!
   1419    
   1420   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1421       tfd(i,j,r) # tax on domestic i purchased by j in r #;
   1422   Equation DMNDDPRICE
   1423   # eq'n links domestic market and firm prices (HT 20) #
   1424   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1425       pfd(i,j,r) = tfd(i,j,r) + pm(i,r);
   1426   !<
   1427       This equation links domestic market and firm prices.  It holds only for
   1428       domestic goods and it captures the effect of commodity taxation of firms.
   1429       (HT 20)
   1430   >!
   1431    
   1432   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1433       tfm(i,j,r) # tax on imported i purchased by j in r #;
   1434   Equation DMNDIPRICES
   1435   # eq'n links domestic market and firm prices (HT 23) #
   1436   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1437       pfm(i,j,r) = tfm(i,j,r) + pim(i,r);
   1438   !<
   1439       This equation links domestic market and firm prices.  It holds only for
   1440       imported goods and it captures the effect of commodity taxation of firms.
   1441       (HT 23)
   1442   >!
   1443    
   1444   Equation TIURATIO
   1445   # change in ratio of tax payments on intermediate goods to regional income #
   1446   (all,r,REG)
   1447       100.0 * INCOME(r) * del_taxriu(r) + TIU(r) * y(r)
   1448           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1449               VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
   1450           + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1451               VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));
   1452    
   1453   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1454       FMSHR(i,j,s) # share of firms' imports in dom. composite, agent's prices #;
   1455   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1456       FMSHR(i,j,s) = VIFA(i,j,s) / VFA(i,j,s);
   1457   Equation ICOMPRICE
   1458   # industry price for composite commodities (HT 30) #
   1459   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1460       pf(i,j,r) = FMSHR(i,j,r) * pfm(i,j,r) + [1 - FMSHR(i,j,r)] * pfd(i,j,r);
   1461    
   1462   Equation INDIMP
   1463   # industry j demands for composite import i (HT 31) #
   1464   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1465       qfm(i,j,s) = qf(i,j,s) - ESUBD(i,s) * [pfm(i,j,s) - pf(i,j,s)];
   1466    
   1467   Equation INDDOM
   1468   # industry j demands for domestic good i (HT 32) #
   1469   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1470       qfd(i,j,s) = qf(i,j,s) - ESUBD(i,s) * [pfd(i,j,s) - pf(i,j,s)];
   1471    
   1472    
   1473   !<
   1474       3-3. Value-Added Nest
   1475       ---------------------
   1476   >!
   1477    
   1478   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1479       tf(i,j,r) # tax on primary factor i used by j in region r #;
   1480    
   1481   Equation MPFACTPRICE
   1482   # eq'n links domestic and firm demand prices (HT 16) #
   1483   (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   1484       pfe(i,j,r) = tf(i,j,r) + pm(i,r);
   1485    
   1486   Equation SPFACTPRICE
   1487   # eq'n links domestic and firm demand prices (HT 17) #
   1488   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   1489       pfe(i,j,r) = tf(i,j,r) + pmes(i,j,r);
   1490    
   1491   Variable (all,i,ENDW_COMM)
   1492       afecom(i) # factor input tech change of input i, worldwide #;
   1493   Variable (all,j,PROD_COMM)
   1494       afesec(j) # factor input tech change of sector j, worldwide #;
   1495   Variable (all,r,REG)
   1496       afereg(r) # factor input tech change in region r #;
   1497   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1498       afeall(i,j,r) # primary factor i augmenting tech change sector j in r #;
   1499   Equation AFEWORLD
   1500   # sector/region specific average rate of prim. factor i augmenting tech change #
   1501   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1502       afe(i,j,r) = afecom(i) + afesec(j) + afereg(r) + afeall(i,j,r);
   1503    
   1504   Coefficient (all,j,PROD_COMM)(all,r,REG)
   1505       VVA(j,r) # value added in activity j in region r #;
   1506   Formula (all,j,PROD_COMM)(all,r,REG)
   1507       VVA(j,r) = sum(i,ENDW_COMM, VFA(i,j,r));
   1508   Coefficient (all,i,ENDW_COMM)
   1509       SVADEFAULT(i) #zerodivide default for SVA#;
   1510   Formula (all,i,ENDW_COMM)
   1511       SVADEFAULT(i)
   1512           = sum(j,PROD_COMM, sum(r,REG, VFA(i,j,r)))
   1513           / sum(j,PROD_COMM, sum(r,REG, VVA(j,r)));
   1514   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1515       SVA(i,j,r) # share of i in total value added in j in r #;
   1516   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) <> 0)
   1517       SVA(i,j,r) = VFA(i,j,r) / VVA(j,r);
   1518   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) = 0)
   1519       SVA(i,j,r) = SVADEFAULT(i);
   1520   Equation VAPRICE
   1521   # effective price of primary factor composite in each sector/region (HT 33) #
   1522   (all,j,PROD_COMM)(all,r,REG)
   1523       pva(j,r) = sum(k,ENDW_COMM, SVA(k,j,r) * [pfe(k,j,r) - afe(k,j,r)]);
   1524    
   1525   Equation TFURATIO
   1526   # change in ratio of tax payments on factor usage to regional income #
   1527   (all,r,REG)
   1528       100.0 * INCOME(r) * del_taxrfu(r) + TFU(r) * y(r)
   1529           = sum(i,ENDWM_COMM, sum(j,PROD_COMM,
   1530               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pm(i,r) + qfe(i,j,r)]))
   1531           + sum(i,ENDWS_COMM, sum(j,PROD_COMM,
   1532               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pmes(i,j,r) + qfe(i,j,r)]));
   1533    
   1534    
   1535   !<
   1536       3-3.1 GTAP-AEZ Value-Added Nest
   1537       -------------------------------
   1538   >!
   1539    
   1540   !Begin Calibration of Yield Response to Price!
   1541    
   1542    
   1543   ZERODIVIDE (ZERO_BY_ZERO) DEFAULT 0 ;
   1544   ZERODIVIDE DEFAULT 1 ;
   1545    
   1546   Coefficient (all,j,PROD_COMM)(all,r,reg)
   1547       TOTALC(j,r);
   1548   Formula (all,j,PROD_COMM)(all,r,reg)
   1549       TOTALC(j,r) =
   1550               sum(i, demd_comm,(VFA(i,j,r)));
   1551   Coefficient (all,j,PROD_COMM)(all,r,reg)
   1552       LANDCOST(j,r);
   1553   Formula (all,j,PROD_COMM)(all,r,reg)
   1554       LANDCOST(j,r) =
   1555               sum(a, AEZ_COMM,(VFA(a,j,r)));
   1556    
   1557   Coefficient(all,j,PROD_COMM)(all,r,reg)
   1558       THETAi(j,r) #Endowment's cost share in value-added#;
   1559   Formula(all,j,PROD_COMM)(all,r,reg)
   1560       THETAi(j,r) = LANDCOST(j,r)/TOTALC(j,r);
   1561    
   1562   Coefficient (parameter)(all,j,PROD_COMM)(all,r,REG)
   1563       YDONOFF(j,r) #Turn off the yield calibrated ESUBVA's by setting to zero#;
   1564   Read YDONOFF from file GTAPPARM header "YD01";
   1565    
   1566   Coefficient (parameter)(all,r,REG)
   1567       YDREGSCALE(r) #Scale up or down the target yield elast for a region#;
   1568   Read YDREGSCALE from file GTAPPARM header "YDRS";
   1569    
   1570   Coefficient (parameter)
   1571       YDE_Target #Scalar yield elasticity target, read from PARM for SSA#;
   1572   Read YDE_Target from file GTAPPARM header "YDEL";
   1573    
   1574   Coefficient (parameter) (all,j,PROD_COMM)(all,r,REG)
   1575       ESUBVA1(j,r)
   1576       # elasticity of substitution in value-added-energy subproduction #;
   1577   Read
   1578       ESUBVA1 from file GTAPPARM header "ESBV";
   1579    
   1580   Coefficient (parameter) (all,j,PROD_COMM)(all,r,REG)
   1581       ESUBVA(j,r)
   1582       # elasticity of substitution in value-added-energy subproduction #;
   1583   Formula(initial) (all,j,PROD_COMM)(all,r,REG)
   1584       ESUBVA(j,r) = if(THETAi(j,r)*YDONOFF(j,r) le 0, ESUBVA1(j,r))
   1585                   + if(THETAi(j,r)*YDONOFF(j,r) gt 0,
   1586                        YDREGSCALE(r)*YDE_Target/
   1587                                           [(1/THETAi(j,r))-1]);
   1588    
   1589   !End calibration of Yield Response to Price!
   1590    
   1591    
   1592   !< GTAP-AEZ: modify derived demand for land in land-using sectors!
   1593    
   1594   Equation ENDWDEMAND
   1595   # demands for endowment commodities in non-land sectors (HT 34) #
   1596   (all,i,ENDW_COMM)(all,j,NLNDP_COMM)(all,r,REG)
   1597       qfe(i,j,r)
   1598           = - afe(i,j,r) + qva(j,r)
   1599           - ESUBVA1(j,r) * [pfe(i,j,r) - afe(i,j,r) - pva(j,r)];
   1600    
   1601   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   1602       SAEZLAND(i,j,r) # the share of AEZ i in total land in sector j of r #;
   1603   Formula (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   1604       SAEZLAND(i,j,r)
   1605           = VFA(i,j,r)/ sum(k,AEZ_COMM, VFA(k,j,r));
   1606    
   1607   Variable (all,j,LAND_COMM)(all,r,REG)
   1608       pfeland(j,r) # composite land price in sector j, region r #;
   1609   Variable (all,j,LAND_COMM)(all,r,REG)
   1610       qfeland(j,r)  # composite land demand in sector j, region r #;
   1611    
   1612   Coefficient (parameter)(all,j,PROD_COMM)(all,r,REG)
   1613       ESUBAEZ(j,r)
   1614       # elst. of sub. amongst AEZs in land composite of land using sector j #;
   1615   Read
   1616       ESUBAEZ from file GTAPPARM header "EAEZ";
   1617    
   1618   Equation LANDPRICE
   1619   # effective price of land composite in each sector/region (HT 33) #
   1620   (all,j,LAND_COMM)(all,r,REG)
   1621       pfeland(j,r) =
   1622           sum(k,AEZ_COMM, SAEZLAND(k,j,r) * [pfe(k,j,r) - afe(k,j,r)]);
   1623    
   1624   Equation LANDDEMAND
   1625   # demands for land in the value added nest #
   1626   (all,j, LAND_COMM)(all,r,REG)
   1627       qfeland(j,r)
   1628           = qva(j,r)
   1629           - ESUBVA(j,r) * [pfeland(j,r) - pva(j,r)];
   1630    
   1631   Equation AEZDEMAND
   1632   # demands for endowment commodities (HT 34) #
   1633   (all,i,AEZ_COMM)(all,j, LAND_COMM)(all,r,REG)
   1634       qfe(i,j,r)
   1635           = - afe(i,j,r) + qfeland(j,r)
   1636           - ESUBAEZ(j,r) * [pfe(i,j,r) - afe(i,j,r) - pfeland(j,r)];
   1637    
   1638   Equation NLANDDEMAND
   1639   # demands for endowment commodities in land using sectors (HT 34) #
   1640   (all,i,NAEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   1641       qfe(i,j,r)
   1642           = - afe(i,j,r) + qva(j,r)
   1643           - ESUBVA(j,r) * [pfe(i,j,r) - afe(i,j,r) - pva(j,r)];
   1644    
   1645   !<
   1646       End of GTAP-AEZ Value-Added Nest
   1647       --------------------------------
   1648   >!
   1649   !<
   1650       3-1. Total Output Nest
   1651       ----------------------
   1652   >!
   1653    
   1654   Variable (all,j,PROD_COMM)
   1655       aosec(j) # output tech change of sector j, worldwide #;
   1656   Variable (all,r,REG)
   1657       aoreg(r) # output tech change in region r #;
   1658   Variable (all,j,PROD_COMM)(all,r,REG)
   1659       aoall(j,r) # output augmenting technical change in sector j of r #;
   1660   Variable (all,j,PROD_COMM)(all,r,REG)
   1661       aoall2(j,r) # output augmenting technical change in sector j of r #;
   1662   Variable (all,j,PROD_COMM)(all,r,REG)
   1663       aoall3(j,r) # output augmenting technical change in sector j of r #;
   1664   Variable (all,j,PROD_COMM)(all,r,REG)
   1665       aoall4(j,r) # output augmenting technical change in sector j of r #;
   1666   Equation AOWORLD
   1667   # sector/region specific average rate of output augmenting tech change #
   1668   (all,j,PROD_COMM)(all,r,REG)
   1669       ao(j,r) = aosec(j) + aoreg(r) + aoall(j,r) + aoall2(j,r)
   1670                                     + aoall3(j,r) + aoall4(j,r);
   1671    
   1672   Variable (all,j,PROD_COMM)
   1673       avasec(j) # value added tech change of sector j, worldwide #;
   1674   Variable (all,r,REG)
   1675       avareg(r) # value added tech change in region r #;
   1676   Variable (all,j,PROD_COMM)(all,r,REG)
   1677       avaall(j,r) # value added augmenting technical change in sector j of r #;
   1678   Equation AVAWORLD
   1679   # sector/region specific average rate of value added augmenting tech change #
   1680   (all,j,PROD_COMM)(all,r,REG)
   1681       ava(j,r) = avasec(j) + avareg(r) + avaall(j,r);
   1682    
   1683   Coefficient (parameter)(all,j,PROD_COMM)
   1684       ESUBT1(j)
   1685       # elst. of sub. among composite intermediate inputs in production #;
   1686   Read
   1687       ESUBT1 from file GTAPPARM header "ESBT";
   1688    
   1689   Coefficient (Parameter)(all,j,PROD_COMM)(all,r,REG)
   1690       ESUBT(j,r);
   1691   Formula(Initial) (all,j,PROD_COMM)(all,r,REG)
   1692       ESUBT(j,r) = if(YDONOFF(j,r) le 0, ESUBT1(j))
   1693                       +if(YDONOFF(j,r) gt 0, ESUBVA(j,r));
   1694    
   1695    
   1696   Equation VADEMAND
   1697   # sector demands for primary factor composite #
   1698   (all,j,PROD_COMM)(all,r,REG)
   1699       qva(j,r)
   1700           = -ava(j,r) + qo(j,r) - ao(j,r)
   1701           - ESUBT(j,r) * [pva(j,r) - ava(j,r) - ps(j,r) - ao(j,r)];
   1702   !<
   1703       Sector demands for primary factor composite.  This equation differs from
   1704       HT 35 due to the presence of intermediate input substitution.
   1705   >!
   1706    
   1707   Variable (all,i,TRAD_COMM)
   1708       afcom(i) # intermediate tech change of input i, worldwide #;
   1709   Variable (all,j,PROD_COMM)
   1710       afsec(j) # intermediate tech change of sector j, worldwide #;
   1711   Variable (all,r,REG)
   1712       afreg(r) # intermediate tech change in region r #;
   1713   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1714       afall(i,j,r) # intermediate input i augmenting tech change by j in r #;
   1715   Equation AFWORLD
   1716   # sector/region specific average rate of intermediates augmenting tech change #
   1717   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1718       af(i,j,r) = afcom(i) + afsec(j) + afreg(r) + afall(i,j,r);
   1719    
   1720   Equation INTDEMAND
   1721   # industry demands for intermediate inputs, including cgds #
   1722   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1723       qf(i,j,r)
   1724           = - af(i,j,r) + qo(j,r) - ao(j,r)
   1725           - ESUBT(j,r) * [pf(i,j,r) - af(i,j,r) - ps(j,r) - ao(j,r)];
   1726   !<
   1727       Industry demands for intermediate inputs, including cgds.  This equation
   1728       differs from HT 36 due to the presence of intermediate input substitution.
   1729   >!
   1730    
   1731   !<
   1732       3-4. Zero Profits Equations
   1733       ---------------------------
   1734   >!
   1735    
   1736   Equation OUTPUTPRICES
   1737   # eq'n links pre- and post-tax supply prices for all industries  (HT 15) #
   1738   (all,i,PROD_COMM)(all,r,REG)
   1739       ps(i,r) = to(i,r) + pm(i,r);
   1740   !<
   1741       This equation links pre- and post-tax supply prices for all industries.
   1742       This captures the effect of output taxes.  TO(i,r) < 1 in the case of a
   1743       tax.  (HT 15)
   1744   >!
   1745    
   1746   Equation TOUTRATIO
   1747   # change in ratio of output tax payments to regional income #
   1748   (all,r,REG)
   1749       100.0 * INCOME(r) * del_taxrout(r) + TOUT(r) * y(r)
   1750           = sum(i,PROD_COMM,
   1751               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   1752    
   1753   Variable (all,j,PROD_COMM)(all,r,REG)
   1754       profitslack(j,r) # slack variable in the zero profit equation #;
   1755   !<
   1756       This is exogenous, unless the user wishes to specify output in a given
   1757       region exogenously.
   1758   >!
   1759   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1760       STC(i,j,r) # share of i in total costs of j in r #;
   1761   Formula (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1762       STC(i,j,r) = VFA(i,j,r) / sum(k,DEMD_COMM, VFA(k,j,r));
   1763    
   1764   Equation ZEROPROFITS
   1765   # industry zero pure profits condition (HT 6) #
   1766   (all,j,PROD_COMM)(all,r,REG)
   1767       ps(j,r) + ao(j,r)
   1768           = sum(i,ENDW_COMM, STC(i,j,r) * [pfe(i,j,r) - afe(i,j,r) - ava(j,r)])
   1769           + sum(i,TRAD_COMM, STC(i,j,r) * [pf(i,j,r)  - af(i,j,r)])
   1770           + profitslack(j,r);
   1771   !<
   1772       Industry zero pure profits condition (HT 6).  This condition permits us to
   1773       determine the endogenous output level for each of the non-endowment
   1774       sectors, excepting when profitslack is itself endogenous.  The level of
   1775       activity in the endowment sectors is exogenously determined.
   1776   >!
   1777    
   1778    
   1779   !<
   1780       ---------------------------------------
   1781       4. Investment, Global Bank, and Savings
   1782       ---------------------------------------
   1783    
   1784       Capital stock and rate of return equations follow.  They correspond to the
   1785       Investment Equations of Table 8 in Hertel and Tsigas.
   1786    
   1787       4-0. Module-Specific Variables
   1788       4-1. Equations of Notational Convenience
   1789       4-2. Rate of Return Equations
   1790       4-3. Capital Accumulation
   1791       4-4. Global Bank
   1792       4-5. Price Index of Aggregate Global Composite Capital Goods
   1793       4-6. Price of Saving
   1794   >!
   1795    
   1796    
   1797   !<
   1798       4-0. Module-Specific Variables
   1799       ------------------------------
   1800    
   1801       only used in this Investment, Global Bank and Savings module
   1802   >!
   1803    
   1804   Variable (all,r,REG)
   1805       rental(r) # rental rate on capital = ps("capital",r) #;
   1806   Variable (all,r,REG)
   1807       ke(r) # end-of-period capital stock in r #;
   1808   Variable (all,r,REG)
   1809       rore(r) # expected net rate of return on capital stock in r #;
   1810   Variable (all,r,REG)
   1811       rorc(r) # current net rate of return on capital stock in r #;
   1812   Variable (all,r,REG)
   1813       qcgds(r) # output of capital goods sector = qo("cgds",r) #;
   1814    
   1815    
   1816   !<
   1817       4-1. Equations of Notational Convenience
   1818       ----------------------------------------
   1819   >!
   1820    
   1821   Variable (all,r,REG)
   1822       ksvces(r) # capital services = qo("capital",r) #;
   1823   Equation KAPSVCES
   1824   # eq'n defines a variable for capital services (HT 52) #
   1825   (all,r,REG)
   1826       ksvces(r)
   1827           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * qo(h,r));
   1828   !<
   1829       This equation defines a variable for capital services, for convenience.
   1830       (There is really only one capital services item.) (HT 52)
   1831   >!
   1832    
   1833   Equation KAPRENTAL
   1834   # eq'n defines a variable for capital rental rate (HT 53) #
   1835   (all,r,REG)
   1836       rental(r)
   1837           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * ps(h,r));
   1838    
   1839   Equation CAPGOODS
   1840   # eq'n defines a variable for gross investment (HT 54) #
   1841   (all,r,REG)
   1842       qcgds(r)
   1843           = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * qo(h,r));
   1844   !<
   1845       This equation defines a variable for gross investment, for convenience.
   1846       There is really only one capital goods item.
   1847   >!
   1848    
   1849   Equation PRCGOODS
   1850   # eq'n defines the price of cgds (HT 55) #
   1851   (all,r,REG)
   1852       pcgds(r) = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * ps(h,r));
   1853    
   1854   Equation KBEGINNING
   1855   # associates change in cap. services w/ change in cap. stock (HT 56) #
   1856   (all,r,REG)
   1857       kb(r) = ksvces(r);
   1858   !<
   1859       This equation associates any change in capital services during the period
   1860       with a change in capital stock.  Full capacity utilization is assumed.
   1861   >!
   1862    
   1863   Coefficient (ge 0)(all,r,REG)
   1864       VKB(r) # value of beginning-of-period capital stock in region r #;
   1865   Update (all,r,REG)
   1866       VKB(r) = pcgds(r) * kb(r);
   1867   Read
   1868       VKB from file GTAPDATA header "VKB";
   1869   !<
   1870       VKB(r) is used only in this sub-module, so its data are read here.  The
   1871       associated variables, pcgds(r) and kb(r), are used across modules, so they
   1872       have been defined as common variables.
   1873   >!
   1874    
   1875   Coefficient (all,r,REG)
   1876       INVKERATIO(r)
   1877       # ratio of gross investment to end-of-period capital stock in r #;
   1878   Formula (all,r,REG)
   1879       INVKERATIO(r) = REGINV(r) / [VKB(r) + NETINV(r)];
   1880    
   1881   Equation KEND
   1882   # Ending capital stock equals beginning stock plus net investment.  (HT 10) #
   1883   (all,r,REG)
   1884       ke(r) = INVKERATIO(r) * qcgds(r) + [1.0 - INVKERATIO(r)] * kb(r);
   1885    
   1886    
   1887   !<
   1888       4-2. Rate of Return Equations
   1889       -----------------------------
   1890   >!
   1891    
   1892   Coefficient (all,r,REG)
   1893       GRNETRATIO(r) # ratio of GROSS/NET rates of return on capital in r #;
   1894   Formula (all,r,REG)
   1895       GRNETRATIO(r)
   1896           = sum(h,ENDWC_COMM, VOA(h,r))
   1897           / [sum(h,ENDWC_COMM, VOA(h,r)) - VDEP(r)];
   1898   !<
   1899       NOTE: VOA("capital",r) is GROSS returns to capital.
   1900   >!
   1901   Equation RORCURRENT
   1902   # current rate of return on capital in region r (HT 57) #
   1903   (all,r,REG)
   1904       rorc(r) = GRNETRATIO(r) * [rental(r) - pcgds(r)];
   1905    
   1906   Coefficient (parameter)(all,r,REG)
   1907       RORFLEX(r)
   1908       # flexibility of expected net ROR on capital stock in r wrt investment #;
   1909   Read
   1910       RORFLEX from file GTAPPARM header "RFLX";
   1911   !<
   1912       RORFLEX is the flexibility of the expected net rate of return on the
   1913       capital stock, in region r, with respect to investment.  If a region's
   1914       capital stock increases by 1%, then it is expected that the net rate of
   1915       return on capital will decline by RORFLEX %.  A larger absolute value for
   1916       this parameter will reduce the tendency of international investment flows
   1917       to respond to changes in expected rates of return.
   1918   >!
   1919    
   1920   Equation ROREXPECTED
   1921   # expected rate of return depends on the current return and investment (HT 58) #
   1922   (all,r,REG)
   1923       rore(r) = rorc(r) - RORFLEX(r) * [ke(r) - kb(r)];
   1924    
   1925    
   1926   !<
   1927       4-3. Capital Accumulation
   1928       -------------------------
   1929    
   1930       based on the theory laid out in GTAP Technical Paper #7
   1931   >!
   1932    
   1933   Variable (all,i,ENDWC_COMM)(all,r,REG)
   1934       EXPAND(i,r) # change in investment levels relative to endowment stock #;
   1935   Equation BALDWIN
   1936   # change in investment levels relative to endowment stock #
   1937   (all,i,ENDWC_COMM)(all,r,REG)
   1938       EXPAND(i,r) = qcgds(r) - qo(i,r);
   1939    
   1940    
   1941   !<
   1942       4-4. Global Bank
   1943       ----------------
   1944   >!
   1945    
   1946   Coefficient (integer,parameter)
   1947       RORDELTA
   1948       # binary coefficient to switch mechanism of allocating investment funds #;
   1949   Read
   1950       RORDELTA from file GTAPPARM header "RDLT";
   1951   !<
   1952       RORDELTA is a binary coefficient which determines the mechanism of
   1953       allocating investment funds across regions.  When RORDELTA = 1, investment
   1954       funds are allocated across regions to equate the change in the expected
   1955       rates of return (i.e., rore(r)).  When RORDELTA = 0, investment funds are
   1956       allocated across regions to maintain the existing composition of capital
   1957       stocks.
   1958   >!
   1959    
   1960   Variable
   1961       rorg # global net rate of return on capital stock #;
   1962   Variable (all,r,REG)
   1963       cgdslack(r) # slack variable for qcgds(r) #;
   1964   !<
   1965       This is exogenous, unless the user wishes to exogenously fix the level of
   1966       gross investment in a region, in which case it can be swapped with
   1967       cgdslack.
   1968   >!
   1969   Equation RORGLOBAL
   1970   # either gross investment or expected rate of return in region r (HT 59) #
   1971   (all,r,REG)
   1972       RORDELTA * rore(r)
   1973       + [1 - RORDELTA]
   1974       * [[REGINV(r) / NETINV(r)] * qcgds(r) - [VDEP(r) / NETINV(r)] * kb(r)]
   1975           = RORDELTA * rorg + [1 - RORDELTA] * globalcgds + cgdslack(r);
   1976   !<
   1977       This equation determines either gross investment or the expected rate of
   1978       return in each region, depending on the setting for the binary RORDELTA
   1979       parameter.
   1980   >!
   1981    
   1982   Equation GLOBALINV
   1983   # either expected global rate of return or global net investment (HT 11) #
   1984       RORDELTA * globalcgds + [1 - RORDELTA] * rorg
   1985           = RORDELTA
   1986           * sum(r,REG,
   1987               [REGINV(r) / GLOBINV] * qcgds(r) - [VDEP(r) / GLOBINV] * kb(r))
   1988           + [1 - RORDELTA] * sum(r,REG, [NETINV(r) / GLOBINV] * rore(r));
   1989   !<
   1990       This equation computes either the change in global net investment (when
   1991       RORDELTA = 1), or the change in the expected global rate of return on
   1992       capital (when RORDELTA = 0).
   1993   >!
   1994    
   1995    
   1996   !<
   1997       4-5. Price Index of Aggregate Global Composite Capital Goods
   1998       ------------------------------------------------------------
   1999   >!
   2000    
   2001   Equation PRICGDS
   2002   # eq'n generates a price index for the aggregate global cgds composite (HT 60) #
   2003       pcgdswld = sum(r,REG, [NETINV(r) / GLOBINV] * pcgds(r));
   2004    
   2005    
   2006   !<
   2007       4-6. Price of Saving
   2008       --------------------
   2009   >!
   2010    
   2011   Variable (all,r,REG)
   2012       psaveslack(r) # slack variable for the savings price equation #;
   2013   !<
   2014       This is exogenous under the normal closure.  However, in order to
   2015       replicate simulations from the GTAP book, where there was a single savings
   2016       price, psaveslack may be swapped with psave in order to fix the latter.
   2017       In this case, pcgdswld must be the numeraire so that each region faces the
   2018       same price of savings.
   2019   >!
   2020    
   2021   Equation SAVEPRICE
   2022   # savings price #
   2023   (all,r,REG)
   2024       psave(r)
   2025           = pcgds(r)
   2026           + sum(s,REG, [[NETINV(s) - SAVE(s)] / GLOBINV] * pcgds(s))
   2027           + psaveslack(r);
   2028   !<
   2029       In contrast to the GTAP book, the price of savings is now region-specific
   2030       and it changes at the same rate as the price of regional investment, plus
   2031       an adjustment factor which accounts for the fact that savings and
   2032       investment are not equal at the regional level.
   2033   >!
   2034    
   2035    
   2036   !<
   2037       ----------------------
   2038       5. International Trade
   2039       ----------------------
   2040    
   2041       5-1. Export Prices
   2042       5-2. Demand for Imports
   2043   >!
   2044    
   2045    
   2046   !<
   2047       5-1. Export Prices
   2048       ------------------
   2049   >!
   2050    
   2051   Variable (all,i,TRAD_COMM)(all,r,REG)
   2052       tx(i,r) # dest.-gen. change in subsidy on exports of i from r #;
   2053   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2054       txs(i,r,s) # dest.-spec. change in subsidy on exports of i from r to s #;
   2055   !<
   2056       The variable txs captures changes in the power of bilateral export taxes.
   2057       However, the presence of a destination-generic export subsidy shift (tx)
   2058       also permits the user to swap a single export tax shock with another
   2059       target variable.  It is most naturally swapped with the variable qo to
   2060       insulate domestic producers from the world market.
   2061   >!
   2062    
   2063   Equation EXPRICES
   2064   # eq'n links agent's and world prices (HT 27) #
   2065   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2066       pfob(i,r,s) = pm(i,r) - tx(i,r) - txs(i,r,s);
   2067    
   2068   Equation TEXPRATIO
   2069   # change in ratio of export tax payments to regional income #
   2070   (all,r,REG)
   2071       100.0 * INCOME(r) * del_taxrexp(r) + TEX(r) * y(r)
   2072           = sum(i,TRAD_COMM, sum(s,REG,
   2073               VXMD(i,r,s) * [-tx(i,r) - txs(i,r,s)]
   2074               + XTAXD(i,r,s) * [pfob(i,r,s) + qxs(i,r,s)]));
   2075    
   2076    
   2077   !<
   2078       5-2. Demand for Imports
   2079       -----------------------
   2080    
   2081       Composite Imports Nest: Table 3 of Hertel and Tsigas
   2082   >!
   2083    
   2084   Variable (all,i,TRAD_COMM)(all,s,REG)
   2085       tm(i,s) # source-gen. change in tax on imports of i into s #;
   2086   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2087       tms(i,r,s) # source-spec. change in tax on imports of i from r into s #;
   2088   !<
   2089       The variable tms captures changes in the power of bilateral import taxes.
   2090       However, the presence of a source-generic import tariff shift (tm) also
   2091       permits the user to swap a single import tariff shock with another target
   2092       variable.  In particular, to insulate domestic producers from import price
   2093       changes, it may be swapped with the relative price variable pr -- see
   2094       below.
   2095   >!
   2096    
   2097   Equation MKTPRICES
   2098   # eq'n links domestic and world prices (HT 24) #
   2099   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2100       pms(i,r,s) = tm(i,s) + tms(i,r,s) + pcif(i,r,s);
   2101    
   2102   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2103       MSHRS(i,r,s) # share of imports from r in import bill of s at mkt prices #;
   2104   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2105       MSHRS(i,r,s) = VIMS(i,r,s) / sum(k,REG, VIMS(i,k,s));
   2106   Equation DPRICEIMP
   2107   # price for aggregate imports (HT 28) #
   2108   (all,i,TRAD_COMM)(all,s,REG)
   2109       pim(i,s) = sum(k,REG, MSHRS(i,k,s) * [pms(i,k,s) - ams(i,k,s)]);
   2110    
   2111   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   2112       pr(i,r) # ratio of domestic to imported prices in r #;
   2113   Equation PRICETGT
   2114   # eq'n defines target price ratio to be attained via the variable levy (HT 25) #
   2115   (all,i,TRAD_COMM)(all,s,REG)
   2116       pr(i,s) = pm(i,s) - pim(i,s);
   2117   !<
   2118       This equation defines the target price ratio to be attained via the
   2119       variable levy.  This price ratio is the ratio of domestic to average
   2120       imported goods' price.  Note that the way this price ratio is defined, it
   2121       includes intraregional imports as well.  In most applications, regions
   2122       will represent groups of individual countries.  However, in the case of
   2123       the EU, this is problematic, since recent versions of the database have
   2124       incorporated intra-EU trade flows.  Therefore, when aggregated to the EU
   2125       level, the composite import price includes both intra-EU and outside
   2126       imports.  So some modification is needed to handle the EU case.
   2127   >!
   2128    
   2129   Coefficient (parameter)(all,i,TRAD_COMM)(all,s,REG)
   2130       ESUBM(i,s)
   2131       # region-generic el. of sub. among imports of i in Armington structure #;
   2132   Read
   2133       ESUBM from file GTAPPARM header "ESBM";
   2134    
   2135   Equation IMPORTDEMAND
   2136   # regional demand for disaggregated imported commodities by source (HT 29)  #
   2137   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2138       qxs(i,r,s)
   2139           = -ams(i,r,s) + qim(i,s)
   2140           - ESUBM(i,r) * [pms(i,r,s) - ams(i,r,s) - pim(i,s)];
   2141    
   2142   Equation TIMPRATIO
   2143   # change in ratio of import tax payments to regional income #
   2144   (all,r,REG)
   2145       100.0 * INCOME(r) * del_taxrimp(r) + TIM(r) * y(r)
   2146           = sum(i,TRAD_COMM, sum(s,REG,
   2147               VIMS(i,s,r) * [tm(i,r) + tms(i,s,r)]
   2148               + MTAX(i,s,r) * [pcif(i,s,r) + qxs(i,s,r)]));
   2149    
   2150    
   2151   !<
   2152       -----------------------------------
   2153       6. International Transport Services
   2154       -----------------------------------
   2155    
   2156       6-0. Module-Specific Variables and Coefficients
   2157       6-1. Demand for Global Transport Services
   2158       6-2. Supply of Transport Services
   2159   >!
   2160    
   2161    
   2162   !<
   2163       6-0. Module-Specific Variables and Coefficients
   2164       -----------------------------------------------
   2165    
   2166       only used in this International Transport Services module
   2167   >!
   2168    
   2169   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2170       qtmfsd(m,i,r,s) # international usage margin m on i from r to s #;
   2171   !<
   2172       International margin usage, by Margin, Freight, Source, and Destination,
   2173       i.e., the percent change in usage of m in transport of i from r to s.
   2174   >!
   2175   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2176       atmfsd(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   2177   !<
   2178       Technical progress in shipping by Margin, Freight, Source, and
   2179       Destination.  This is endogenous and driven by the following mode-,
   2180       product-, source-, and destination-specific determinants.
   2181   >!
   2182   Variable (all,m,TRAD_COMM)
   2183       atm(m) # tech change in mode m, worldwide #;
   2184   Variable (all,i,TRAD_COMM)
   2185       atf(i) # tech change shipping of i, worldwide #;
   2186   Variable (all,r,REG)
   2187       ats(r) # tech change shipping from region r #;
   2188   Variable (all,s,REG)
   2189       atd(s) # tech change shipping to s #;
   2190   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2191       atall(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   2192   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2193       ptrans(i,r,s) # cost index for international transport of i from r to s #;
   2194   !<
   2195       average cost index for margin services used in getting i from r to s
   2196   >!
   2197   Variable (all,m,MARG_COMM)
   2198       qtm(m) # global margin usage #;
   2199   Variable (all,m,MARG_COMM)
   2200       pt(m) # price of composite margins services, type #;
   2201   !<
   2202       price index for commodity m in margin services usage
   2203   >!
   2204    
   2205   Coefficient (ge 0) (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2206       VTMFSD(m,i,r,s)
   2207       # int'l margin usage, by margin, freight, source, and destination #;
   2208   Update (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2209       VTMFSD(m,i,r,s) = pt(m) * qtmfsd(m,i,r,s);
   2210   Read
   2211       VTMFSD from file GTAPDATA header "VTWR";
   2212    
   2213   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2214       VTFSD(i,r,s) # aggregate value of svces in the shipment of i from r to s #;
   2215   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2216       VTFSD(i,r,s) = sum(m,MARG_COMM, VTMFSD(m,i,r,s));
   2217   !<
   2218       In a balanced data base, (all,i,TRAD_COMM)(all,r,REG)(all,s,REG),
   2219       VIWS(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s).
   2220   >!
   2221    
   2222   Coefficient (all,m,MARG_COMM)
   2223       VTMUSE(m) # international margin services usage, by type #;
   2224   Formula (all,m,MARG_COMM)
   2225       VTMUSE(m) = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG, VTMFSD(m,i,r,s))));
   2226    
   2227   Coefficient (all,m,MARG_COMM)
   2228       VTMPROV(m) # international margin services provision #;
   2229   Formula (all,m,MARG_COMM)
   2230       VTMPROV(m) = sum(r,REG, VST(m,r));
   2231   !<
   2232       In a balanced data base, VTMPROV = VTMUSE.
   2233   >!
   2234    
   2235   Coefficient (all,r,REG)
   2236       VTRPROV(r) # international margin supply, by region #;
   2237   Formula (all,r,REG)
   2238       VTRPROV(r) = sum(m,MARG_COMM, VST(m,r));
   2239    
   2240   Coefficient
   2241       VT # international margin supply #;
   2242   Formula
   2243       VT = sum(m,MARG_COMM, sum(r,REG, VST(m,r)));
   2244    
   2245    
   2246   !<
   2247       6-1. Demand for Global Transport Services
   2248       -----------------------------------------
   2249   >!
   2250    
   2251   Equation QTRANS_MFSD
   2252   # bilateral demand for transport services  #
   2253   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2254       qtmfsd(m,i,r,s) = qxs(i,r,s) - atmfsd(m,i,r,s);
   2255   !<
   2256       This equation computes the bilateral demand for international
   2257       transportation services.  It reflects the fact that the demand for
   2258       services along any particular route is proportional to the quantity of
   2259       merchandise shipped [i.e., QXS(i,r,s)].  It is here that we introduce the
   2260       potential for input-augmenting tech change, atmfsd(m,i,r,s), which is
   2261       commodity- and route-specific.  Thus, in the levels:
   2262               ATMFSD(m,i,r,s) * QTMFSD(m,i,r,s) = QXS(i,r,s)
   2263       where QTMFSD is the amount of composite margins services m used along this
   2264       route.  Technological improvements are reflected by atmfsd(i,r,s) > 0, and
   2265       these reduce the margins services required for this i,r,s triplet.  Tech.
   2266       change also dampens the cost of shipping, thereby lowering the CIF price
   2267       implied by a given FOB value (see 6-2).
   2268   >!
   2269    
   2270   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2271       VTMUSESHR(m,i,r,s) # share of i,r,s usage in global demand for m #;
   2272   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2273       VTMUSESHR(m,i,r,s) = VTFSD(i,r,s) / VT;
   2274   Formula
   2275       (all,m,MARG_COMM: VTMUSE(m) <> 0.0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2276       VTMUSESHR(m,i,r,s) = VTMFSD(m,i,r,s) / VTMUSE(m);
   2277    
   2278   Equation TRANS_DEMAND
   2279   # global demand for margin m #
   2280   (all,m,MARG_COMM)
   2281       qtm(m)
   2282           = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   2283             VTMUSESHR(m,i,r,s) * qtmfsd(m,i,r,s))));
   2284    
   2285    
   2286   !<
   2287       6-2. Supply of Transport Services
   2288       ---------------------------------
   2289   >!
   2290    
   2291   Coefficient (all,m,MARG_COMM)(all,r,REG)
   2292       VTSUPPSHR(m,r) # share of region r in global supply of margin m #;
   2293   Formula (all,m,MARG_COMM)(all,r,REG)
   2294       VTSUPPSHR(m,r) = VTRPROV(r) / VT;
   2295   Formula (all,m,MARG_COMM: VTMPROV(m) <> 0.0)(all,r,REG)
   2296       VTSUPPSHR(m,r) = VST(m,r) / VTMPROV(m);
   2297    
   2298   Equation PTRANSPORT
   2299   # generate price index for composite transportation services #
   2300   (all,m,MARG_COMM)
   2301       pt(m) = sum(r,REG, VTSUPPSHR(m,r) * pm(m,r));
   2302   !<
   2303       This equation generates a price index for transportation services based on
   2304       zero profits.  NOTE:
   2305       (1) Sales to international transportation are not subject to export tax.
   2306           This is why we base the costs to the transport sector on market prices
   2307           of the goods sold to international transportation.
   2308       (2) We assume that the supply shares for margin services are uniform
   2309           across freight, source of freight, and destination.
   2310       (cf. HT#7)
   2311   >!
   2312    
   2313   Coefficient
   2314       VTUSE # international margin services usage #;
   2315   Formula
   2316       VTUSE
   2317           = sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   2318               VTMFSD(m,i,r,s)))));
   2319    
   2320   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2321       VTFSD_MSH(m,i,r,s) # share of margin m in cost of getting i from r to s #;
   2322   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   2323           (all,s,REG: VTFSD(i,r,s) > 0.0)
   2324       VTFSD_MSH(m,i,r,s) = VTMFSD(m,i,r,s) / VTFSD(i,r,s);
   2325   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   2326           (all,s,REG: VTFSD(i,r,s) = 0.0)
   2327       VTFSD_MSH(m,i,r,s) = VTMUSE(m) / VTUSE;
   2328    
   2329   Equation TRANSCOSTINDEX
   2330   #  generates flow-specific modal average cost of transport index (cf. HT7) #
   2331   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2332       ptrans(i,r,s)
   2333           = sum(m,MARG_COMM, VTFSD_MSH(m,i,r,s) * [pt(m) - atmfsd(m,i,r,s)]);
   2334    
   2335   Equation TRANSTECHANGE
   2336   #  generates flow-specific average rate of technical change #
   2337   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2338       atmfsd(m,i,r,s) = atm(m) + atf(
   2339   i) + ats(r) + atd(s) + atall(m,i,r,s);
   2340    
   2341   Equation TRANSVCES
   2342   # generate demand for regional supply of global transportation service (HT 61) #
   2343   (all,m,MARG_COMM)(all,r,REG)
   2344       qst(m,r) = qtm(m) + [pt(m) - pm(m,r)];
   2345   !<
   2346       This equation generates the international transport sector's derived
   2347       demand for regional supplies of transportation services.  It reflects a
   2348       unitary elasticity of substitution between transportation services inputs
   2349       from different regions.
   2350   >!
   2351    
   2352   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2353       VIWSCOST(i,r,s) # value of imports calculated as total cost of imports #;
   2354   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2355       VIWSCOST(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s);
   2356    
   2357   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2358       FOBSHR(i,r,s) # FOB share in VIW #;
   2359   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2360       FOBSHR(i,r,s) = VXWD(i,r,s) / VIWSCOST(i,r,s);
   2361    
   2362   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2363       TRNSHR(i,r,s) # transport share in VIW #;
   2364   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2365       TRNSHR(i,r,s) = VTFSD(i,r,s) / VIWSCOST(i,r,s);
   2366    
   2367   Equation FOBCIF
   2368   # eq'n links FOB and CIF prices for good i shipped from region r to s (HT 26') #
   2369   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2370       pcif(i,r,s)
   2371          = FOBSHR(i,r,s) * pfob(i,r,s)
   2372          + TRNSHR(i,r,s) * ptrans(i,r,s);
   2373   !<
   2374       This equation links export and import prices for each commodity/route
   2375       triplet.  Note that technical change is embodied in ptrans(i,r,s) which is
   2376       now a cost index, as opposed to (HT 26') where it represented the price of
   2377       margins services.
   2378   >!
   2379    
   2380    
   2381   !<
   2382       ---------------------
   2383       7. Regional Household
   2384       ---------------------
   2385    
   2386       7-0. Module-Specific Coefficients
   2387       7-1. Supply of Endowments by the Regional Household
   2388       7-2. Computation of Regional Income
   2389       7-3. Regional Household Demand System
   2390       7-4. Aggregate Utility
   2391   >!
   2392    
   2393    
   2394   !<
   2395       7-0. Module-Specific Coefficients
   2396       ---------------------------------
   2397    
   2398       only used in this Regional Household module
   2399   >!
   2400    
   2401   Coefficient (all,r,REG)
   2402       XSHRPRIV(r) # private expenditure share in regional income #;
   2403   Formula (all,r,REG)
   2404       XSHRPRIV(r) = PRIVEXP(r) / INCOME(r);
   2405    
   2406   Coefficient (all,r,REG)
   2407       XSHRGOV(r) # government expenditure share in regional income #;
   2408   Formula (all,r,REG)
   2409       XSHRGOV(r) = GOVEXP(r) / INCOME(r);
   2410    
   2411   Coefficient (all,r,REG)
   2412       XSHRSAVE(r) # saving share in regional income #;
   2413   Formula (all,r,REG)
   2414       XSHRSAVE(r) = SAVE(r) / INCOME(r);
   2415    
   2416   Variable (all,r,REG)
   2417       uelas(r) # elasticity of cost of utility wrt utility #;
   2418    
   2419   Variable (all,r,REG)
   2420       dppriv(r) # private consumption distribution parameter #;
   2421   Variable (all,r,REG)
   2422       dpgov(r) # government consumption distribution parameter #;
   2423   Variable (all,r,REG)
   2424       dpsave(r) # saving distribution parameter #;
   2425    
   2426    
   2427   !<
   2428       7-1. Supply of Endowments by the Regional Household
   2429       ---------------------------------------------------
   2430   >!
   2431   Equation FACTORINCPRICES
   2432   # eq'n links pre- and post-tax endowment supply prices (HT 15) #
   2433   (all,i,ENDW_COMM)(all,r,REG)
   2434       ps(i,r) = to(i,r) + pm(i,r);
   2435    
   2436   Coefficient (all,r,REG)
   2437       TINC(r) # income tax payments in r #;
   2438   Formula (all,r,REG)
   2439       TINC(r) = sum(i,ENDW_COMM, PTAX(i,r));
   2440    
   2441   Equation TINCRATIO
   2442   # change in ratio of income tax payments to regional income #
   2443   (all,r,REG)
   2444       100.0 * INCOME(r) * del_taxrinc(r) + TINC(r) * y(r)
   2445           = sum(i,ENDW_COMM,
   2446               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   2447    
   2448   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2449       REVSHR(i,j,r);
   2450   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2451       REVSHR(i,j,r) = VFM(i,j,r) / sum(k,PROD_COMM, VFM(i,k,r));
   2452   Equation ENDW_PRICE
   2453   # eq'n generates the composite price for sluggish endowments (HT 50) #
   2454   (all,i,ENDWS_COMM)(all,r,REG)
   2455       pm(i,r) = sum(k,PROD_COMM, REVSHR(i,k,r) * pmes(i,k,r));
   2456    
   2457   Coefficient (parameter)(all,i,ENDW_COMM)(all,r,REG)
   2458       ETRAE(i,r)
   2459       # elst. of transformation for sluggish primary factor endowments #;
   2460   Read
   2461       ETRAE from file GTAPPARM header "ETRE";
   2462    
   2463   !<
   2464       ETRAE is the elasticity of transformation for sluggish primary factor
   2465       endowments.  It is non-positive, by definition.
   2466   >!
   2467    
   2468   !<
   2469       GTAP-AEZ supply of sluggish endowments
   2470       --------------------------------------
   2471   >!
   2472    
   2473   Equation NAEZEND_SUPPLY
   2474   # eq'n distributes the sluggish non-AEZ endowments across sectors (HT 51) #
   2475   (all,i,SNAEZ_COMM)(all,j,PROD_COMM)(all,r,REG)
   2476    qoes(i,j,r) = qo(i,r) - endwslack(i,r) + ETRAE(i,r) * [pm(i,r) - pmes(i,j,r)];
   2477    
   2478   !<
   2479       Land supply is nested: first land cover, then harvested area (crops)
   2480   >!
   2481    
   2482   !<
   2483       Land cover (forestry, grazing, crops)
   2484   >!
   2485    
   2486   Coefficient (parameter)(all,i,AEZ_COMM) (all,r,REG)
   2487       ETRAEL1(i,r)
   2488       # elst. of transformation for land cover at bottom of supply tree #;
   2489   Read
   2490       ETRAEL1 from file GTAPPARM header "ETL1";
   2491    
   2492   Coefficient
   2493       SIZE_LAND # size of LAND_COMM set #;
   2494   Formula
   2495       SIZE_LAND = sum(i,LAND_COMM, 1);
   2496    
   2497   Variable (all,i,AEZ_COMM)(all,r,REG)
   2498       pmland(i,r) # market price of sluggish endowment in r #;
   2499   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   2500       REVSHR1(i,j,r);
   2501   Formula (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG: VOM(i,r) = 0)
   2502       REVSHR1(i,j,r) = 1.0 / SIZE_LAND;
   2503   Formula (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG: VOM(i,r) > 0)
   2504       REVSHR1(i,j,r) = VFM(i,j,r) / sum(k,LAND_COMM, VFM(i,k,r));
   2505    
   2506   Equation LAND_PRICE
   2507   # eq'n generates the composite price for sluggish endowments (HT 50) #
   2508   (all,i,AEZ_COMM)(all,r,REG)
   2509       pmland(i,r) = sum(k,LAND_COMM, REVSHR1(i,k,r) * pmes(i,k,r));
   2510    
   2511   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   2512       CROPRENTS(i,r);
   2513   Formula (all,i,AEZ_COMM)(all,r,REG)
   2514       CROPRENTS(i,r) = sum(k,AGRLAND_COMM, VFM(i,k,r));
   2515    
   2516   Coefficient
   2517       SIZE_CROP # size of CROP_COMM set #;
   2518   Formula
   2519       SIZE_CROP = sum(i,CROP_COMM, 1);
   2520    
   2521   Variable (all,i,AEZ_COMM)(all,r,REG)
   2522       qocropland(i,r) # supply of sluggish endowment in r #;
   2523   Variable (all,i,AEZ_COMM)(all,r,REG)
   2524       pmcropland(i,r) # market price of sluggish endowment in r #;
   2525   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   2526       REVSHR2(i,j,r);
   2527   Formula (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG: CROPRENTS(i,r) = 0)
   2528       REVSHR2(i,j,r) = 1.0 / SIZE_CROP;
   2529   Formula (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG: CROPRENTS(i,r) > 0)
   2530       REVSHR2(i,j,r) = VFM(i,j,r) / sum(k,CROP_COMM, VFM(i,k,r));
   2531    
   2532   Equation CROPLAND_PRICE
   2533   # eq'n generates the composite price for sluggish endowments (HT 50) #
   2534   (all,i,AEZ_COMM)(all,r,REG)
   2535       pmcropland(i,r) = sum(k,CROP_COMM, REVSHR2(i,k,r) * pmes(i,k,r));
   2536    
   2537   Equation AGRLAND_SUPPLY
   2538   # eq'n distributes the sluggish endowments across sectors (HT 51) #
   2539   (all,i,AEZ_COMM)(all,r,REG)
   2540    qocropland(i,r) = qo(i,r) - endwslack(i,r)
   2541       + ETRAEL1(i,r) * [pmland(i,r) - pmcropland(i,r)];
   2542    
   2543   Equation OTHLAND_SUPPLY
   2544   # eq'n distributes the sluggish endowments across forestry and grazing #
   2545   (all,i,AEZ_COMM)(all,j,NCROP_COMM)(all,r,REG)
   2546    qoes(i,j,r) = qo(i,r) - endwslack(i,r)
   2547       + ETRAEL1(i,r) * [pmland(i,r) - pmes(i,j,r)];
   2548    
   2549   !<
   2550       Crop land supply
   2551   >!
   2552    
   2553   Coefficient (parameter)(all,i,AEZ_COMM)(all,r,REG)
   2554       ETRAEL2(i,r)
   2555       # elst. of transformation for crop land in supply tree #;
   2556   Read
   2557       ETRAEL2 from file GTAPPARM header "ETL2";
   2558    
   2559   Equation INDCROPLAND_SUPPLY
   2560   # eq'n distributes the sluggish endowments across sectors (HT 51) #
   2561   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   2562    qoes(i,j,r) = qocropland(i,r) - endwslack(i,r)
   2563       + ETRAEL2(i,r) * [pmcropland(i,r) - pmes(i,j,r)];
   2564    
   2565   !<
   2566       7-2. Computation of Regional Income
   2567       -----------------------------------
   2568   >!
   2569    
   2570   Coefficient (all,r,REG)
   2571       FY(r) # primary factor income in r net of depreciation #;
   2572   Formula (all,r,REG)
   2573       FY(r) = sum(i,ENDW_COMM, VOM(i,r)) - VDEP(r);
   2574   Variable (all,r,REG)
   2575       fincome(r) # factor income at market prices net of depreciation #;
   2576   Equation FACTORINCOME
   2577   # factor income at market prices net of depreciation #
   2578   (all,r,REG)
   2579       FY(r) * fincome(r)
   2580           = sum(i,ENDW_COMM, VOM(i,r) * [pm(i,r) + qo(i,r)])
   2581           - VDEP(r)  * [pcgds(r) + kb(r)];
   2582    
   2583   Variable (change)(all,r,REG)
   2584       del_indtaxr(r) # change in ratio of indirect taxes to INCOME in r #;
   2585   Equation DINDTAXRATIO
   2586   # change in ratio of indirect taxes to INCOME in r #
   2587   (all,r,REG)
   2588       del_indtaxr(r)
   2589           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2590           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r);
   2591    
   2592   Variable (change)(all,r,REG)
   2593       del_ttaxr(r) # change in ratio of taxes to INCOME in r #;
   2594   Equation DTAXRATIO
   2595   # change in ratio of taxes to INCOME in r #
   2596   (all,r,REG)
   2597       del_ttaxr(r)
   2598           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2599           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r) + del_taxrinc(r);
   2600   !<
   2601      This variable can be swapped with the commodity- and source-generic
   2602      consumption tax shift, tp(r), in order to generate a tax replacement
   2603      scenario, whereby taxes remain a constant share of national income.
   2604   >!
   2605    
   2606   Variable (all,r,REG)
   2607       incomeslack(r) # slack variable in the expression for regional income #;
   2608   !<
   2609       This is exogenous, unless the user wishes to fix regional income.
   2610   >!
   2611    
   2612   ![[!  !]]!
   2613    
   2614   ! Payments for Ecosystems Module !
   2615   ! This module uses regional income shifters in order to simulate payments across
   2616     countries. It requires exogenous information on amount of land reduction
   2617     payments per hectare for land endowment reduction for each region
   2618     as well as the contribution of each region to the global pool used
   2619     to compenstate for the land reduction !
   2620    
   2621   !--- Initialize ODA data --- !
   2622    
   2623   Coefficient (parameter) (all,r,REG)                     PESHR(r)
   2624       # share of PES contribution of region r #;
   2625       Read PESHR from file GTAPDATA header "SPES";
   2626    
   2627   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)   PESha(i,r)
   2628       # cost per hectare of PES to region r #;
   2629       Read PESha from file gtapSUPP header "PESH";
   2630    
   2631   Variable (change)(all,r,REG)                       pes_inflow(r)
   2632      # inflow of PES needed in region r #;
   2633    
   2634   Variable (change) (all,r,REG)                    pes_outflow(r)
   2635      # regional PES contribution #;
   2636      ! Total change in PES in region r is endogenous and depends on the
   2637        global amount of PES and region r's contribution!
   2638   !]]!
   2639    
   2640   Variable (change)                                 pes_outflow_wld
   2641      # total global PES needs #;
   2642      ! Total change in PES in region r endogenous and depends on the
   2643        amout of land being reduced in region r!
   2644    
   2645   ![[! August 11, 2022 (EC):
   2646       Reformulate the SHARE of each donor country to the PES global pool as a
   2647       proportion of their incomes instead of fixed equal shares. We first define
   2648       the elements of the donor country SET at run-time (based on previous equal
   2649       share value), then derive donor country contribution shares in proportion to
   2650       their initial incomes.
   2651    !]]!
   2652   Set
   2653       PESDONORS # PES donor countries # = (all,r,REG:PESHR(r) > 0.0);
   2654   Formula (initial)(all,r,REG)
   2655       PESHR(r) = 0.0 + IF[r in PESDONORS, INCOME(r)/sum{rr,PESDONORS, INCOME(rr)}];
   2656   Write
   2657       (set) PESDONORS to file GTAPSUM header "PESD";
   2658       PESHR  to file GTAPSUM header "PESH";
   2659       INCOME to file GTAPSUM header "INCR";
   2660    
   2661   ![[! August 11, 2022 (EC): End of changes                                   !]]!
   2662    
   2663   Equation E_pes_contribution (all,r,REG)
   2664       pes_outflow(r) = PESHR(r) * pes_outflow_wld;
   2665    
   2666   Equation E_pes_balance
   2667        sum(r, REG, pes_inflow(r)) = sum(r, REG, pes_outflow(r));
   2668    
   2669   Coefficient (all,r,REG)
   2670       INDTAX(r) # indirect tax receipts in r #;
   2671   Formula (all,r,REG)
   2672       INDTAX(r) = TPC(r) + TGC(r) + TIU(r) + TFU(r) + TOUT(r) + TEX(r) + TIM(r);
   2673   !
   2674   Equation REGIONALINCOME
   2675   # regional income = sum of primary factor income and indirect tax receipts #
   2676   (all,r,REG)
   2677       INCOME(r) * y(r)
   2678           = FY(r) * fincome(r)
   2679           + 100.0 * INCOME(r) * del_indtaxr(r)
   2680           + INDTAX(r) * y(r)
   2681           + INCOME(r) * incomeslack(r);!
   2682    
   2683   Equation REGIONALINCOME
   2684   # modified regional income = sum of primary factor income and indirect tax receipts #
   2685   (all,r,REG)
   2686       INCOME(r) * y(r)
   2687           = FY(r) * fincome(r)
   2688           + 100.0 * INCOME(r) * del_indtaxr(r)
   2689           + INDTAX(r) * y(r)
   2690           + INCOME(r) * incomeslack(r) + [100*pes_inflow(r) - 100*pes_outflow(r)];
   2691    
   2692   !<
   2693       This equation computes regional income as the sum of primary factor
   2694       payment and indirect tax receipts.  The first term computes the change in
   2695       endowment income, net of depreciation.  The subsequent terms compute the
   2696       change in indirect tax receipts for various transactions taxes.
   2697   >!
   2698    
   2699    
   2700   !<
   2701       7-3. Regional Household Demand System
   2702       -------------------------------------
   2703   >!
   2704    
   2705   Variable (all,r,REG)
   2706       dpav(r) # average distribution parameter shift, for EV calc. #;
   2707   Equation DPARAV
   2708   # average distribution parameter shift #
   2709   (all,r,REG)
   2710       dpav(r)
   2711           = XSHRPRIV(r) * dppriv(r)
   2712           + XSHRGOV(r) * dpgov(r)
   2713           + XSHRSAVE(r) * dpsave(r);
   2714    
   2715   Equation UTILITELASTIC
   2716   # elasticity of cost of utility wrt utility #
   2717   (all,r,REG)
   2718       uelas(r) = XSHRPRIV(r) * uepriv(r) - dpav(r);
   2719    
   2720   Equation PRIVCONSEXP
   2721   # private consumption expenditure #
   2722   (all,r,REG)
   2723       yp(r) - y(r) = -[uepriv(r) - uelas(r)] + dppriv(r);
   2724    
   2725   Equation GOVCONSEXP
   2726   # government consumption expenditure #
   2727   (all,r,REG)
   2728       yg(r) - y(r) = uelas(r) + dpgov(r);
   2729    
   2730   Equation SAVING
   2731   # saving #
   2732   (all,r,REG)
   2733       psave(r) + qsave(r) - y(r) = uelas(r) + dpsave(r);
   2734    
   2735    
   2736   !<
   2737       7-4. Aggregate Utility
   2738       ----------------------
   2739   >!
   2740    
   2741   Variable (all,r,REG)
   2742       p(r) # price index for disposition of income by regional household #;
   2743   Equation PRICEINDEXREG
   2744       # price index for disposition of income by regional household #
   2745       (all,r,REG)
   2746       p(r)
   2747           = XSHRPRIV(r) * ppriv(r)
   2748           + XSHRGOV(r) * pgov(r)
   2749           + XSHRSAVE(r) * psave(r);
   2750    
   2751   Variable (all,r,REG)
   2752       au(r) # input-neutral shift in utility function #;
   2753   Variable (all,r,REG)
   2754       dpsum(r) # sum of the distribution parameters #;
   2755    
   2756   Coefficient (all,r,REG)
   2757       DPARSUM(r) # sum of distribution parameters #;
   2758   Read
   2759       DPARSUM from file GTAPDATA header "DPSM";
   2760   Update (all,r,REG)
   2761       DPARSUM(r) = dpsum(r);
   2762    
   2763   Coefficient (all,r,REG)
   2764       UTILELAS(r) # elasticity of cost of utility wrt utility #;
   2765   Formula (all,r,REG)
   2766       UTILELAS(r)
   2767           = [UELASPRIV(r) * XSHRPRIV(r) + XSHRGOV(r) + XSHRSAVE(r)] / DPARSUM(r);
   2768    
   2769   Coefficient (all,r,REG)
   2770       DPARPRIV(r) # private consumption distribution parameter #;
   2771   Formula (all,r,REG)
   2772       DPARPRIV(r) = UELASPRIV(r) * XSHRPRIV(r) / UTILELAS(r);
   2773    
   2774   Coefficient (all,r,REG)
   2775       DPARGOV(r) # government consumption distribution parameter #;
   2776   Formula (all,r,REG)
   2777       DPARGOV(r) = XSHRGOV(r) / UTILELAS(r);
   2778    
   2779   Coefficient (all,r,REG)
   2780       DPARSAVE(r) # saving distribution parameter #;
   2781   Formula (all,r,REG)
   2782       DPARSAVE(r) = XSHRSAVE(r) / UTILELAS(r);
   2783    
   2784   Coefficient (all,r,REG)
   2785       UTILPRIV(r) # utility from private consumption #;
   2786   Formula (initial)(all,r,REG)
   2787       UTILPRIV(r) = 1.0;
   2788   Update (all,r,REG)
   2789       UTILPRIV(r) = up(r);
   2790    
   2791   Coefficient (all,r,REG)
   2792       UTILGOV(r) # utility from government consumption #;
   2793   Formula (initial)(all,r,REG)
   2794       UTILGOV(r) = 1.0;
   2795   Update (all,r,REG)
   2796       UTILGOV(r) = ug(r);
   2797    
   2798   Coefficient (all,r,REG)
   2799       UTILSAVE(r) # utility from saving #;
   2800   Formula (initial)(all,r,REG)
   2801       UTILSAVE(r) = 1.0;
   2802   Update (change) (all,r,REG)
   2803       UTILSAVE(r) = [[qsave(r) - pop(r)] / 100] * UTILSAVE(r);
   2804    
   2805   ! EC (Aug 2022): Add orig_level statement in u !
   2806   ! Variable (all,r,REG) !
   2807   Variable (Orig_level=INCOMEEV)(all,r,REG)
   2808       u(r) # per capita utility from aggregate hhld expend. in region r #;
   2809   ! EC (Aug 2022): End of changes !
   2810   Equation UTILITY
   2811   # regional household utility #
   2812   (all,r,REG)
   2813       u(r)
   2814           = au(r)
   2815           + DPARPRIV(r) * loge(UTILPRIV(r)) * dppriv(r)
   2816           + DPARGOV(r) * loge(UTILGOV(r)) * dpgov(r)
   2817           + DPARSAVE(r) * loge(UTILSAVE(r)) * dpsave(r)
   2818           + [1.0 / UTILELAS(r)] * [y(r) - pop(r) - p(r)];
   2819    
   2820   Equation DISTPARSUM
   2821   # sum of the distribution parameters #
   2822   (all,r,REG)
   2823       DPARSUM(r) * dpsum(r)
   2824           = DPARPRIV(r) * dppriv(r)
   2825           + DPARGOV(r) * dpgov(r)
   2826           + DPARSAVE(r) * dpsave(r);
   2827    
   2828    
   2829   !<
   2830       -------------------------
   2831       8. Equilibrium Conditions
   2832       -------------------------
   2833    
   2834       8-1. Market Clearing Conditions
   2835       8-2. Walras' Law
   2836   >!
   2837    
   2838    
   2839   !<
   2840       8-1. Market Clearing Conditions
   2841       -------------------------------
   2842   >!
   2843    
   2844   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2845       SHRDFM(i,j,r) # share of dom. prod. i used by sector j in r at mkt prices #;
   2846   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2847       SHRDFM(i,j,r) = VDFM(i,j,r) / VDM(i,r);
   2848    
   2849   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2850       SHRDPM(i,r) # share of domestic prod. of i used by private hhlds in r #;
   2851   Formula (all,i,TRAD_COMM)(all,r,REG)
   2852       SHRDPM(i,r) = VDPM(i,r) / VDM(i,r);
   2853    
   2854   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2855       SHRDGM(i,r) # share of imports of i used by gov't hhlds in r #;
   2856   Formula (all,i,TRAD_COMM)(all,r,REG)
   2857       SHRDGM(i,r) = VDGM(i,r) / VDM(i,r);
   2858    
   2859   Variable (orig_level=VDM)(all,i,TRAD_COMM)(all,r,REG)
   2860       qds(i,r) # domestic sales of commodity i in r #;
   2861   Equation MKTCLDOM
   2862   # eq'n assures market clearing for domestic sales (HT 3) #
   2863   (all,i,TRAD_COMM)(all,r,REG)
   2864       qds(i,r)
   2865           = sum(j,PROD_COMM, SHRDFM(i,j,r) * qfd(i,j,r))
   2866           + SHRDPM(i,r) * qpd(i,r)
   2867           + SHRDGM(i,r) * qgd(i,r);
   2868    
   2869   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2870       SHRDM(i,r) # share of domestic sales of i in r #;
   2871   Formula (all,i,TRAD_COMM)(all,r,REG)
   2872       SHRDM(i,r) = VDM(i,r) / VOM(i,r);
   2873    
   2874   Coefficient (all,m,MARG_COMM)(all,r,REG)
   2875       SHRST(m,r) # share of sales of m to global transport services in r #;
   2876   Formula (all,m,MARG_COMM)(all,r,REG)
   2877       SHRST(m,r) = VST(m,r) / VOM(m,r);
   2878    
   2879   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2880       SHRXMD(i,r,s) # share of export sales of i to s in r #;
   2881   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2882       SHRXMD(i,r,s) = VXMD(i,r,s) / VOM(i,r);
   2883    
   2884   Variable (all,i,TRAD_COMM)(all,r,REG)
   2885       tradslack(i,r) # slack variable in tradeables market clearing condition #;
   2886   !<
   2887       This is exogenous unless the user wishes to specify the price of
   2888       tradeables exogenously, in which case the analysis becomes partial
   2889       equilibrium and walraslack must be exogenized.
   2890   >!
   2891    
   2892   Equation MKTCLTRD_MARG
   2893   # eq'n assures market clearing for margins commodities (HT 1) #
   2894   (all,m,MARG_COMM)(all,r,REG)
   2895       qo(m,r)
   2896           = SHRDM(m,r) * qds(m,r)
   2897           + SHRST(m,r) * qst(m,r)
   2898           + sum(s,REG, SHRXMD(m,r,s) * qxs(m,r,s))
   2899           + tradslack(m,r);
   2900   Equation MKTCLTRD_NMRG
   2901   # eq'n assures market clearing for the non-margins commodities (HT 1) #
   2902   (all,i,NMRG_COMM)(all,r,REG)
   2903       qo(i,r)
   2904           = SHRDM(i,r) * qds(i,r)
   2905           + sum(s,REG, SHRXMD(i,r,s) * qxs(i,r,s))
   2906           + tradslack(i,r);
   2907    
   2908   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2909       VIM(i,r) # value of imports of commodity i in r at domestic market prices #;
   2910   Formula (all,i,TRAD_COMM)(all,r,REG)
   2911       VIM(i,r) = sum(j,PROD_COMM, VIFM(i,j,r)) + VIPM(i,r) + VIGM(i,r);
   2912    
   2913   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2914       SHRIFM(i,j,r) # share of import i used by sector j in r  #;
   2915   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2916       SHRIFM(i,j,r) = VIFM(i,j,r) / VIM(i,r);
   2917    
   2918   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2919       SHRIPM(i,r) # share of import i used by private hhlds in r #;
   2920   Formula (all,i,TRAD_COMM)(all,r,REG)
   2921       SHRIPM(i,r) = VIPM(i,r) / VIM(i,r);
   2922    
   2923   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2924       SHRIGM(i,r) # the share of import i used by gov't hhlds in r #;
   2925   Formula (all,i,TRAD_COMM)(all,r,REG)
   2926       SHRIGM(i,r) = VIGM(i,r) / VIM(i,r);
   2927    
   2928   Equation MKTCLIMP
   2929   # eq'n assures mkt clearing for imported goods entering each region (HT 2) #
   2930   (all,i,TRAD_COMM)(all,r,REG)
   2931       qim(i,r)
   2932           = sum(j,PROD_COMM, SHRIFM(i,j,r) * qfm(i,j,r))
   2933           + SHRIPM(i,r) * qpm(i,r)
   2934           + SHRIGM(i,r) * qgm(i,r);
   2935    
   2936   Coefficient (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2937       SHREM(i,j,r) # share of mobile endowment i used by sector j at mkt prices #;
   2938   Formula (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2939       SHREM(i,j,r) = VFM(i,j,r) / VOM(i,r);
   2940    
   2941   Equation MKTCLENDWM
   2942   # eq'n assures mkt clearing for perfectly mobile endowments in each r (HT 4) #
   2943   (all,i,ENDWM_COMM)(all,r,REG)
   2944       qo(i,r) = sum(j,PROD_COMM, SHREM(i,j,r) * qfe(i,j,r)) + endwslack(i,r);
   2945   !<
   2946       This equation assures market clearing for perfectly mobile endowments (HT
   2947       4)
   2948   >!
   2949    
   2950   Equation MKTCLENDWS
   2951   # eq'n assures mkt clearing for imperfectly mobile endowments in each r (HT 5) #
   2952   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   2953       qoes(i,j,r) = qfe(i,j,r);
   2954   !<
   2955       This equation assures market clearing for sluggish endowments (HT 5)
   2956   >!
   2957    
   2958    
   2959   !<
   2960       8-2. Walras' Law
   2961       ----------------
   2962   >!
   2963    
   2964   Variable
   2965       walras_sup # supply in omitted market--global supply of cgds composite #;
   2966   Equation WALRAS_S
   2967   # Extra eq'n computes change in supply in the omitted market. #
   2968       walras_sup = pcgdswld + globalcgds;
   2969   !<
   2970       This is an extra equation which simply computes change in supply in the
   2971       omitted market.  (modified from HT 12 to reflect the value as opposed to
   2972       quantity change, in light of the new treatment of psave(r))
   2973   >!
   2974    
   2975   Variable
   2976       walras_dem # demand in the omitted market--global demand for savings #;
   2977   Equation WALRAS_D
   2978   # Extra eq'n computes change in demand in the omitted market. #
   2979       GLOBINV * walras_dem = sum(r,REG, SAVE(r) * [psave(r) + qsave(r)]);
   2980   !<
   2981       This is an extra equation which simply computes change in demand in the
   2982       omitted market.  (modified from HT 13 to reflect the value as opposed to
   2983       quantity change)
   2984   >!
   2985    
   2986   Variable
   2987       walraslack # slack variable in the omitted market #;
   2988   !<
   2989       This is endogenous under normal, GE closure.  If the GE links are broken,
   2990       then this must be swapped with the numeraire, thereby forcing global
   2991       savings to explicitly equal global investment.
   2992   >!
   2993   Equation WALRAS
   2994   # Check Walras' Law.  Value of "walraslack" should be zero. (HT 14) #
   2995       walras_sup = walras_dem + walraslack;
   2996   !<
   2997       This equation checks Walras' Law.  The value of walraslack should be zero
   2998       in any GE simulation.  (HT 14)
   2999   >!
   3000    
   3001    
   3002   !<
   3003       ==========
   3004       Appendices
   3005       ==========
   3006    
   3007       A. Summary Indices
   3008       B. Equivalent Variation
   3009       C. Welfare Decomposition
   3010       D. Terms of Trade Decomposition
   3011   >!
   3012    
   3013    
   3014   !<
   3015       ------------------
   3016       A. Summary Indices
   3017       ------------------
   3018    
   3019       The following equations calculate many useful summary statistics.  They do
   3020       not generally affect the equilibrium structure of the model, although they
   3021       do include the equation for the usual numeraire variable, "pfactwld". Some
   3022       are documented in Hertel and Tsigas, many are new.
   3023    
   3024       A-0. Appendix-Specific Variables and Coefficients
   3025       A-1. Factor Price Indices
   3026       A-2. Regional Terms of Trade
   3027       A-3. GDP Indices (Value, Price and Quantity)
   3028       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   3029       A-5. Trade Balance Indices
   3030   >!
   3031    
   3032    
   3033   !<
   3034       A-0. Appendix-Specific Variables and Coefficients
   3035       -------------------------------------------------
   3036    
   3037       only used in this Summary Indices appendix
   3038   >!
   3039    
   3040   Variable (all,i,TRAD_COMM)(all,s,REG)
   3041       vxwfob(i,s) # value of merchandise regional exports, by commodity, FOB #;
   3042   Variable (all,i,TRAD_COMM)(all,s,REG)
   3043       viwcif(i,s) # value of merchandise regional imports, by commodity, CIF #;
   3044   Variable (all,r,REG)
   3045       vxwreg(r) # value of merchandise exports, by region #;
   3046   Variable (all,r,REG)
   3047       viwreg(r) # value of merchandise imports, by region, at world prices #;
   3048    
   3049   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3050       VXW(i,r) # value of exports by comm. i and region r at FOB prices #;
   3051   Formula (all,m,MARG_COMM)(all,r,REG)
   3052       VXW(m,r) = sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   3053   Formula (all,i,NMRG_COMM)(all,r,REG)
   3054       VXW(i,r) = sum(s,REG, VXWD(i,r,s));
   3055    
   3056   Coefficient (all,r,REG)
   3057       VXWREGION(r) # value of exports by region r at FOB prices #;
   3058   Formula (all,r,REG)
   3059       VXWREGION(r) = sum(i,TRAD_COMM, VXW(i,r));
   3060    
   3061   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   3062       VIW(i,s) # value of commodity imports i into s at CIF prices #;
   3063   Formula (all,i,TRAD_COMM)(all,s,REG)
   3064       VIW(i,s) = sum(r,REG, VIWS(i,r,s));
   3065   Coefficient (all,r,REG)
   3066       VIWREGION(r) # value of commodity imports by region r at CIF prices #;
   3067   Formula (all,r,REG)
   3068       VIWREGION(r) = sum(i,TRAD_COMM, VIW(i,r));
   3069    
   3070    
   3071   !<
   3072       A-1. Factor Price Indices
   3073       -------------------------
   3074   >!
   3075    
   3076   Variable (orig_level=1.0)(all,i,ENDW_COMM)(all,r,REG)
   3077       pfactreal(i,r) # ratio of return to primary factor i to CPI in r #;
   3078   Equation REALRETURN
   3079   # eq'n defines the real rate of return to primary factor i in region r #
   3080   (all,i,ENDW_COMM)(all,s,REG)
   3081       pfactreal(i,s) = pm(i,s) - ppriv(s);
   3082   !<
   3083       This equation defines the real rate of return to primary factor i in
   3084       region r (new).
   3085   >!
   3086    
   3087   Coefficient (all,r,REG)
   3088       VENDWREG(r) # value of primary factors, at mkt prices, by region #;
   3089   Formula (all,r,REG)
   3090       VENDWREG(r) = sum(i,ENDW_COMM, VOM(i,r));
   3091    
   3092   Variable (orig_level=1.0)(all,r,REG)
   3093       pfactor(r) # market price index of primary factors, by region #;
   3094   Equation PRIMFACTPR
   3095   # computes % change in price index of primary factors, by region #
   3096   (all,r,REG)
   3097       VENDWREG(r) * pfactor(r) = sum(i,ENDW_COMM, VOM(i,r) * pm(i,r));
   3098    
   3099   Coefficient
   3100       VENDWWLD # value of primary factors, at mkt prices, worldwide #;
   3101   Formula
   3102       VENDWWLD = sum(r,REG, VENDWREG(r));
   3103   Variable (orig_level=1.0)
   3104       pfactwld # world price index of primary factors #;
   3105   Equation PRIMFACTPRWLD
   3106   # computes % change in global price index of primary factors #
   3107       VENDWWLD * pfactwld = sum(r,REG, VENDWREG(r) * pfactor(r));
   3108    
   3109    
   3110   !<
   3111       A-2. Regional Terms of Trade
   3112       ----------------------------
   3113    
   3114       The next three equations correspond to Table 10 of Hertel and Tsigas on
   3115       Regional Terms of Trade.
   3116   >!
   3117    
   3118   Variable (orig_level=1.0)(all,r,REG)
   3119       psw(r) # index of prices received for tradeables produced in r #;
   3120   Equation REGSUPRICE
   3121   # estimate change in index of prices received for tradeables i produced in r #
   3122   (all,r,REG)
   3123       VXWREGION(r) * psw(r)
   3124           = sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   3125           + sum(m,MARG_COMM, VST(m,r) * pm(m,r));
   3126   !<
   3127       This equation estimates the change in the index of prices received for
   3128       tradeable products produced in r.  (modified from HT 64 to eliminate the
   3129       investment component)
   3130   >!
   3131    
   3132   Variable (orig_level=1.0)(all,r,REG)
   3133       pdw(r) # index of prices paid for tradeables used in region r #;
   3134   Equation REGDEMPRICE
   3135   # estimate change in index of prices paid for tradeable products used in r #
   3136   (all,r,REG)
   3137       VIWREGION(r) * pdw(r)
   3138           = sum(i,TRAD_COMM, sum(k,REG, VIWS(i,k,r) * pcif(i,k,r)));
   3139   !<
   3140       This equation estimates the change in the index of prices paid for
   3141       tradeable products used in r.  (modified from HT 65 to eliminate savings)
   3142   >!
   3143    
   3144   Variable (orig_level=1.0)(all,r,REG)
   3145       tot(r) # terms of trade for region r: tot(r) = psw(r) - pdw(r) #;
   3146   Equation TOTeq
   3147   # terms of trade equation computed as difference in psw and pdw (HT 66) #
   3148   (all,r,REG)
   3149       tot(r) = psw(r) - pdw(r);
   3150    
   3151    
   3152   !<
   3153       A-3. GDP Indices (Value, Price and Quantity)
   3154       --------------------------------------------
   3155   >!
   3156    
   3157   Coefficient (all,r,REG)
   3158       GDP(r) # Gross Domestic Product in region r #;
   3159   Formula (all,s,REG)
   3160       GDP(s)
   3161           = sum(i,TRAD_COMM, VPA(i,s))
   3162           + sum(i,TRAD_COMM, VGA(i,s))
   3163           + sum(k,CGDS_COMM, VOA(k,s))
   3164           + sum(i,TRAD_COMM, sum(r,REG, VXWD(i,s,r)))
   3165           + sum(m,MARG_COMM, VST(m,s))
   3166           - sum(i,TRAD_COMM, sum(r,REG, VIWS(i,r,s)));
   3167   !<
   3168       Gross Domestic Product in region r.  Trade is valued at FOB and CIF
   3169       prices.
   3170   >!
   3171    
   3172   Variable (all,r,REG)
   3173       vgdp(r) # change in value of GDP #;
   3174   Equation VGDP_r
   3175   # change in value of GDP (HT 70) #
   3176   (all,r,REG)
   3177       GDP(r) * vgdp(r)
   3178           = sum(i,TRAD_COMM, VGA(i,r) * [qg(i,r) + pg(i,r)])
   3179           + sum(i,TRAD_COMM, VPA(i,r) * [qp(i,r) + pp(i,r)])
   3180           + REGINV(r) * [qcgds(r) + pcgds(r)]
   3181           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]))
   3182           + sum(m,MARG_COMM, VST(m,r) * [qst(m,r) + pm(m,r)])
   3183           - sum(i,TRAD_COMM, sum(s,REG,
   3184               VIWS(i,s,r) * [qxs(i,s,r) + pcif(i,s,r)]));
   3185    
   3186   Variable (orig_level=1.0)(all,r,REG)
   3187       pgdp(r) # GDP price index #;
   3188   Equation PGDP_r
   3189   # GDP price index (HT 71) #
   3190   (all,r,REG)
   3191       GDP(r) * pgdp(r)
   3192           = sum(i,TRAD_COMM, VGA(i,r) * pg(i,r))
   3193           + sum(i,TRAD_COMM, VPA(i,r) * pp(i,r))
   3194           + REGINV(r) * pcgds(r)
   3195           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   3196           + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   3197           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * pcif(i,s,r)));
   3198    
   3199   Variable (orig_level=GDP)(all,r,REG)
   3200       qgdp(r) # GDP quantity index #;
   3201   Equation QGDP_r
   3202   # GDP quantity index #
   3203   (all,r,REG)
   3204       GDP(r) * qgdp(r)
   3205           = sum(i,TRAD_COMM, VGA(i,r) * qg(i,r))
   3206           + sum(i,TRAD_COMM, VPA(i,r) * qp(i,r))
   3207           + REGINV(r) * qcgds(r)
   3208           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * qxs(i,r,s)))
   3209           + sum(m,MARG_COMM, VST(m,r) * qst(m,r))
   3210           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * qxs(i,s,r)));
   3211   !<
   3212       modified from HT 72 for use with AnalyzeGE
   3213   >!
   3214    
   3215   Variable (all,i,PROD_COMM)(all,r,REG)
   3216       compvalad(i,r) # composition of value added for good i and region r #;
   3217   Equation COMPVALADEQ
   3218   # track change in composition of value added #
   3219   (all,i,PROD_COMM)(all,r,REG)
   3220       compvalad(i,r) = qo(i,r) - qgdp(r);
   3221    
   3222    
   3223   !<
   3224       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   3225       --------------------------------------------------------
   3226   >!
   3227    
   3228    
   3229   !<
   3230       Common Variables and Coefficients
   3231       Value Indices for Aggregate Trade
   3232       Price Indices for Aggregate Trade
   3233       Quantity Indices for Aggregate Trade
   3234   >!
   3235    
   3236    
   3237   !<
   3238       Common Variables and Coefficients
   3239       .................................
   3240    
   3241       only used in this Aggregate Trade Indices section
   3242   >!
   3243    
   3244   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   3245       pxw(i,r) # aggregate exports price index of i from region r #;
   3246    
   3247   Coefficient (all,i,TRAD_COMM)
   3248       VXWCOMMOD(i) # value of world exports by commodity i at FOB prices #;
   3249   Formula (all,i,TRAD_COMM)
   3250       VXWCOMMOD(i) = sum(r,REG, VXW(i,r));
   3251    
   3252   Coefficient
   3253       VXWLD # value of commodity exports, FOB, globally #;
   3254   Formula
   3255       VXWLD = sum(r,REG, VXWREGION(r));
   3256    
   3257   Coefficient (all,i,TRAD_COMM)
   3258       VIWCOMMOD(i) # global value of commodity imports, CIF, by commodity #;
   3259   Formula (all,i,TRAD_COMM)
   3260       VIWCOMMOD(i) = sum(r,REG, VIW(i,r));
   3261    
   3262   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3263       PW_PM(i,r) # ratio of world to domestic prices #;
   3264   Formula (all,i,TRAD_COMM)(all,r,REG)
   3265       PW_PM(i,r) = sum(s,REG, VXWD(i,r,s)) / sum(s,REG, VXMD(i,r,s));
   3266   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3267       VOW(i,r) # value of output in r at FOB including transportation services #;
   3268   Formula (all,m,MARG_COMM)(all,r,REG)
   3269       VOW(m,r) = VDM(m,r) * PW_PM(m,r) + sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   3270   Formula (all,i,NMRG_COMM)(all,r,REG)
   3271       VOW(i,r) = VDM(i,r) * PW_PM(i,r) + sum(s,REG, VXWD(i,r,s));
   3272    
   3273   Coefficient (all,i,TRAD_COMM)
   3274       VWOW(i) # value of world supply at world prices for i #;
   3275   Formula (all,i,TRAD_COMM)
   3276       VWOW(i) = sum(r,REG, VOW(i,r));
   3277    
   3278   Coefficient (all,i,TRAD_COMM)
   3279       VWOU(i) # value of world output of i at user prices #;
   3280   Formula (all,i,TRAD_COMM)
   3281       VWOU(i) = sum(s,REG, [VPA(i,s) + VGA(i,s)] + sum(j,PROD_COMM, VFA(i,j,s)));
   3282    
   3283    
   3284   !<
   3285       Value Indices for Aggregate Trade
   3286       .................................
   3287   >!
   3288    
   3289   Equation VREGEX_ir_MARG
   3290   # the change in FOB value of exports of m from r #
   3291   (all,m,MARG_COMM)(all,r,REG)
   3292       VXW(m,r) * vxwfob(m,r)
   3293           = sum(s,REG, VXWD(m,r,s) * [qxs(m,r,s) + pfob(m,r,s)])
   3294           + VST(m,r) * [qst(m,r) + pm(m,r)];
   3295   Equation VREGEX_ir_NMRG
   3296   # the change in FOB value of exports of commodity i from r (HT 73) #
   3297   (all,i,NMRG_COMM)(all,r,REG)
   3298       VXW(i,r) * vxwfob(i,r)
   3299           = sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]);
   3300    
   3301   Equation VREGEX_r
   3302   # computes % change in value of merchandise exports, by region (HT 75) #
   3303   (all,r,REG)
   3304       VXWREGION(r) * vxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * vxwfob(i,r));
   3305    
   3306   Variable (all,i,TRAD_COMM)
   3307       vxwcom(i) # value of global merchandise exports by commodity #;
   3308   Equation VWLDEX_i
   3309   # computes % change in FOB value of global exports, by commodity (HT 77) #
   3310   (all,i,TRAD_COMM)
   3311       VXWCOMMOD(i) * vxwcom(i) = sum(r,REG, VXW(i,r) * vxwfob(i,r));
   3312    
   3313   Variable
   3314       vxwwld # value of world trade #;
   3315   Equation VWLDEX
   3316   # computes % change in value of global exports (HT 79) #
   3317       VXWLD * vxwwld = sum(r,REG, VXWREGION(r) * vxwreg(r));
   3318    
   3319   Equation VREGIM_is
   3320   # the change in CIF value of imports of commodity i into s (HT 74) #
   3321   (all,i,TRAD_COMM)(all,s,REG)
   3322       VIW(i,s) * viwcif(i,s)
   3323           = sum(r,REG, VIWS(i,r,s) * [pcif(i,r,s) + qxs(i,r,s)]);
   3324    
   3325   Equation VREGIM_s
   3326   # computes % change in value of imports, CIF basis, by region (HT 76) #
   3327   (all,s,REG)
   3328       VIWREGION(s) * viwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * viwcif(i,s));
   3329    
   3330   Variable (all,i,TRAD_COMM)
   3331       viwcom(i) # value of global merchandise imports i, at world prices #;
   3332   Equation VWLDIM_i
   3333   # computes % change in value of global imports, by commodity (HT 78) #
   3334   (all,i,TRAD_COMM)
   3335       VIWCOMMOD(i) * viwcom(i) = sum(s,REG, VIW(i,s) * viwcif(i,s));
   3336    
   3337   Variable (all,i,TRAD_COMM)
   3338       valuew(i) # value of world supply of good i #;
   3339   Equation VWLDOUT
   3340   # change in value of world output of comm. i at FOB prices (HT 80) #
   3341   (all,i,TRAD_COMM)
   3342       VWOW(i) * valuew(i) = sum(r,REG, VOW(i,r) * [pxw(i,r) + qo(i,r)]);
   3343    
   3344   Variable (all,i,TRAD_COMM)
   3345       valuewu(i) # value of world supply of good i at user prices #;
   3346   Equation VWLDOUTUSE
   3347   # change in value of world output of commodity i at user prices #
   3348   (all,i,TRAD_COMM)
   3349       VWOU(i) * valuewu(i)
   3350           = sum(s,REG, VPA(i,s) * [pp(i,s) + qp(i,s)]
   3351           + VGA(i,s) * [pg(i,s) + qg(i,s)]
   3352           + sum(j,PROD_COMM, VFA(i,j,s) * [pf(i,j,s) + qf(i,j,s)]));
   3353    
   3354    
   3355   !<
   3356       Price Indices for Aggregate Trade
   3357       .................................
   3358   >!
   3359    
   3360   Equation PREGEX_ir_MARG
   3361   # change in FOB price index of exports of m from r #
   3362   (all,m,MARG_COMM)(all,r,REG)
   3363       VXW(m,r) * pxw(m,r)
   3364           = sum(s,REG, VXWD(m,r,s) * pfob(m,r,s)) + VST(m,r) * pm(m,r);
   3365    
   3366   Equation PREGEX_ir_NMRG
   3367   # change in FOB price index of exports of commodity i from r (HT 81) #
   3368   (all,i,NMRG_COMM)(all,r,REG)
   3369       VXW(i,r) * pxw(i,r) = sum(s,REG, VXWD(i,r,s) * pfob(i,r,s));
   3370    
   3371   Variable (orig_level=1.0)(all,r,REG)
   3372       pxwreg(r) # price index of merchandise exports, by region #;
   3373   Equation PREGEX_r
   3374   # computes % change in price index of exports, by region (HT 83) #
   3375   (all,r,REG)
   3376       VXWREGION(r) * pxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * pxw(i,r));
   3377    
   3378   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   3379       pxwcom(i) # price index of global merchandise exports by commodity #;
   3380   Equation PWLDEX_i
   3381   # computes % change in price index of exports, by commodity (HT 85) #
   3382   (all,i,TRAD_COMM)
   3383       VXWCOMMOD(i) * pxwcom(i) = sum(r,REG, VXW(i,r) * pxw(i,r));
   3384    
   3385   Variable (orig_level=1.0)
   3386       pxwwld # price index of world trade #;
   3387   Equation PWLDEX
   3388   # computes % change in price index of global exports (HT 87) #
   3389       VXWLD * pxwwld = sum(r,REG, VXWREGION(r) * pxwreg(r));
   3390    
   3391   Variable (all,i,TRAD_COMM)(all,r,REG)
   3392       piw(i,r) # world price of composite import i in region r #;
   3393   Equation PREGIM_is
   3394   # change in CIF price index of imports of commodity i into s (HT 82) #
   3395   (all,i,TRAD_COMM)(all,s,REG)
   3396       VIW(i,s) * piw(i,s) = sum(r,REG, VIWS(i,r,s) * pcif(i,r,s));
   3397    
   3398   Variable (orig_level=1.0)(all,r,REG)
   3399       piwreg(r) # price index of merchandise imports, by region #;
   3400   Equation PREGIM_s
   3401   # computes % change in price index of imports, by region (HT 84) #
   3402   (all,s,REG)
   3403       VIWREGION(s) * piwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * piw(i,s));
   3404    
   3405   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   3406       piwcom(i) # price index of global merchandise imports by commodity #;
   3407   Equation PWLDIM_i
   3408   # computes % change in price index of imports, by commodity (HT 86) #
   3409   (all,i,TRAD_COMM)
   3410       VIWCOMMOD(i) * piwcom(i) = sum(s,REG, VIW(i,s) * piw(i,s));
   3411    
   3412   Variable (all,i,TRAD_COMM)
   3413       pw(i) # world price index for total good i supplies #;
   3414   Equation PWLDOUT
   3415   # change in index of world prices, FOB, for total production of i (HT 88) #
   3416   (all,i,TRAD_COMM)
   3417       VWOW(i) * pw(i) = sum(r,REG, VOW(i,r) * pxw(i,r));
   3418    
   3419   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   3420       pwu(i) # world price index for total good i supplies at user prices #;
   3421   Equation PWLDUSE
   3422   # change in index of user prices for deflating world production of i #
   3423   (all,i,TRAD_COMM)
   3424       VWOU(i) * pwu(i)
   3425           = sum(s,REG, VPA(i,s) * pp(i,s)
   3426           + VGA(i,s) * pg(i,s)
   3427           + sum(j,PROD_COMM, VFA(i,j,s) * pf(i,j,s)));
   3428    
   3429    
   3430   !<
   3431       Quantity Indices for Aggregate Trade
   3432       ....................................
   3433   >!
   3434    
   3435   Variable (orig_level=VXW)(all,i,TRAD_COMM)(all,r,REG)
   3436       qxw(i,r) # aggregate exports of i from region r, FOB weights #;
   3437   Equation QREGEX_ir_MARG
   3438   # change in volume of exports of margin commodity m from r #
   3439   (all,m,MARG_COMM)(all,r,REG)
   3440       VXW(m,r) * qxw(m,r)
   3441           = sum(s,REG, VXWD(m,r,s) * qxs(m,r,s)) + VST(m,r) * qst(m,r);
   3442   Equation QREGEX_ir_NMRG
   3443   # change in volume of exports of non-margin commodity i from r #
   3444   (all,i,NMRG_COMM)(all,r,REG)
   3445       VXW(i,r) * qxw(i,r) = sum(s,REG, VXWD(i,r,s) * qxs(i,r,s));
   3446   !<
   3447       modified from HT 89 for use with AnalyzeGE
   3448   >!
   3449    
   3450   Variable (orig_level=VXWREGION)(all,r,REG)
   3451       qxwreg(r) # volume of merchandise exports, by region #;
   3452   Equation QREGEX_r
   3453   # computes % change in quantity index of exports, by region #
   3454   (all,r,REG)
   3455       VXWREGION(r) * qxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * qxw(i,r));
   3456   !<
   3457       modified from HT 91 for use with AnalyzeGE
   3458   >!
   3459    
   3460   Variable (orig_level=VXWCOMMOD)(all,i,TRAD_COMM)
   3461       qxwcom(i) # volume of global merchandise exports by commodity #;
   3462   Equation QWLDEX_i
   3463   # computes % change in quantity index of exports, by commodity #
   3464   (all,i,TRAD_COMM)
   3465       VXWCOMMOD(i) * qxwcom(i) = sum(r,REG, VXW(i,r) * qxw(i,r));
   3466   !<
   3467       modified from HT 93 for use with AnalyzeGE
   3468   >!
   3469    
   3470   Variable (orig_level=VXWLD)
   3471       qxwwld # volume of world trade #;
   3472   Equation QWLDEX
   3473   # computes % change in quantity index of global exports #
   3474       VXWLD * qxwwld = sum(r,REG, VXWREGION(r) * qxwreg(r));
   3475   !<
   3476       modified from HT 95 for use with AnalyzeGE
   3477   >!
   3478    
   3479   Variable (all,i,TRAD_COMM)(all,s,REG)
   3480       qiw(i,s) # aggregate imports of i into region s, CIF weights #;
   3481   Equation QREGIM_is
   3482   # change in volume of imports of commodity i into s #
   3483   (all,i,TRAD_COMM)(all,s,REG)
   3484       VIW(i,s) * qiw(i,s) = sum(r,REG, VIWS(i,r,s) * qxs(i,r,s));
   3485   !<
   3486       modified from HT 90 for use with AnalyzeGE
   3487   >!
   3488    
   3489   Variable (orig_level=VIWREGION)(all,r,REG)
   3490       qiwreg(r) # volume of merchandise imports, by region #;
   3491   Equation QREGIM_s
   3492   # computes % change in quantity index of imports, by region #
   3493   (all,s,REG)
   3494       VIWREGION(s) * qiwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * qiw(i,s));
   3495   !<
   3496       modified from HT 92 for use with AnalyzeGE
   3497   >!
   3498    
   3499   Variable (orig_level=VIWCOMMOD)(all,i,TRAD_COMM)
   3500       qiwcom(i) # volume of global merchandise imports by commodity #;
   3501   Equation QWLDIM_i
   3502   # computes % change in quantity index of imports, by commodity #
   3503   (all,i,TRAD_COMM)
   3504       VIWCOMMOD(i) * qiwcom(i) = sum(s,REG, VIW(i,s) * qiw(i,s));
   3505   !<
   3506       modified from HT 94 for use with AnalyzeGE
   3507   >!
   3508    
   3509   Variable (orig_level=VWOW) (all,i,TRAD_COMM)
   3510       qow(i) # quantity index for world supply of good i #;
   3511   Equation QWLDOUT
   3512   # change in index of world production of i #
   3513   (all,i,TRAD_COMM)
   3514       VWOW(i) * qow(i) = sum(r,REG, VOW(i,r) * qo(i,r));
   3515    
   3516    
   3517   Variable (all,r,REG)
   3518       qo_crops(r) # quantity index for crop supply by region #;
   3519   Equation QCROPOUT
   3520   # change in index of crop production of i by region #
   3521   (all,r,REG)
   3522       qo_crops(r) = sum(i, CROP_COMM, [VOW(i,r)/ sum(j,CROP_COMM, VOW(j,r))] * qo(i,r));
   3523    
   3524   Variable
   3525       qow_crops # quantity index for world crop supply #;
   3526   Equation QCROPWOUT
   3527   # change in index of world crop production #
   3528       qow_crops =
   3529       sum(r, REG, sum[i, CROP_COMM, VOW(i,r) / sum(j, REG, sum(k, CROP_COMM, VOW(k,j)))] * qo_crops(r));
   3530    
   3531   Variable (all,r,REG)
   3532       qo_live(r) # quantity index for crop supply by region #;
   3533   Equation QLIVEOUT
   3534   # change in index of crop production of i by region #
   3535   (all,r,REG)
   3536       qo_live(r) =
   3537     VOW("ruminant",r) / (VOW("ruminant",r) + VOW("nonruminant",r)) * qo("ruminant",r)  +
   3538     VOW("nonruminant",r) / (VOW("ruminant",r) + VOW("nonruminant",r)) * qo("nonruminant",r);
   3539    
   3540   Variable
   3541       qow_live # quantity index for world crop supply #;
   3542   Equation QLIVEWOUT
   3543   # change in index of world crop production #
   3544       qow_live =
   3545   sum(r, REG, (VOW("ruminant",r) + VOW("nonruminant",r)) / sum(j, REG, (VOW("ruminant",j) + VOW("nonruminant",j))) * qo_live(r));
   3546    
   3547    
   3548   ![[!
   3549   Variable
   3550       qo_live # quantity index for world livestock supply  #;
   3551   Equation QWLDliveOUT
   3552   # change in index of world production of i #
   3553       qo_live = VOW("ruminant",r)/ [VOW("ruminant",r) + VOW("nonruminant",r)]
   3554   sum(i,CROP_COMM, sum(r,REG,  * qo(i,r)));
   3555   !]]!
   3556    
   3557   !<
   3558       modified from HT 96 for use with AnalyzeGE
   3559   >!
   3560    
   3561   Variable (orig_level=VWOU)(all,i,TRAD_COMM)
   3562       qowu(i) # quantity index for world supply of good i at user prices #;
   3563   Equation QWLDOUTU
   3564   # change in index of world production of i evaluated at user prices #
   3565   (all,i,TRAD_COMM)
   3566       VWOU(i) * qowu(i)
   3567           = sum(s,REG, VPA(i,s) * qp(i,s)
   3568           + VGA(i,s) * qg(i,s)
   3569           + sum(j,PROD_COMM, VFA(i,j,s) * qf(i,j,s)));
   3570    
   3571    
   3572   !<
   3573       A-5. Trade Balance Indices
   3574       --------------------------
   3575   >!
   3576    
   3577   Variable (change)(all,i,TRAD_COMM)(all,r,REG)
   3578       DTBALi(i,r) # change in trade balance by i and by r, $ US million #;
   3579   !<
   3580       A positive value indicates that the change in exports exceeds the change
   3581       in imports.
   3582   >!
   3583   Equation TRADEBAL_i
   3584   # computes change in trade balance by commodity and by region (HT 97) #
   3585   (all,i,TRAD_COMM)(all,r,REG)
   3586       DTBALi(i,r)
   3587           = [VXW(i,r) / 100] * vxwfob(i,r) - [VIW(i,r) / 100] * viwcif(i,r);
   3588    
   3589   Variable (change)(all,r,REG)
   3590       DTBAL(r) # change in trade balance X - M, $ US million #;
   3591   Equation TRADEBALANCE
   3592   # computes change in trade balance (X - M), by region (HT 98) #
   3593   (all,r,REG)
   3594       DTBAL(r)
   3595           = [VXWREGION(r) / 100] * vxwreg(r) - [VIWREGION(r) / 100] * viwreg(r);
   3596    
   3597   !<
   3598       In order to maintain homogeneity in the presence of a fixed trade balance,
   3599       it is useful to have a nominal variable which this is measured against.
   3600       The next equation provides this, and we recommend users fix DTBALR instead
   3601       of fixing DTBAL in future simulations.  The strategy is the same one used
   3602       above for taxes.
   3603   >!
   3604    
   3605   Coefficient (all,r,REG)
   3606       TBAL(r) # trade balance for region r #;
   3607   Formula (all,r,REG)
   3608       TBAL(r) = VXWREGION(r) - VIWREGION(r);
   3609    
   3610   Variable (change)(all,r,REG)
   3611       DTBALR(r) # change in ratio of trade balance to regional income #;
   3612   Equation DTBALRATIO
   3613   # change in ratio of trade balance to regional income #
   3614   (all,r,REG)
   3615       100 * INCOME(r) * DTBALR(r) = 100 * DTBAL(r) - TBAL(r) * y(r);
   3616    
   3617    
   3618   !<
   3619       -----------------------
   3620       B. Equivalent Variation
   3621       -----------------------
   3622    
   3623       B-0. Appendix-Specific Variables and Coefficients
   3624       B-1. Government Consumption Shadow Demand System
   3625       B-2. Private Consumption Shadow Demand System
   3626       B-3. Regional Household Shadow Demand System
   3627       B-4. Equivalent Variation
   3628    
   3629       This appendix calculates equivalent variation "EV" and world equivalent
   3630       variation, "WEV", by determining the income "yev" that would be required
   3631       to achieve the current actual utility level "u" in a shadow demand system
   3632       in which prices are fixed.
   3633    
   3634       Section B-2 calculates the utility elasticity of private consumption
   3635       expenditure, "ueprivev", within a shadow demand system for private
   3636       consumption, for use in section B-3.  B-3 calculates private consumption
   3637       expenditure "ypev" for use in B-2, and regional income "yev" for use in
   3638       B-4, within a shadow demand system for the regional household.  B-4
   3639       calculates "EV" and "WEV".
   3640   >!
   3641    
   3642    
   3643   !<
   3644       B-0. Appendix-Specific Variables and Coefficients
   3645       -------------------------------------------------
   3646    
   3647       only used in this Equivalent Variation section of the Summary Indices
   3648       appendix
   3649   >!
   3650    
   3651   Variable (all,r,REG)
   3652       uelasev(r)
   3653       # elasticity of cost of utility wrt utility, for EV calc. #;
   3654   Variable (all,r,REG)
   3655       ueprivev(r)
   3656       # utility elasticity of private consn expenditure, for EV calc. #;
   3657   Variable (all,r,REG)
   3658       ugev(r) # per capita utility from gov't expend., for EV calc. #;
   3659   Variable (all,r,REG)
   3660       upev(r) # per capita utility from private expend., for EV calc. #;
   3661   Variable (all,r,REG)
   3662       qsaveev(r) # total quantity of savings demanded, for EV calc. #;
   3663   Variable (all,r,REG)
   3664       yev(r) # regional household income in region r, for EV calc. #;
   3665   Variable (all,r,REG)
   3666       ypev(r)
   3667       # private consumption expenditure in region r, for EV calc. #;
   3668   Variable (all,r,REG)
   3669       ygev(r)
   3670       # government consumption expenditure in region r, for EV calc. #;
   3671    
   3672   Coefficient (all,r,REG)
   3673       INCOMEEV(r) # regional income, for EV calc. #;
   3674   Formula (initial) (all,r,REG)
   3675       INCOMEEV(r) = INCOME(r);
   3676   Update (all,r,REG)
   3677       INCOMEEV(r) = yev(r);
   3678    
   3679   Coefficient (all,r,REG)
   3680       UTILPRIVEV(r) # utility from private consumption, for EV calcs #;
   3681   Formula (initial) (all,r,REG)
   3682       UTILPRIVEV(r) = UTILPRIV(r);
   3683   Update (all,r,REG)
   3684       UTILPRIVEV(r) = upev(r);
   3685    
   3686   Coefficient (all,r,REG)
   3687       UTILGOVEV(r) # utility from private consumption, for EV calcs #;
   3688   Formula (initial) (all,r,REG)
   3689       UTILGOVEV(r) = UTILGOV(r);
   3690   Update (all,r,REG)
   3691       UTILGOVEV(r) = ugev(r);
   3692    
   3693   Coefficient (all,r,REG)
   3694       UTILSAVEEV(r) # utility from private consumption, for EV calcs #;
   3695   Formula (initial) (all,r,REG)
   3696       UTILSAVEEV(r) = UTILSAVE(r);
   3697   Update (change) (all,r,REG)
   3698       UTILSAVEEV(r) = [[qsaveev(r) - pop(r)] / 100] * UTILSAVEEV(r);
   3699    
   3700    
   3701   !<
   3702       B-1. Government Consumption Shadow Demand System
   3703       ------------------------------------------------
   3704   >!
   3705    
   3706   Equation GOVUSHD
   3707   # utility from government consumption in r #
   3708   (all,r,REG)
   3709       ygev(r) - pop(r) = ugev(r);
   3710    
   3711    
   3712   !<
   3713       B-2. Private Consumption Shadow Demand System
   3714       ---------------------------------------------
   3715   >!
   3716    
   3717   Variable (all,i,TRAD_COMM)(all,r,REG)
   3718       qpev(i,r)
   3719       # private hhld demand for commodity i in region r, for EV calc. #;
   3720    
   3721   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3722       VPAEV(i,r)
   3723       # private hhld expend. on i in r valued at agent's prices, for EV calc. #;
   3724   Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   3725       VPAEV(i,r) = VPA(i,r);
   3726   Update (all,i,TRAD_COMM)(all,r,REG)
   3727       VPAEV(i,r) = qpev(i,r);
   3728    
   3729   Coefficient (all,r,REG)
   3730       VPAREGEV(r) # private consumption expenditure in region r, for EV calc. #;
   3731   Formula (all,r,REG)
   3732       VPAREGEV(r) = sum(i,TRAD_COMM, VPAEV(i,r));
   3733   !<
   3734       VPAREGEV should agree with PRIVEXPEV.
   3735   >!
   3736    
   3737   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3738       CONSHREV(i,r)
   3739       # share of private hhld consn devoted to good i in r, for EV calc. #;
   3740   Formula (all,i,TRAD_COMM)(all,r,REG)
   3741       CONSHREV(i,r) = VPAEV(i,r) / VPAREGEV(r);
   3742   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3743       EYEV(i,r)
   3744       # expend. elast. of private hhld demand for i in r, for EV calc. #;
   3745   Formula (all,i,TRAD_COMM)(all,r,REG)
   3746       EYEV(i,r)
   3747           = [1.0 / sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r))]
   3748           * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   3749               + sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   3750           + ALPHA(i,r)
   3751           - sum(n,TRAD_COMM, CONSHREV(n,r) * ALPHA(n,r));
   3752    
   3753   Equation PRIVDMNDSEV
   3754       # private hhld demands for composite commodities, for EV calc. #
   3755       (all,i,TRAD_COMM)(all,r,REG)
   3756       qpev(i,r) - pop(r) = EYEV(i,r) * [ypev(r) - pop(r)];
   3757   !<
   3758       Prices are held constant for the EV calculation and so do not appear here.
   3759   >!
   3760    
   3761   Coefficient (all,r,REG)
   3762       UELASPRIVEV(r)
   3763       # elast. of cost wrt utility from private consn, for EV calc. #;
   3764   Formula (all,r,REG)
   3765       UELASPRIVEV(r) = sum(i,TRAD_COMM, CONSHREV(i,r) * INCPAR(i,r));
   3766    
   3767   Equation PRIVATEUEV
   3768   # computation of utility from private consumption in r (HT 45) #
   3769   (all,r,REG)
   3770       ypev(r) - pop(r) = UELASPRIVEV(r) * upev(r);
   3771    
   3772   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3773       XWCONSHREV(i,r)
   3774       # expansion-parameter-weighted consumption share, for EV calc. #;
   3775   Formula (all,i,TRAD_COMM)(all,r,REG)
   3776       XWCONSHREV(i,r) = CONSHREV(i,r) * INCPAR(i,r) / UELASPRIVEV(r);
   3777    
   3778   Equation UTILELASPRIVEV
   3779       # elasticity of cost wrt utility from private consn, for EV calc. #
   3780       (all,r,REG)
   3781       ueprivev(r)
   3782           = sum(i,TRAD_COMM, XWCONSHREV(i,r) * [qpev(i,r) - ypev(r)]);
   3783   !<
   3784       Prices are held constant for the EV calculation and so do not appear here.
   3785   >!
   3786    
   3787    
   3788   !<
   3789    
   3790       B-3. Regional Household Shadow Demand System
   3791       --------------------------------------------
   3792   >!
   3793    
   3794   Variable (all,r,REG)
   3795       ysaveev(r) # NET savings expenditure, for EV calc. #;
   3796    
   3797   Coefficient (all,r,REG)
   3798       PRIVEXPEV(r)
   3799       # private consumption expenditure in region r, for EV calc. #;
   3800   Formula (initial) (all,r,REG)
   3801       PRIVEXPEV(r) = PRIVEXP(r);
   3802   Update (all,r,REG)
   3803       PRIVEXPEV(r) = ypev(r);
   3804   !<
   3805       PRIVEXPEV should agree with VPAREGEV.
   3806   >!
   3807    
   3808   Coefficient (all,r,REG)
   3809       GOVEXPEV(r)
   3810       # government consumption expenditure in region r, for EV calc. #;
   3811   Formula (initial) (all,r,REG)
   3812       GOVEXPEV(r) = GOVEXP(r);
   3813   Update (all,r,REG)
   3814       GOVEXPEV(r) = ygev(r);
   3815    
   3816   Coefficient (all,r,REG)
   3817       SAVEEV(r)
   3818       # saving in region r, for EV calc. #;
   3819   Formula (initial) (all,r,REG)
   3820       SAVEEV(r) = SAVE(r);
   3821   Update (all,r,REG)
   3822       SAVEEV(r) = ysaveev(r);
   3823    
   3824   Coefficient (all,r,REG)
   3825       XSHRPRIVEV(r)
   3826       # private expenditure share in regional income, for EV calc. #;
   3827   Formula (all,r,REG)
   3828       XSHRPRIVEV(r) = PRIVEXPEV(r) / INCOMEEV(r);
   3829    
   3830   Coefficient (all,r,REG)
   3831       XSHRGOVEV(r)
   3832       # government expenditure share in regional income, for EV calc. #;
   3833   Formula (all,r,REG)
   3834       XSHRGOVEV(r) = GOVEXPEV(r) / INCOMEEV(r);
   3835    
   3836   Coefficient (all,r,REG)
   3837       XSHRSAVEEV(r) # saving share in regional income, for EV calc. #;
   3838   Formula (all,r,REG)
   3839       XSHRSAVEEV(r) = SAVEEV(r) / INCOMEEV(r);
   3840    
   3841   Variable (all,r,REG)
   3842       dpavev(r) # average distribution parameter shift, for EV calc. #;
   3843   Equation DPARAVEV
   3844   # average distribution parameter shift, for EV calc. #
   3845       (all,r,REG)
   3846       dpavev(r)
   3847           = XSHRPRIVEV(r) * dppriv(r)
   3848           + XSHRGOVEV(r) * dpgov(r)
   3849           + XSHRSAVEEV(r) * dpsave(r);
   3850    
   3851   Equation UTILITELASTICEV
   3852       # elasticity of cost of utility wrt utility, for EV calc. #
   3853       (all,r,REG)
   3854       uelasev(r) = XSHRPRIV(r) * ueprivev(r) - dpavev(r);
   3855    
   3856   Equation PCONSEXPEV
   3857   # private consumption expenditure, for EV calc. #
   3858       (all,r,REG)
   3859       ypev(r) - yev(r) = -[ueprivev(r) - uelasev(r)] + dppriv(r);
   3860    
   3861   Equation GOVCONSEXPEV
   3862   # government consumption expenditure #
   3863   (all,r,REG)
   3864       ygev(r) - yev(r) = uelasev(r) + dpgov(r);
   3865    
   3866   Equation SAVINGEV
   3867   # saving #
   3868   (all,r,REG)
   3869       ysaveev(r) - yev(r) = uelasev(r) + dpsave(r);
   3870    
   3871   Equation SAVEUEV
   3872   # saving #
   3873   (all,r,REG)
   3874       qsaveev(r) = ysaveev(r);
   3875    
   3876   !<
   3877       Note that because psave doesn't change, qsaveev moves with ysaveev.
   3878   >!
   3879    
   3880   Coefficient (all,r,REG)
   3881       UTILELASEV(r)
   3882       # elasticity of cost of utility wrt utility, for EV calc. #;
   3883   Formula (initial) (all,r,REG)
   3884       UTILELASEV(r) = UTILELAS(r);
   3885   Update (all,r,REG)
   3886       UTILELASEV(r) = uelasev(r);
   3887    
   3888   Equation INCOME_EQUIV
   3889   # equivalent income #
   3890   (all,r,REG)
   3891       u(r)
   3892           = au(r)
   3893           + DPARPRIV(r) * loge(UTILPRIVEV(r)) * dppriv(r)
   3894           + DPARGOV(r) * loge(UTILGOVEV(r)) * dpgov(r)
   3895           + DPARSAVE(r) * loge(UTILSAVEEV(r)) * dpsave(r)
   3896           + [1.0 / UTILELASEV(r)] * [yev(r) - pop(r)];
   3897    
   3898    
   3899   !<
   3900       B-4. Equivalent Variation
   3901       -------------------------
   3902   >!
   3903    
   3904   Variable (change)(all,r,REG)
   3905       EV(r) # equivalent variation, $ US million #;
   3906   Equation EVREG
   3907   # regional EV (HT 67) #
   3908   (all,r,REG)
   3909       EV(r) = [INCOMEEV(r) / 100] * yev(r);
   3910    
   3911   Variable (change)
   3912       WEV # equivalent variation for the world #;
   3913   Equation EVWLD
   3914   # EV for the world (HT 68) #
   3915       WEV = sum(r,REG, EV(r));
   3916    
   3917    
   3918   !<
   3919       ------------------------
   3920       C. Welfare Decomposition
   3921       ------------------------
   3922       See GTAP Technical Paper No. 5 for derivation and interpretation.
   3923   >!
   3924    
   3925   Coefficient (all,r,REG)
   3926       EVSCALFACT(r) # equivalent variation scaling factor #;
   3927   Formula (all,r,REG)
   3928       EVSCALFACT(r) = [UTILELASEV(r) / UTILELAS(r)] * [INCOMEEV(r) / INCOME(r)];
   3929    
   3930   Coefficient (all,m,MARG_COMM)(all,s,REG)
   3931       VTMD(m,s) # aggregate value of svce m in shipments to s #;
   3932   Formula (all,m,MARG_COMM)(all,s,REG)
   3933       VTMD(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   3934    
   3935   Variable (linear,change)(all,r,REG)
   3936       EV_ALT(r) # regional EV computed in alternative way #;
   3937   Equation EV_DECOMPOSITION
   3938   # decomposition of Equivalent Variation #
   3939   (all,r,REG)
   3940       EV_ALT(r)
   3941           = -[0.01 * UTILELASEV(r) * INCOMEEV(r)]
   3942           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3943               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3944               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)]
   3945           + [0.01 * EVSCALFACT(r)]
   3946           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   3947               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3948                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   3949               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3950                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   3951               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3952                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   3953               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   3954               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   3955               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   3956               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   3957               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   3958               + sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))
   3959               + sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   3960               - VDEP(r) * [kb(r) - pop(r)]
   3961               + sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   3962               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   3963               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   3964               + sum(j,PROD_COMM, sum(i,TRAD_COMM, VFA(i,j,r) * af(i,j,r)))
   3965               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3966                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   3967               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))
   3968               + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   3969               + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   3970               + NETINV(r) * pcgds(r)
   3971               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * pfob(i,s,r)))
   3972               - sum(m,MARG_COMM, VTMD(m,r) * pt(m))
   3973               - SAVE(r) * psave(r)
   3974   ! EC (Apr 2022): Add global PES !
   3975               + 100 * [pes_inflow(r) - pes_outflow(r)]
   3976               ]
   3977   ! End: Add global PES !
   3978           + 0.01 * INCOMEEV(r) * pop(r);
   3979    
   3980   Variable (linear,change)
   3981       WEV_ALT # expression for WEV computed in alternative way #;
   3982   Equation WORLDEV
   3983   # Equivalent Variation for the world #
   3984       WEV_ALT = sum(r,REG, EV_ALT(r));
   3985    
   3986   Variable (linear,change) (all,r,REG)
   3987       CNTdpar(r) # contribution to EV of change in distribution parameters #;
   3988   Equation CNT_WEV_dpar
   3989   (all,r,REG)
   3990       CNTdpar(r)
   3991           = -0.01 * UTILELASEV(r) * INCOMEEV(r)
   3992           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3993               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3994               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)];
   3995    
   3996   Variable (linear,change) (all,r,REG)
   3997       CNTpopr(r) # contribution to EV in region r of change in population #;
   3998   Equation CONT_EV_pop
   3999   (all,r,REG)
   4000       CNTpopr(r) = 0.01 * INCOMEEV(r) * pop(r);
   4001    
   4002   Variable (linear,change) (all,r,REG)
   4003       CNTqor(r) # contribution to EV in region r of output changes #;
   4004   Equation CONT_EV_qor
   4005   (all,r,REG)
   4006       CNTqor(r)
   4007           = sum(i,NSAV_COMM,
   4008               0.01 * EVSCALFACT(r) * PTAX(i,r) * [qo(i,r) - pop(r)]);
   4009    
   4010   Variable (linear,change) (all,i,NSAV_COMM)(all,r,REG)
   4011       CNTqoir(i,r)
   4012       # contribution to EV of changes in output of NSAV_COMM i in reg. r #;
   4013   Equation CONT_EV_qoir
   4014   (all,i,NSAV_COMM)(all,r,REG)
   4015       CNTqoir(i,r) = PTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qo(i,r) - pop(r)];
   4016    
   4017   Variable (linear,change) (all,r,REG)
   4018       CNTqfer(r)
   4019       # cont. to EV of changes in use of all ENDW_COMM in all ind. in reg. r #;
   4020   Equation CONT_EV_qfer
   4021   (all,r,REG)
   4022       CNTqfer(r)
   4023           = sum(i,ENDW_COMM, sum(j,PROD_COMM,
   4024               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]));
   4025    
   4026   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   4027       CNTqfeir(i,r)
   4028       # contribution to EV of changes in use of ENDW_COMM i in all ind. in r #;
   4029   Equation CONT_EV_qfeir
   4030   (all,i,ENDW_COMM)(all,r,REG)
   4031       CNTqfeir(i,r)
   4032           = sum(j,PROD_COMM,
   4033               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]);
   4034    
   4035   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   4036       CNTqfeijr(i,j,r)
   4037       # cont. to EV of changes in use of ENDW_COMM i in ind. j of reg. r #;
   4038   Equation CONT_EV_qfeijr
   4039   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   4040       CNTqfeijr(i,j,r)
   4041           = ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)];
   4042    
   4043   Variable (linear,change) (all,r,REG)
   4044       CNTqfmr(r)
   4045       # cont. to EV of changes in use of imported int. in all ind. in reg. r #;
   4046   Equation CONT_EV_qfmr
   4047   (all,r,REG)
   4048       CNTqfmr(r)
   4049           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   4050               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]));
   4051    
   4052   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4053       CNTqfmir(i,r)
   4054       # cont. to EV of changes in use of imported int. i in all ind. in r #;
   4055   Equation CONT_EV_qfmir
   4056   (all,i,TRAD_COMM)(all,r,REG)
   4057       CNTqfmir(i,r)
   4058           = sum(j,PROD_COMM,
   4059               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]);
   4060    
   4061   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4062       CNTqfmijr(i,j,r)
   4063       # cont. to EV of changes in use of imported int. i in ind. j of reg. r #;
   4064   Equation CONT_EV_qfmijr
   4065   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4066       CNTqfmijr(i,j,r)
   4067           = IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)];
   4068    
   4069   Variable (linear,change) (all,r,REG)
   4070       CNTqfdr(r)
   4071       # cont. to EV of changes in use of domestic int. in all ind. in reg. r #;
   4072   Equation CONT_EV_qfdr
   4073   (all,r,REG)
   4074       CNTqfdr(r)
   4075           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   4076               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]));
   4077    
   4078   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4079       CNTqfdir(i,r)
   4080       # contribution to EV of changes in use of domestic i in all ind. in r #;
   4081   Equation CONT_EV_qfdir
   4082   (all,i,TRAD_COMM)(all,r,REG)
   4083       CNTqfdir(i,r)
   4084           = sum(j,PROD_COMM,
   4085               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]);
   4086    
   4087   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4088       CNTqfdijr(i,j,r)
   4089       # cont. to EV of changes in use of domestic int. i in ind. j of reg. r #;
   4090   Equation CONT_EV_qfdijr
   4091   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4092       CNTqfdijr(i,j,r)
   4093           = DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)];
   4094    
   4095   Variable (linear,change) (all,r,REG)
   4096       CNTqpmr(r)
   4097       # contribution to EV of changes in consumption of imported goods in r #;
   4098   Equation CONT_EV_qpmr
   4099   (all,r,REG)
   4100       CNTqpmr(r)
   4101           = sum(i,TRAD_COMM,
   4102               IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)]);
   4103    
   4104   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4105       CNTqpmir(i,r)
   4106       # cont. to EV of changes in consumption of imported good i in reg. r #;
   4107   Equation CONT_EV_qpmir
   4108   (all,i,TRAD_COMM)(all,r,REG)
   4109       CNTqpmir(i,r) = IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)];
   4110    
   4111   Variable (linear,change) (all,r,REG)
   4112       CNTqpdr(r)
   4113       # contribution to EV of changes in consumption of domestic goods in r #;
   4114   Equation CONT_EV_qpdr
   4115   (all,r,REG)
   4116       CNTqpdr(r)
   4117           = sum(i,TRAD_COMM,
   4118               DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)]);
   4119    
   4120   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4121       CNTqpdir(i,r)
   4122       # cont. to EV of changes in consumption of domestic good i in reg. r #;
   4123   Equation CONT_EV_qpdir
   4124   (all,i,TRAD_COMM)(all,r,REG)
   4125       CNTqpdir(i,r) = DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)];
   4126    
   4127   Variable (linear,change) (all,r,REG)
   4128       CNTqgmr(r)
   4129       # cont. to EV of changes in gov't consumption of imports in reg. r #;
   4130   Equation CONT_EV_qgmr
   4131   (all,r,REG)
   4132       CNTqgmr(r)
   4133           = sum(i,TRAD_COMM,
   4134               IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)]);
   4135    
   4136   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4137       CNTqgmir(i,r)
   4138       # cont. to EV of changes in gov't consumption of import i in reg. r #;
   4139   Equation CONT_EV_qgmir
   4140   (all,i,TRAD_COMM)(all,r,REG)
   4141       CNTqgmir(i,r) = IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)];
   4142    
   4143   Variable (linear,change) (all,r,REG)
   4144       CNTqgdr(r)
   4145       # cont. to EV of changes in gov't consumption of domestics in reg. r #;
   4146   Equation CONT_EV_qgdr
   4147   (all,r,REG)
   4148       CNTqgdr(r)
   4149           = sum(i,TRAD_COMM,
   4150               DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)]);
   4151    
   4152   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   4153       CNTqgdir(i,r)
   4154       # cont. to EV of changes in gov't consumption of domestic i in reg. r #;
   4155   Equation CONT_EV_qgdir
   4156   (all,i,TRAD_COMM)(all,r,REG)
   4157       CNTqgdir(i,r) = DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)];
   4158    
   4159   Variable (linear,change) (all,r,REG)
   4160       CNTqxsr(r)
   4161       # cont. to EV of changes in exports of all goods from SRCE r to all DEST #;
   4162   Equation CONT_EV_qxsr
   4163   (all,r,REG)
   4164       CNTqxsr(r)
   4165           = sum(i,TRAD_COMM, sum(s,REG,
   4166               XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)]));
   4167    
   4168   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4169       CNTqxsirs(i,r,s)
   4170       # cont. to EV of changes in exports of i from SRCE r to DEST s #;
   4171   Equation CONT_EV_qxsirs
   4172   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4173       CNTqxsirs(i,r,s)
   4174           = XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)];
   4175    
   4176   Variable (linear,change) (all,r,REG)
   4177       CNTqimr(r)
   4178       # cont. to EV of changes in imports of all goods from all SRCE to DEST r #;
   4179   Equation CONT_EV_qimr
   4180   (all,r,REG)
   4181       CNTqimr(r)
   4182           = sum(i,TRAD_COMM, sum(s,REG,
   4183               MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)]));
   4184    
   4185   Variable (linear,change) (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   4186       CNTqimisr(i,s,r)
   4187       # cont. to EV of changes in imports of i from SRCE s to DEST r #;
   4188   Equation CONT_EV_qimisr
   4189   (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   4190       CNTqimisr(i,s,r)
   4191           = MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)];
   4192    
   4193   Variable (linear,change) (all,r,REG)
   4194       CNTalleffr(r) # total contribution to regional EV of allocative effects #;
   4195   Equation CONT_EV_alleffr
   4196   (all,r,REG)
   4197       CNTalleffr(r)
   4198           = [0.01 * EVSCALFACT(r)]
   4199           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   4200               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   4201                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   4202               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   4203                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   4204               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   4205                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   4206               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   4207               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   4208               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   4209               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   4210               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   4211               + sum(i,TRAD_COMM, sum(s,REG,
   4212                   MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))];
   4213    
   4214   Variable (linear,change) (all,i,DEMD_COMM)(all,r,REG)
   4215       CNTalleffir(i,r)
   4216       # total contribution to regional EV of allocative effects #;
   4217   Equation CONT_EV_alleffir_E
   4218   (all,i,ENDW_COMM)(all,r,REG)
   4219       CNTalleffir(i,r)
   4220           = [0.01 * EVSCALFACT(r)]
   4221           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   4222               + sum(j,PROD_COMM, ETAX(i,j,r) * [qfe(i,j,r) - pop(r)])];
   4223   Equation CONT_EV_alleffir_T
   4224   (all,i,TRAD_COMM)(all,r,REG)
   4225       CNTalleffir(i,r)
   4226           = [0.01 * EVSCALFACT(r)]
   4227           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   4228               + sum(j,PROD_COMM, IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)])
   4229               + sum(j,PROD_COMM, DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)])
   4230               + IPTAX(i,r) * [qpm(i,r) - pop(r)]
   4231               + DPTAX(i,r) * [qpd(i,r) - pop(r)]
   4232               + IGTAX(i,r) * [qgm(i,r) - pop(r)]
   4233               + DGTAX(i,r) * [qgd(i,r) - pop(r)]
   4234               + sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)])
   4235               + sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)])];
   4236    
   4237   Variable (linear,change) (all,r,REG)
   4238       CNTtotr(r)
   4239       # contribution to regional EV of changes in its terms of trade #;
   4240   Equation CONT_EV_totr
   4241   (all,r,REG)
   4242       CNTtotr(r)
   4243           = [0.01 * EVSCALFACT(r)]
   4244           * [sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [pfob(i,r,s) - pxwwld]))
   4245               + sum(m,MARG_COMM, VST(m,r) * [pm(m,r) - pxwwld])
   4246               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * [pfob(i,s,r) - pxwwld]))
   4247               - sum(m,MARG_COMM, VTMD(m,r) * [pt(m) - pxwwld])];
   4248    
   4249   Variable (linear,change) (all,r,REG)
   4250       CNTcgdsr(r) # contribution to regional EV of changes in the price of cgds #;
   4251   Equation CNT_EV_cgdsr
   4252   (all,r,REG)
   4253       CNTcgdsr(r)
   4254           = [0.01 * EVSCALFACT(r)]
   4255           * [NETINV(r) * [pcgds(r) - pxwwld] - SAVE(r) * [psave(r) - pxwwld]];
   4256    
   4257   Variable (linear,change) (all,r,REG)
   4258       CNTendwr(r) # contribution to regional EV of changes in all ENDW_COMM #;
   4259   Equation CONT_EV_endwr
   4260   (all,r,REG)
   4261       CNTendwr(r)
   4262           = [0.01 * EVSCALFACT(r)]
   4263           * [sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   4264               - VDEP(r) * [kb(r) - pop(r)]];
   4265    
   4266   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   4267       CNTendwir(i,r) # contribution to regional EV of changes in ENDW_COMM i #;
   4268   Equation CONT_EV_endwir
   4269   (all,i,ENDW_COMM)(all,r,REG)
   4270       CNTendwir(i,r) = [0.01 * EVSCALFACT(r)] * [VOA(i,r) * [qo(i,r) - pop(r)]];
   4271    
   4272   Variable (linear,change) (all,r,REG)
   4273       CNTtechr(r) # contribution to regional EV of all technical change #;
   4274   Equation CONT_EV_techr
   4275   (all,r,REG)
   4276       CNTtechr(r)
   4277           = [0.01 * EVSCALFACT(r)]
   4278           * [sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   4279               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   4280               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   4281               + sum(j,PROD_COMM, sum(i,TRAD_COMM,
   4282                   [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)))
   4283               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   4284                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   4285               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))];
   4286    
   4287   Variable (linear,change) (all,r,REG)
   4288       CNTtech_aor(r)
   4289       # contribution to regional EV of output augmenting technical change #;
   4290   Equation CONT_EV_tech_aor
   4291   (all,r,REG)
   4292       CNTtech_aor(r)
   4293           = [0.01 * EVSCALFACT(r)] * sum(i,PROD_COMM, VOA(i,r) * ao(i,r));
   4294    
   4295   Variable (linear,change) (all,i,PROD_COMM)(all,r,REG)
   4296       CNTtech_aoir(i,r)
   4297       # cont. to regional EV of output augmenting tech change in TRAD_COMM i #;
   4298   Equation CONT_EV_tech_aoir
   4299   (all,i,PROD_COMM)(all,r,REG)
   4300       CNTtech_aoir(i,r) = [0.01 * EVSCALFACT(r)] * VOA(i,r) * ao(i,r);
   4301    
   4302   Variable (linear,change) (all,r,REG)
   4303       CNTtech_afer(r)
   4304       # contribution to regional EV of primary factor augmenting tech change #;
   4305   Equation CONT_EV_tech_afer
   4306   (all,r,REG)
   4307       CNTtech_afer(r)
   4308           = [0.01 * EVSCALFACT(r)]
   4309           * sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)));
   4310    
   4311   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   4312       CNTtech_afeijr(i,j,r)
   4313       # cont. to EV of primary factor i augmenting tech change in sector j #;
   4314   Equation CONT_EV_tech_afeijr
   4315   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   4316       CNTtech_afeijr(i,j,r) = [0.01 * EVSCALFACT(r)] * VFA(i,j,r) * afe(i,j,r);
   4317    
   4318   Variable (linear,change) (all,r,REG)
   4319       CNTtech_avar(r)
   4320       # contribution to regional EV of value added augmenting tech change #;
   4321   Equation CONT_EV_tech_avar
   4322   (all,r,REG)
   4323       CNTtech_avar(r)
   4324           = [0.01 * EVSCALFACT(r)] * sum(j,PROD_COMM, VVA(j,r) * ava(j,r));
   4325    
   4326   Variable (linear,change) (all,j,PROD_COMM)(all,r,REG)
   4327       CNTtech_avajr(j,r)
   4328       # cont. to EV of value added augmenting tech change in sector j #;
   4329   Equation CONT_EV_tech_avajr
   4330   (all,j,PROD_COMM)(all,r,REG)
   4331       CNTtech_avajr(j,r) = [0.01 * EVSCALFACT(r)] * VVA(j,r) * ava(j,r);
   4332    
   4333   Variable (linear,change) (all,r,REG)
   4334       CNTtech_afr(r)
   4335       # cont. to regional EV of comp. int. input augmenting tech change #;
   4336   Equation CONT_EV_tech_afr
   4337   (all,r,REG)
   4338       CNTtech_afr(r)
   4339           = [0.01 * EVSCALFACT(r)]
   4340           * sum(j,PROD_COMM, sum(i,TRAD_COMM,
   4341               [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)));
   4342    
   4343   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4344       CNTtech_afijr(i,j,r)
   4345       # cont. to EV of composite i input augmenting tech change in sector j #;
   4346   Equation CONT_EV_tech_afijr
   4347   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   4348       CNTtech_afijr(i,j,r)
   4349           = [0.01 * EVSCALFACT(r)] * [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r);
   4350    
   4351   Variable (linear,change) (all,r,REG)
   4352       CNTtech_atrr(r)
   4353       # contribution to regional EV of technical change in transportation #;
   4354   Equation CONT_EV_tech_atrr
   4355   (all,r,REG)
   4356       CNTtech_atrr(r)
   4357           = [0.01 * EVSCALFACT(r)]
   4358           * sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   4359               VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))));
   4360    
   4361   Variable (linear,change)(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4362       CNTtech_afmfdsd(m,i,r,s)
   4363       # cont. to EV of tech change in transportation efficiency #;
   4364   Equation CONT_EV_tech_afmfdsd
   4365   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4366       CNTtech_afmfdsd(m,i,r,s)
   4367           = [0.01 * EVSCALFACT(s)] * VTMFSD(m,i,r,s) * atmfsd(m,i,r,s);
   4368    
   4369   Variable (linear,change)(all,r,REG)
   4370       CNTtech_amsr(r) # cont. to EV of bilateral import-augmenting tech change #;
   4371   Equation CONT_EV_tech_amsr
   4372   (all,r,REG)
   4373       CNTtech_amsr(r)
   4374           = [0.01 * EVSCALFACT(r)]
   4375           * sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)));
   4376    
   4377   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4378       CNTtech_amsirs(i,r,s)
   4379    # cont. to EV of bilateral import augmenting tech change for TRAD_COMM i #;
   4380   Equation CONT_EV_tech_amsirs
   4381   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4382       CNTtech_amsirs(i,r,s) = [0.01 * EVSCALFACT(r)] * VIMS(i,r,s) * ams(i,r,s);
   4383    
   4384   Variable (linear,change) (all,r,REG)
   4385       CNTkbr(r)
   4386       # cont. to EV of changes to beg. period capital stock and depreciation #;
   4387   Equation CONT_EV_kbr
   4388   (all,r,REG)
   4389       CNTkbr(r) = - [0.01 * EVSCALFACT(r)] * VDEP(r) * [kb(r) - pop(r)];
   4390    
   4391    
   4392   !<
   4393       -------------------------------
   4394       D. Terms of Trade Decomposition
   4395       -------------------------------
   4396    
   4397       Computations for decomposition the terms-of-trade effect
   4398       Reference: Robert McDougall, SALTER No. 12 Working Paper
   4399   >!
   4400    
   4401   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   4402       SX_IR(i,r) # share of good i in total exports from r #;
   4403   Formula (all,m,MARG_COMM)(all,r,REG)
   4404       SX_IR(m,r)
   4405           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   4406           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   4407               + sum(l,MARG_COMM, VST(l,r))];
   4408   Formula (all,i,NMRG_COMM)(all,r,REG)
   4409       SX_IR(i,r)
   4410           = sum(s,REG, VXWD(i,r,s))
   4411           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   4412               + sum(l,MARG_COMM, VST(l,r))];
   4413    
   4414   Coefficient (all,m,MARG_COMM)(all,s,REG)
   4415       VTICOMM(m,s) # margin usage of m in getting imports to region s #;
   4416   Formula (all,m,MARG_COMM)(all,s,REG)
   4417       VTICOMM(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   4418    
   4419   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   4420       VIWDIRALL(i,s) # imports of i into s, with direct allocation of margins #;
   4421   Formula (all,m,MARG_COMM)(all,s,REG)
   4422       VIWDIRALL(m,s) = sum(r,REG, VXWD(m,r,s)) + VTICOMM(m,s);
   4423   Formula (all,i,NMRG_COMM)(all,s,REG)
   4424       VIWDIRALL(i,s) = sum(r,REG, VXWD(i,r,s));
   4425    
   4426   Coefficient (all,s,REG)
   4427       VIWDATOT(s) # total imports into s, calculated on direct allocation basis #;
   4428   Formula (all,s,REG)
   4429       VIWDATOT(s) = sum(i,TRAD_COMM, VIWDIRALL(i,s));
   4430    
   4431   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   4432       SM_IR(i,r)  # share of good i in total imports into r #;
   4433   Formula (all,i,TRAD_COMM)(all,s,REG)
   4434       SM_IR(i,s) = VIWDIRALL(i,s) / VIWDATOT(s);
   4435    
   4436   Zerodivide (zero_by_zero) default 0;
   4437   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4438       SX_IRS(i,r,s) # share of exports of good i from region r to s #;
   4439   Formula (all,m,MARG_COMM)(all,r,REG)(all,s,REG)
   4440       SX_IRS(m,r,s) = VXWD(m,r,s) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   4441   Formula (all,i,NMRG_COMM)(all,r,REG)(all,s,REG)
   4442       SX_IRS(i,r,s) = VXWD(i,r,s) / sum(k,REG, VXWD(i,r,k));
   4443   Zerodivide (zero_by_zero) off;
   4444    
   4445   Coefficient (all,m,MARG_COMM)(all,r,REG)
   4446       SXT_IR(m,r) # share of margins in exports of good i from region r #;
   4447   Formula (all,m,MARG_COMM)(all,r,REG)
   4448       SXT_IR(m,r) = VST(m,r) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   4449    
   4450   Variable (all,i,TRAD_COMM)(all,r,REG)
   4451       px_ir(i,r) # export price index for good i and region r #;
   4452   Equation EXPPRICE_MARG
   4453   # price index for total exports of m from r #
   4454   (all,m,MARG_COMM)(all,r,REG)
   4455       px_ir(m,r)
   4456           = sum(s,REG, SX_IRS(m,r,s) * pfob(m,r,s)) + SXT_IR(m,r) * pm(m,r);
   4457   Equation EXPPRICE_NMRG
   4458   # price index for total exports of i from r #
   4459   (all,i,NMRG_COMM)(all,r,REG)
   4460       px_ir(i,r) = sum(s,REG, SX_IRS(i,r,s) * pfob(i,r,s));
   4461    
   4462   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4463       SM_IRS(i,r,s) # share of imports of good i into s from r at FOB prices #;
   4464   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4465       SM_IRS(i,r,s) = VXWD(i,r,s) / VIWDIRALL(i,s);
   4466    
   4467   Coefficient (all,m,MARG_COMM)(all,r,REG)
   4468       SMT_IR(m,r) # share of transport cost in imports of margin commodity #;
   4469   Formula (all,m,MARG_COMM)(all,s,REG)
   4470       SMT_IR(m,s) = VTICOMM(m,s) / VIWDIRALL(m,s);
   4471    
   4472   Variable (all,i,TRAD_COMM)(all,r,REG)
   4473       pm_ir(i,r) # imports price index for good i and region r #;
   4474   Equation IMPPRICE1_MARG
   4475   # price index for total imports of m in s -- margins commodities #
   4476   (all,m,MARG_COMM)(all,s,REG)
   4477       pm_ir(m,s)
   4478           = sum(r,REG, SM_IRS(m,r,s) * pfob(m,r,s)) + SMT_IR(m,s) * pt(m);
   4479   Equation IMPPRICE1_NMRG
   4480   # price index for total imports of i in s -- non-margins commodities #
   4481   (all,i,NMRG_COMM)(all,s,REG)
   4482       pm_ir(i,s) = sum(r,REG, SM_IRS(i,r,s) * pfob(i,r,s));
   4483    
   4484   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   4485       SW_IR(i,r) # share of region r exports in world total for good i #;
   4486   Formula (all,m,MARG_COMM)(all,r,REG)
   4487       SW_IR(m,r)
   4488           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   4489           / sum(k,REG, sum(s,REG, VXWD(m,k,s)) + VST(m,k));
   4490   Formula (all,i,NMRG_COMM)(all,r,REG)
   4491       SW_IR(i,r)
   4492           = sum(s,REG, VXWD(i,r,s)) / sum(k,REG, sum(s,REG, VXWD(i,k,s)));
   4493    
   4494   Variable (all,i,TRAD_COMM)
   4495       px_i(i) # world export price index for commodity i #;
   4496   Equation WRLDPRICEi
   4497   # world export price index for good i #
   4498   (all,i,TRAD_COMM)
   4499       px_i(i) = sum(r,REG, SW_IR(i,r) * px_ir(i,r));
   4500    
   4501   Coefficient (all,i,TRAD_COMM)
   4502       SW_I(i) # share of exports of i in world total #;
   4503   Formula (all,m,MARG_COMM)
   4504       SW_I(m)
   4505           = sum(r,REG, sum(s,REG, VXWD(m,r,s)) + VST(m,r))
   4506           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   4507               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   4508   Formula (all,i,NMRG_COMM)
   4509       SW_I(i)
   4510           = sum(r,REG, sum(s,REG, VXWD(i,r,s)))
   4511           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   4512               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   4513    
   4514   Variable
   4515       px_ # world export price index for all commodities #;
   4516   Equation WRLDPRICE
   4517   # world export price index for all goods #
   4518       px_ = sum(i,TRAD_COMM, SW_I(i) * px_i(i));
   4519    
   4520   Variable (all,i,TRAD_COMM)(all,r,REG)
   4521       c1_ir(i,r) # contribution of world price, px_i, to ToT #;
   4522   Equation c1_irEQ
   4523   # contribution of world export price index of good i to ToT for region r #
   4524   (all,i,TRAD_COMM)(all,r,REG)
   4525       c1_ir(i,r) = [SX_IR(i,r) - SM_IR(i,r)] * [px_i(i) - px_];
   4526    
   4527   Variable (all,i,TRAD_COMM)(all,r,REG)
   4528       c2_ir(i,r) # contribution of regional export price, px_ir, to ToT #;
   4529   Equation c2_irEQ
   4530   # contribution of regional export price of good i for region r #
   4531   (all,i,TRAD_COMM)(all,r,REG)
   4532       c2_ir(i,r) = SX_IR(i,r) * [px_ir(i,r) - px_i(i)];
   4533    
   4534   Variable (all,i,TRAD_COMM)(all,r,REG)
   4535       c3_ir(i,r) # contribution of regional import price, pm_ir, to ToT #;
   4536   Equation c3_irEQ
   4537   # contribution of imports price index of good i for region r #
   4538   (all,i,TRAD_COMM)(all,r,REG)
   4539       c3_ir(i,r) = SM_IR(i,r) * [pm_ir(i,r) - px_i(i)];
   4540    
   4541   Variable (all,r,REG)
   4542       c1_r(r) # contribution of world prices for all goods to ToT #;
   4543   Equation c1_rEQ
   4544   # contribution of world price indexes of all goods to ToT for r #
   4545   (all,r,REG)
   4546       c1_r(r) = sum(i,TRAD_COMM, c1_ir(i,r));
   4547    
   4548   Variable (all,r,REG)
   4549       c2_r(r) # contribution of regional export prices to ToT #;
   4550   Equation c2_rEQ
   4551   # contribution of regional exports prices to ToT for r #
   4552   (all,r,REG)
   4553       c2_r(r) = sum(i,TRAD_COMM, c2_ir(i,r));
   4554    
   4555   Variable (all,r,REG)
   4556       c3_r(r) # contribution of regional import prices to ToT #;
   4557   Equation c3_rEQ
   4558   # contribution of regional import prices to ToT for r #
   4559   (all,r,REG)
   4560       c3_r(r) = sum(i,TRAD_COMM, c3_ir(i,r));
   4561    
   4562   Variable (all,r,REG)
   4563       tot2(r) # trade terms for region r, computed from components #;
   4564   Equation TOT2eq
   4565   # trade terms for region r, computed from components #
   4566   (all,r,REG)
   4567       tot2(r) = c1_r(r) + c2_r(r) - c3_r(r);
   4568    
   4569   !<
   4570       ------------------
   4571       E. Land Use Module
   4572       ------------------
   4573       Computes changes in land cover and harvested area in hectares.
   4574       Land cover refers to forestry, pasture and cropland.
   4575       Land use in crops is based on harvested area.
   4576    
   4577   In order to reconcile market clearing in hectares with that on a
   4578   value basis, as dictated by the CET function, we require an adjustment factor
   4579   in each of the AEZs. This adjusts the percentage change in hectares to
   4580   reflect the average change in productivity of those hectares in their new
   4581   uses.
   4582    
   4583   >!
   4584    
   4585   Set LAND_COVER # set of land cover categories #
   4586     read elements from file GTAPSETS header "COVS";
   4587   Set
   4588       UNMNGLAND #unmanaged land # (UNMNGLAND);
   4589   Subset
   4590       UNMNGLAND is subset of LAND_COVER ;
   4591   Subset UNMNGLAND is subset of LAND_COVER ;
Declaration of 'UNMNGLAND' as a SUBSET of 'LAND_COVER'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
   4592   Set PROD_COVER # set of land cover categories to be used in the model #
   4593           = LAND_COVER - UNMNGLAND;
   4594    
   4595   Set PROD2_COVER # first two land cover categories # =
   4596       FOREST_COMM UNION GRAZE_COMM ;
   4597    
   4598   Subset PROD2_COVER is subset of PROD_COVER ;
   4599   Subset PROD2_COVER is subset of LAND_COMM ;
   4600    
   4601   Set ACROP_COMM # aggregated cropsland cover # = PROD_COVER - PROD2_COVER ;
   4602    
   4603   Variable (all,i,AEZ_COMM)(all,r,REG)
   4604       lcoveraez(i,r)
   4605       # change in land in aez -- generally a fixed endowment #;
   4606    
   4607   ! Make LANDCOVER a levels variable -- and exogenize landcover change in
   4608   unmanaged land. !
   4609    
   4610   Variable (LEVELS) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   4611       LANDCOVER_L(i,j,r)
   4612       # hectares of land by AEZ, sector and region #;
   4613   Read
   4614       LANDCOVER_L from file GTAPDATA header "LCOV";
   4615    
   4616   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   4617       LANDCOVER(i,j,r)
   4618       # hectares of land by AEZ, land cover type and region #;
   4619   Formula (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   4620       LANDCOVER(i,j,r) = LANDCOVER_L(i,j,r);
   4621    
   4622   Variable (LEVELS) (all,j,PROD_COVER)(all,r,REG)
   4623       LANDCOVER_R(j,r) # hectares of land by sector and region #;
   4624   Formula & Equation E_LANDCOVER_R (all,j,PROD_COVER)(all,r,REG)
   4625   LANDCOVER_R(j,r) = sum(i,AEZ_COMM, LANDCOVER_L(i,j,r)) + 0.0000001;
       !  EQUATION(LINEAR) E_LANDCOVER_R
          (ALL,j,PROD_COVER) (ALL,r,REG) LANDCOVER_R(j,r) * p_LANDCOVER_R(j,r)

           = SUM(i,AEZ_COMM,LANDCOVER_L(i,j,r) * p_LANDCOVER_L(i,j,r)) ;  ! 

   4626    
   4627   Variable (LEVELS)(all,j,PROD_COVER)
   4628       LANDCOVER_W(j) # hectares of land by sector #;
   4629   Formula & Equation E_LANDCOVER_W (all,j,PROD_COVER)
   4630   LANDCOVER_W(j) = sum(r,REG, LANDCOVER_R(j,r));
       !  EQUATION(LINEAR) E_LANDCOVER_W
          (ALL,j,PROD_COVER) LANDCOVER_W(j) * p_LANDCOVER_W(j) = SUM(r,REG,

          LANDCOVER_R(j,r) * p_LANDCOVER_R(j,r)) ;  ! 

   4631    
   4632   Zerodivide (zero_by_zero) default 1;
   4633   Zerodivide (nonzero_by_zero) default 1;
   4634    
   4635   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   4636       NVFM(i,j,r)
   4637       # land rental payments in $ #;
   4638   Formula
   4639   (all,i,AEZ_COMM)(all,j,LAND_COMM)(all,r,REG)
   4640       NVFM(i,j,r) = VFM(i,j,r) * 10^6 ;
   4641    
   4642   Variable (LEVELS) (all,i,AEZ_COMM)(all,j,PROD_COVER)(all,r,REG)
   4643       RENTCOVER(i,j,r)
   4644       # level of land rents by AEZ, sector and region, in $/ha. #;
   4645   Formula (initial)
   4646   (all,i,AEZ_COMM)(all,j,PROD2_COVER)(all,r,REG)
   4647       RENTCOVER(i,j,r) = [NVFM(i,j,r)/LANDCOVER_L(i,j,r)] ;
   4648   Formula (initial)
   4649   (all,i,AEZ_COMM)(all,j,ACROP_COMM)(all,r,REG)
   4650       RENTCOVER(i,j,r) = [sum(k,CROP_COMM, NVFM(i,k,r))/LANDCOVER_L(i,j,r)] ;
   4651    
   4652   ! The change in land rents per physical hectare is computed by noting that
   4653   total land rental payments, by cover type and AEZ, must be the same, regardless
   4654   of units of measurement for land. !
   4655    
   4656   Equation E_RENTCOVER1
   4657   (all,i,AEZ_COMM)(all,j,PROD2_COVER)(all,r,REG)
   4658       p_RENTCOVER(i,j,r) + p_LANDCOVER_L(i,j,r) = pmes(i,j,r) + qoes(i,j,r) ;
   4659   Equation E_RENTCOVER2
   4660   (all,i,AEZ_COMM)(all,j,ACROP_COMM)(all,r,REG)
   4661       p_RENTCOVER(i,j,r) + p_LANDCOVER_L(i,j,r) =
   4662                           pmcropland(i,r) + qocropland (i,r);
   4663    
   4664   Variable (LEVELS) (all,i,AEZ_COMM)(all,r,REG)
   4665       RENTCOVERAV(i,r)
   4666       # level of average land rents by AEZ and region #;
   4667   Formula (initial)
   4668   (all,i,AEZ_COMM)(all,r,REG)
   4669       RENTCOVERAV(i,r) =
   4670     [sum(j,LAND_COMM, NVFM(i,j,r))/sum(j,PROD_COVER, LANDCOVER_L(i,j,r))] ;
   4671   Equation E_RENTCOVERAV
   4672   (all,i,AEZ_COMM)(all,r,REG)
   4673       p_RENTCOVERAV(i,r) + lcoveraez(i,r) = pm(i,r) + qo(i,r) ;
   4674    
   4675   Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4676       HARVSTAREA_L(i,j,r)
   4677       # cropland harvested area #;
   4678   Read
   4679       HARVSTAREA_L from file GTAPDATA header "AREA";
   4680    
   4681   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4682       HARVSTAREA(i,j,r)
   4683       # hectares of land by AEZ, land cover type and region #;
   4684   Formula (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4685       HARVSTAREA(i,j,r) = HARVSTAREA_L(i,j,r);
   4686    
   4687   ! New coefficient for deflating the growth in land cover certain regions. The
   4688     problem is that there is a great deal of crop land cover that is not
   4689     cropped for one reason or another (e.g., CRP land in USA). Therefore, we
   4690     do not expect crop land cover to expand in the same proportion as
   4691     harvested area. Instead, we keep the absolute change in these two levels
   4692     variables the same. So if the model calls for 10 million hectares more
   4693     of harvested area, land cover must also rise by this amount. !
   4694    
   4695   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   4696       HA_LCSHR(i,r)
   4697       # share of harvested area in total land cover #;
   4698   Formula
   4699   (all,i,AEZ_COMM)(all,r,REG)
   4700       HA_LCSHR(i,r) =
   4701   sum(k,CROP_COMM, HARVSTAREA_L(i,k,r))/sum(k,ACROP_COMM, LANDCOVER_L(i,k,r)) ;
   4702    
   4703    
   4704   !<
   4705       ------------------------------------------------------
   4706       Translation of effective hectares to physical hectares
   4707       ------------------------------------------------------
   4708    
   4709   - This version specifies an elasticity of effective crop land wrt land crop land
   4710   expansion: ETA. ETA is the percentage change in effective cropland for a given
   4711   percentage change in crop land area. So, if ETA is 0.5, then to achieve a
   4712   one percent expansion in effective cropland, we need a two percent rise in
   4713   harvested cropland area. However, since a one percent rise in harvested cropland
   4714   does not require a one percent rise in total land cover, we also pre-multiply
   4715   by the ratio of harvested area to land cover. Thus, if ETA = 0.5 and HA is
   4716   just 2/3's of land cover, then crop land cover will rise by 4/3's of the rise in
   4717   harvested crop land requirements. Mathematically, we have:
   4718    
   4719   ETA = %chng effective cropland / %change harvetsed cropland area
   4720   qocropland = our measure of % change in effective cropland
   4721   cropland = % change in cropland area, which is NOT the same as cropland cover.
   4722    
   4723   Thus:
   4724   ETA = qocropland/cropland
   4725    
   4726   The problem arises in determining the percentage change: cropland.
   4727    
   4728   First of all, cropland is based on harvested area (HA), not physically
   4729   cultivated area (PA). When there are extensive crop failures, HA < PA. However,
   4730   when multiple cropping is present, we have HA > PA. We do not have global crop
   4731   data on PA.
   4732    
   4733   Secondly, the data bases on crop land cover (LC) and PA are quite different.
   4734   In the US, cropland cover includes crop land used for pasture, idle land and
   4735   CRP land.The difference is huge.
   4736    
   4737   Combining both of these problems, we are left with a large, inexplicable, gap
   4738   between LC and HA. Since LC >> HA in most cases, assuming that both move in
   4739   equal proportions greatly inflates the total land cover requirements for a given
   4740   percentage change in HA. For this reason, we have reverted to the assumption
   4741   that del_LC = del_HA instead.
   4742    
   4743   In percentage changes, we have:
   4744    
   4745   total land cover = (HA/LC)*harvested area + (Other/LC)*other crop land cover
   4746    
   4747   If other crop land cover (e.g., idle land) does not change, then harvested
   4748   area is simply scaled by HA/LC to give the change in total land cover.
   4749    
   4750   >!
   4751    
   4752   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   4753       ETA(i,r)
   4754       # elasticity of effective hectares w.r.t. acreage expansion #;
   4755   Read
   4756       ETA from file GTAPPARM header "ETA";
   4757    
   4758   ! Now provide a revised estimate of the crop land area required, based
   4759   on ETA, the elasticity of effective crop land wrt harvested area. !
   4760    
   4761   ! Now switch to the harvested area portion of the code. !
   4762    
   4763   Variable (all,i,AEZ_COMM)(all,r,REG)
   4764       harvstaez(i,r)
   4765       # change in crop harvested area within aez #;
   4766   Variable (all,i,AEZ_COMM)(all,r,REG)
   4767       harvstslack(i,r)
   4768       # slack variable in land allocation condition #;
   4769   Variable (all,j,CROP_COMM)(all,r,REG)
   4770       harvstcom(j,r)
   4771       # aggregates harvested area across AEZs for a given commodity, by region #;
   4772    
   4773   Equation E_HARVSTAEZ
   4774   (all,i,AEZ_COMM)(all,r,REG)
   4775       harvstaez(i,r) = [1/ETA(i,r)] * qocropland (i,r);
   4776    
   4777   ! Non-crop cover adjusts to accommodate this difference, so areaadjust
   4778   must change to satisfy the constant hectares condition for each AEZ. !
   4779    
   4780   Variable (all,i,AEZ_COMM)(all,r,REG)
   4781       areaadjust(i,r)
   4782       # adjusts noncrop areas to satisfy constant hectares per AEZ #;
   4783    
   4784   Equation E_NONCROPCOV
   4785   (all,i,AEZ_COMM)(all,j,PROD2_COVER)(all,r,REG)
   4786       p_LANDCOVER_L(i,j,r) = qoes(i,j,r) + areaadjust(i,r) ;
   4787    
   4788   Coefficient (all,i,AEZ_COMM)(all,j,PROD_COVER)(all,r,REG)
   4789       LCOVERSHR(i,j,r)
   4790       # share in land cover #;
   4791   Formula
   4792   (all,i,AEZ_COMM)(all,j,PROD_COVER)(all,r,REG)
   4793       LCOVERSHR(i,j,r) =
   4794           LANDCOVER_L(i,j,r)/sum(k,PROD_COVER, LANDCOVER_L(i,k,r)) ;
   4795    
   4796   Equation FIXCOVER
   4797   # eq'n scales qoes to ensure constant hectares #
   4798   (all,i,AEZ_COMM)(all,r,REG)
   4799       lcoveraez(i,r) =
   4800           sum(j,PROD_COVER, LCOVERSHR(i,j,r) * p_LANDCOVER_L(i,j,r));
   4801    
   4802   Equation E_AREAADJUST
   4803   # links total land cover in the AEZ to the endowment #
   4804   (all,i,AEZ_COMM)(all,r,REG)
   4805       lcoveraez(i,r) = qo(i,r);
   4806    
   4807   ! Compute the change in national land cover, by type !
   4808    
   4809   Variable (all,j,PROD_COVER)(all,r,REG)
   4810       lcovercom(j,r)
   4811       # change in regional land cover #;
   4812    
   4813   Coefficient (all,i,AEZ_COMM)(all,j,PROD_COVER)(all,r,REG)
   4814       COMLCOVERSHR(i,j,r)
   4815       # share in land cover #;
   4816   Formula
   4817   (all,i,AEZ_COMM)(all,j,PROD_COVER)(all,r,REG)
   4818       COMLCOVERSHR(i,j,r) =
   4819   LANDCOVER_L(i,j,r)/sum(m,AEZ_COMM, LANDCOVER_L(m,j,r)) ;
   4820    
   4821   Equation COMCOVER
   4822   # eq'n computes regional land cover change #
   4823   (all,j,PROD_COVER)(all,r,REG)
   4824       lcovercom(j,r) =
   4825    sum(m,AEZ_COMM, COMLCOVERSHR(m,j,r) * p_LANDCOVER_L(m,j,r));
   4826    
   4827   Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4828       RENTCROP(i,j,r)
   4829       # level of land rents by AEZ, sector and region, in $/ha. #;
   4830   Formula (initial)
   4831   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4832       RENTCROP(i,j,r) = [NVFM(i,j,r)/HARVSTAREA_L(i,j,r)]  ;
   4833   Equation E_RENTCROP1
   4834   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4835       p_RENTCROP(i,j,r) + p_HARVSTAREA_L(i,j,r) = pmes(i,j,r) + qoes(i,j,r) ;
   4836    
   4837   Variable (LEVELS) (all,i,AEZ_COMM)(all,r,REG)
   4838       RENTCROPAV(i,r)
   4839       # level of average crop land rents by AEZ and region #;
   4840   Formula (initial)
   4841   (all,i,AEZ_COMM)(all,r,REG)
   4842       RENTCROPAV(i,r) =
   4843     [sum(j,CROP_COMM, NVFM(i,j,r))/sum(j,CROP_COMM, HARVSTAREA_L(i,j,r))] ;
   4844   Equation E_RENTCROPAV
   4845   (all,i,AEZ_COMM)(all,r,REG)
   4846       p_RENTCROPAV(i,r) + harvstaez(i,r) = pmcropland(i,r) + qocropland(i,r) ;
   4847    
   4848   Equation E_HARVSTAREA
   4849   # eq'n scales qoes to get revised p_HA and ensure constant physical hectares #
   4850   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4851       p_HARVSTAREA_L(i,j,r) =
   4852           harvstslack(i,r) + qoes(i,j,r) ;
   4853    
   4854   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4855       HAREASHR(i,j,r)
   4856       # share of crop j in total AEZ i land area #;
   4857   Formula
   4858   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4859       HAREASHR(i,j,r) =
   4860           HARVSTAREA_L(i,j,r)/sum(k,CROP_COMM, HARVSTAREA_L(i,k,r)) ;
   4861    
   4862   Equation FIXAREA
   4863   # eq'n scales qoes to ensure constant hectares #
   4864   (all,i,AEZ_COMM)(all,r,REG)
   4865       harvstaez(i,r) =
   4866           sum(j,CROP_COMM, HAREASHR(i,j,r) * p_HARVSTAREA_L(i,j,r));
   4867    
   4868   Equation CROPCOVER
   4869   # total harvested area is tied to the endowment of cropland cover  #
   4870   (all,i,AEZ_COMM)(all,j,ACROP_COMM)(all,r,REG)
   4871       p_LANDCOVER_L(i,j,r) = HA_LCSHR(i,r) * harvstaez(i,r);
   4872    
   4873   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4874       AEZHAREASHR(i,j,r)
   4875       # share of AEZ i in total crop j land area #;
   4876   Formula
   4877   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4878       AEZHAREASHR(i,j,r) =
   4879           HARVSTAREA_L(i,j,r)/sum(k,AEZ_COMM, HARVSTAREA_L(k,j,r)) ;
   4880    
   4881   Equation COMHARVEST
   4882   # eq'n scales qoes to ensure constant hectares #
   4883   (all,j,CROP_COMM)(all,r,REG)
   4884       harvstcom(j,r) =
   4885           sum(i,AEZ_COMM, AEZHAREASHR(i,j,r) * p_HARVSTAREA_L(i,j,r));
   4886    
   4887   ! FYI: also compute the change national average crop yield due to changes
   4888   in crop land area !
   4889    
   4890   Variable (all,r,REG)
   4891       hareaslackreg(r)
   4892       # national yield adjustment #;
   4893    
   4894   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   4895       AEZHREGSHR(i,r)
   4896       # AEZ share in regional land cover #;
   4897   Formula
   4898   (all,i,AEZ_COMM)(all,r,REG)
   4899       AEZHREGSHR(i,r) =
   4900   sum(j,CROP_COMM, HARVSTAREA_L(i,j,r))/
   4901           sum(m,AEZ_COMM, sum(j,CROP_COMM, HARVSTAREA_L(m,j,r))) ;
   4902    
   4903   Equation HARVCOVERSLACK
   4904   # eq'n computes regional land cover change #
   4905   (all,r,REG)
   4906       hareaslackreg(r) =
   4907    sum(i,AEZ_COMM, AEZHREGSHR(i,r) * harvstslack(i,r));
   4908    
   4909   ! Finally, compute the productivity-weighted change in land cover. This
   4910   should be zero. !
   4911    
   4912   Variable (all,i,AEZ_COMM)(all,r,REG)
   4913       xlcoveraez(i,r)
   4914   # change in productivity-weighted land cover, by aez # ;
   4915   Equation E_XLCOVERAEZ
   4916   # change in productivity-weighted land cover, by aez #
   4917   (all,i,AEZ_COMM)(all,r,REG)
   4918   xlcoveraez(i,r) =
   4919           sum(j,PROD2_COVER, REVSHR1(i,j,r) * qoes(i,j,r)) +
   4920           [sum(j,CROP_COMM, REVSHR1(i,j,r))] * qocropland(i,r);
   4921    
   4922   !Compute land use change by land cover type, AEZ and region!
   4923   Variable (change) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   4924       LUC(i,j,r) # land cover change #;
   4925   Equation E_LUC
   4926   # land cover change#
   4927   (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   4928   LUC(i,j,r) = 1/100 * LANDCOVER(i,j,r)* p_LANDCOVER_L(i,j,r);
   4929    
   4930   !Compute crop harvested area change, by crop, AEZ and region!
   4931   Variable (change) (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4932       cHARVSTAREA(i,j,r) # land cover change #;
   4933   Equation E_cHARVSTAREA
   4934   # land cover change#
   4935   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   4936   cHARVSTAREA(i,j,r) = 1/100 * HARVSTAREA(i,j,r)* p_HARVSTAREA_L(i,j,r);
   4937    
   4938   ![[! !]]!
   4939   ! Land Supply Elasticity Module !
   4940   ! This module borrows from MAGNET model. Land supply at the levels
   4941     is defined using the following function:
   4942    
   4943     L = A - B/(P^C)
   4944    
   4945     wherein L is the land supply, P is the real rental rate and B and C
   4946     are positive parameters. C = 1 in the general version of the model. The
   4947     linearized version of the model is defined by the following equation:
   4948    
   4949     p_L = (A/L)*p_A + E * p_P
   4950    
   4951     where the rental rate elasticity is given by the following equation
   4952    
   4953     E = C (A / L -1)
   4954    
   4955     References:
   4956     Woltjer, G.B. and M.H. Kuiper, 2014. The MAGNET Model: Module description.
   4957     Wageningen, LEI Wageningen UR (University & Research centre),
   4958     LEI Report 14-057. 146 pp.
   4959    
   4960   Warning on asyptote shifter. This is only plausible for small changes
   4961    
   4962   See Dixon et al (2012) RED Versus REDD:
   4963   The Battle Between Extending Agricultural Land Use and Protecting Forest
   4964    
   4965   !
   4966   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   4967       PARM_C(i,r) # land supply curve shape parameter #;
   4968       Read PARM_C from file GTAPPARM header "PRMC";
   4969    
   4970   Variable (levels) (all,i,AEZ_COMM)(all,r,REG)
   4971       ECONLAND(i,r) # area of land in economic use (in ha - for., crop., past.) #;
   4972   Formula (initial) (all,i,AEZ_COMM)(all,r,REG)
   4973       ECONLAND(i,r) = sum(j, PROD_COVER, LANDCOVER_L(i,j,r)) + 1;
   4974    
   4975   Variable (levels) (all,r,REG)
   4976       ECONLANDW(r) # area of land in economic use (in ha - for., crop., past.) #;
   4977   Formula&Equation E_ECONLANDW (all,r,REG)
   4978       ECONLANDW(r) = sum(i, AEZ_COMM, ECONLAND(i,r));
       !  EQUATION(LINEAR) E_ECONLANDW
          (ALL,r,REG) ECONLANDW(r) * p_ECONLANDW(r) = SUM(i,AEZ_COMM,

          ECONLAND(i,r) * p_ECONLAND(i,r)) ;  ! 

   4979    
   4980   Variable (all,i,AEZ_COMM)(all,r,REG)
   4981       p_slackland(i,r) # land supply slack #;
   4982    
   4983   Variable (all,r,REG)
   4984       p_slacklandr(r) # land supply slack #;
   4985    
   4986    
   4987   Variable (levels,change) (all,i,AEZ_COMM)(all,r,REG)
   4988       MAX_LAND(i,r) # maximum available land (in ha) #;
   4989       Read MAX_LAND from file GTAPDATA header "MAXL";
   4990    
   4991    
   4992   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   4993       MAX_LAND_INT(i,r) # pre-simulation maximum available land (in ha) #;
   4994       Formula (initial) (all,i,AEZ_COMM)(all,r,REG)
   4995       MAX_LAND_INT(i,r) = IF(MAX_LAND(i,r) = 0, 1) + MAX_LAND(i,r);
   4996    
   4997   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   4998       ELAND(i,r) # land supply elasticity #;
   4999       Formula (all,i,AEZ_COMM)(all,r,REG)
   5000       ELAND(i,r) = PARM_C(i,r) * (MAX_LAND(i,r)/ECONLAND(i,r) - 1);
   5001    
   5002   Zerodivide default 0;
   5003    
   5004   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   5005       MAXRATIO(i,r) # ratio of maximum land supply to econland #;
   5006       Formula (all,i,AEZ_COMM)(all,r,REG)
   5007       MAXRATIO(i,r) = (MAX_LAND(i,r)/ECONLAND(i,r));
   5008    
   5009   Zerodivide off;
   5010   ![[!
   5011   Equation E_LAND_SUPPLY
   5012   # eq'n defines the supply of economically active land in region r #
   5013   (all,i,AEZ_COMM)(all,r,REG)
   5014      p_ECONLAND(i,r) =
   5015                        ELAND(i,r) * pfactreal(i,r) + p_slackland(i,r)
   5016                                   + p_slacklandr(r);
   5017   !]]!
   5018    
   5019   Equation E_LAND_SUPPLY
   5020   # eq'n defines the supply of economically active land in region r #
   5021   (all,i,AEZ_COMM)(all,r,REG)
   5022      p_ECONLAND(i,r)  = p_slacklandr(r) + p_slackland(i,r)
   5023       - [MAXRATIO(i,r) * ((100/MAX_LAND_INT(i,r))*c_MAX_LAND(i,r))]
   5024       +  ELAND(i,r) * pfactreal(i,r);
   5025    
   5026   Coefficient (parameter)
   5027       ID_PES # Set to zero to turn-off global PES via int'l transfer #;
   5028       READ ID_PES from file GTAPSUPP header "IDPS";
   5029    
   5030   Equation E_PES_COST
   5031   # eq'n defines the cost of PES payments to regions with decrease in max land #
   5032   (all,r,REG)
   5033   pes_inflow(r) = ID_PES * (1/10 ^ 6) * sum(i,AEZ_COMM, PESha(i,r) * c_MAX_LAND(i,r)) ;
   5034    
   5035   !
   5036      p_ECONLAND(i,r) = ELAND(i,r) * pfactreal(i,r) + p_slackland(i,r)
   5037                                   + p_slacklandr(r);
   5038   !
   5039   Equation E_LAND_ENDW
   5040   # eq'n defines the supply of economically active land in region r #
   5041   (all,i,AEZ_COMM)(all,r,REG)
   5042      qo(i,r) = p_ECONLAND(i,r);
   5043    
   5044    
   5045   ![[! !]]!
   5046    
   5047   !<
   5048       ---------------------------
   5049       F. YIELD TRACKING MODULE
   5050       ---------------------------
   5051   >!
   5052    
   5053   Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5054       PRODUCTION(i,j,r)
   5055       # millions of bushels or tonnes (use "PRDN" for tonnes only)#;
   5056   Read
   5057       PRODUCTION from file GTAPDATA header "TONS";
   5058    
   5059   Subset
   5060       CROP_COMM is subset of NSAV_COMM;
Declaration of 'CROP_COMM' as a SUBSET of 'NSAV_COMM'.
%% Information only. 
    This subset relation is a consequence of earlier subset declarations.
   5061    
   5062   Equation E_PRODUCTION
   5063   # eq'n computes change in crop production by AEZ #
   5064   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5065       p_PRODUCTION(i,j,r) = p_HARVSTAREA_L(i,j,r)
   5066               - harvstslack(i,r) + [qo(j,r) - qoes(i,j,r)] ;
   5067    
   5068   Zerodivide (zero_by_zero) default 0;
   5069   Zerodivide (nonzero_by_zero) default 0;
   5070    
   5071   ! Compute yield from production and harvested area to ensure consistency !
   5072    
   5073   Coefficient (all,j,CROP_COMM)(all,r,REG)
   5074       YIELD(j,r)
   5075       # av. national yield in millions of bushels or tonnes #;
   5076   Variable (all,j,CROP_COMM)(all,r,REG)
   5077       p_YIELD(j,r)
   5078     # av. national yield in millions of bushels or tonnes #;
   5079   Formula (initial)
   5080   (all,j,CROP_COMM)(all,r,REG)
   5081       YIELD(j,r) =
   5082       sum(i,AEZ_COMM, PRODUCTION(i,j,r))/sum(i,AEZ_COMM, HARVSTAREA_L(i,j,r));
   5083   Update (all,j,CROP_COMM)(all,r,REG)
   5084       YIELD(j,r) = p_YIELD(j,r);
   5085    
   5086   Equation E_YIELD
   5087   # eq'n computes av. national yield in millions of bushels or tonnes #
   5088   (all,j,CROP_COMM)(all,r,REG)
   5089       p_YIELD(j,r) = qo(j,r) - harvstcom(j,r);
   5090    
   5091   Zerodivide (zero_by_zero) off;
   5092   Zerodivide (nonzero_by_zero) off;
   5093    
   5094   ! TH: Decomposing global yield changes. !
   5095    
   5096   Variable (LEVELS)(all,j,CROP_COMM)
   5097       YIELDGL(j)
   5098       # av. global yield in millions of bushels or tonnes #;
   5099   Formula & Equation (LEVELS) E_YIELDGL (all,j,CROP_COMM)
   5100       YIELDGL(j) = sum(r, REG, sum(i,AEZ_COMM, PRODUCTION(i,j,r)))
   5101                  / sum(r,REG,sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r)));
       !  EQUATION(LINEAR) E_YIELDGL
          (ALL,j,CROP_COMM) YIELDGL(j) * p_YIELDGL(j) = 1.0 / SUM(r,REG,

          SUM(i,AEZ_COMM,HARVSTAREA_L(i,j,r))) * SUM(r,REG,SUM(i,AEZ_COMM,

          PRODUCTION(i,j,r) * p_PRODUCTION(i,j,r))) - SUM(r,REG,SUM(i,AEZ_COMM,

          PRODUCTION(i,j,r))) / {[SUM(r,REG,SUM(i,AEZ_COMM,HARVSTAREA_L(i,j,r))

          )]^[2]} * SUM(r,REG,SUM(i,AEZ_COMM,HARVSTAREA_L(i,j,r) * 

          p_HARVSTAREA_L(i,j,r))) ;  ! 

   5102    
   5103   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5104       PRODUCTSHR(i,j,r)
   5105       # share of production in AEZ i, region r of sector j's global output #;
   5106   Formula
   5107   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5108       PRODUCTSHR(i,j,r) =
   5109               PRODUCTION(i,j,r)/sum(k,REG, sum(m,AEZ_COMM, PRODUCTION(m,j,k)));
   5110    
   5111   Variable (all,j,CROP_COMM)
   5112       globalouput(j)
   5113       # sector j's global output chng #;
   5114   Equation E_GLOBALOUTPUT
   5115   # sector j's global output chng #
   5116   (all,j,CROP_COMM)
   5117       globalouput(j) = sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * qo(j,r)));
   5118    
   5119   Variable (all,j,CROP_COMM)
   5120       cnt_yield(j)
   5121       # contribution of yield changes sector j's global output chng #;
   5122   Equation E_CNT_YIELD
   5123   # contribution of yield changes sector j's global output chng #
   5124   (all,j,CROP_COMM)
   5125       cnt_yield(j) = sum(r,REG, sum(i,AEZ_COMM,
   5126           PRODUCTSHR(i,j,r) * [qo(j,r) - qoes(i,j,r) - harvstslack(i,r)]));
   5127    
   5128   Variable (all,j,CROP_COMM)
   5129       cnt_yieldint(j)
   5130       # contribution of intensive yield changes sector j's global output chng #;
   5131   Equation E_CNT_YIELDI
   5132   # contribution of intensive yield changes sector j's global output chng #
   5133   (all,j,CROP_COMM)
   5134       cnt_yieldint(j) =
   5135       sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * [qo(j,r) - qoes(i,j,r)]));
   5136    
   5137   Variable (all,j,CROP_COMM)
   5138       cnt_yieldext(j)
   5139       # contribution of extensive yield changes sector j's global output chng #;
   5140   Equation E_CNT_YIELDE
   5141   # contribution of extensive yield changes sector j's global output chng #
   5142   (all,j,CROP_COMM)
   5143       cnt_yieldext(j) =
   5144       sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * [-harvstslack(i,r)]));
   5145    
   5146   Variable (all,j,CROP_COMM)
   5147       cnt_area(j)
   5148       # contribution of area changes sector j's global output chng #;
   5149   Equation E_CNT_AREA
   5150   # contribution of area changes sector j's global output chng #
   5151   (all,j,CROP_COMM)
   5152       cnt_area(j) =
   5153       sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * p_HARVSTAREA_L(i,j,r)));
   5154    
   5155    
   5156   ! TH: Decomposing regional yield changes. !
   5157    
   5158   Zerodivide (zero_by_zero) default 0;
   5159   Zerodivide (nonzero_by_zero) default 0;
   5160    
   5161   Coefficient (all,j,CROP_COMM)(all,r,REG)
   5162       YIELDREG(j,r)
   5163       # av. regional yield in millions of bushels or tonnes #;
   5164   Formula (all,j,CROP_COMM)(all,r,REG)
   5165       YIELDREG(j,r) = sum(i,AEZ_COMM, PRODUCTION(i,j,r))
   5166                  / sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r));
   5167    
   5168   Coefficient (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5169       PRODUCTSHREG(i,j,r)
   5170       # share of production in AEZ i, region r of sector j's regional output #;
   5171   Formula
   5172   (all,i,AEZ_COMM)(all,j,CROP_COMM)(all,r,REG)
   5173       PRODUCTSHREG(i,j,r) =
   5174               PRODUCTION(i,j,r)/sum(m,AEZ_COMM, PRODUCTION(m,j,r));
   5175    
   5176   Zerodivide (zero_by_zero) off;
   5177   Zerodivide (nonzero_by_zero) off;
   5178    
   5179   Variable (all,j,CROP_COMM)(all,r,REG)
   5180       regouput(j,r)
   5181       # sector j's regional output chng #;
   5182   Equation E_REGOUTPUT
   5183   # contribution of yield changes sector j's regional  output chng #
   5184   (all,j,CROP_COMM)(all,r,REG)
   5185       regouput(j,r) = sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * qo(j,r));
   5186    
   5187   Variable (all,j,CROP_COMM)(all,r,REG)
   5188       cnt_yieldreg(j,r)
   5189       # contribution of yield changes sector j's regional  output chng #;
   5190   Equation E_CNT_YIELDREG
   5191   # contribution of yield changes sector j's regional output chng #
   5192   (all,j,CROP_COMM)(all,r,REG)
   5193       cnt_yieldreg(j,r) = sum(i,AEZ_COMM,
   5194           PRODUCTSHREG(i,j,r) * [qo(j,r) - qoes(i,j,r) - harvstslack(i,r)]);
   5195    
   5196   Variable (all,j,CROP_COMM)(all,r,REG)
   5197       cnt_yieldintreg(j,r)
   5198       # contribution of intensive yield changes sector j's regional output chng #;
   5199   Equation E_CNT_YIELDIREG
   5200   # contribution of intensive yield changes sector j's regional output chng #
   5201   (all,j,CROP_COMM)(all,r,REG)
   5202       cnt_yieldintreg(j,r) =
   5203       sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * [qo(j,r) - qoes(i,j,r)]);
   5204    
   5205   Variable (all,j,CROP_COMM)(all,r,REG)
   5206       cnt_yieldextreg(j,r)
   5207     # contribution of extensive yield changes sector j's regional  output chng #;
   5208   Equation E_CNT_YIELDEREG
   5209   # contribution of extensive yield changes sector j's regional output chng #
   5210   (all,j,CROP_COMM)(all,r,REG)
   5211       cnt_yieldextreg(j,r) =
   5212       sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * [-harvstslack(i,r)]);
   5213    
   5214   Variable (all,j,CROP_COMM)(all,r,REG)
   5215       cnt_areareg(j,r)
   5216       # contribution of area changes sector j's regional output chng #;
   5217   Equation E_CNT_AREAREG
   5218   # contribution of area changes sector j's regional output chng #
   5219   (all,j,CROP_COMM)(all,r,REG)
   5220       cnt_areareg(j,r) =
   5221       sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * p_HARVSTAREA_L(i,j,r));
   5222    
   5223   ![[!
   5224   ! Land Use Tracking Module !
   5225    
   5226   UB: Right now the shares do not evolve and depends on initial shares need to figure out how to update this share)
   5227    
   5228   !]]!
   5229   ![[!
   5230   Coefficient (parameter)
   5231   (all,j,CROP_COMM)(all,r,REG) SHRCROPDOMR(j,r)
   5232   # share of crop production sold domestically #;
   5233   Formula (initial)  (all,j,CROP_COMM)(all,r,REG)
   5234       SHRCROPDOMR(j,r) = VDM(j,r) / VOM(j,r);
   5235    
   5236   Coefficient (parameter)
   5237   (all,j,CROP_COMM)(all,r,REG) SHRCROPEXPR(j,r)
   5238   # share of crop production sold as exports #;
   5239   Formula (initial) (all,j,CROP_COMM)(all,r,REG)
   5240       SHRCROPEXPR(j,r) = sum(s,REG, VXMD(j,r,s))/VOM(j,r);
   5241    
   5242   Coefficient (parameter)
   5243   (all,j,CROP_COMM)(all,r,REG)(all,s,REG) SHRCROPEXP(j,r,s)
   5244   # share of crop production sold as exports from region r to s#;
   5245   Formula (initial)  (all,j,CROP_COMM)(all,r,REG)(all,s,REG)
   5246       SHRCROPEXP(j,r,s) = VXMD(j,r,s)/sum(q,REG, VXMD(j,r,q));
   5247    
   5248   Variable (levels) (all,j,CROP_COMM)(all,r,REG)            CROPDOM(j,r)
   5249    #  crop production sold in domestic market (in M MTs) #;
   5250   Variable (levels) (all,j,CROP_COMM)(all,r,REG)            CROPEXPR(j,r)
   5251    #  crop production sold in export market (in M MTs) #;
   5252   Variable (levels) (all,j,CROP_COMM)(all,r,REG)(all,s,REG) CROPEXP(j,r,s)
   5253    #  crop production sold as exports from region r to s (in M MTs) #;
   5254    
   5255   Formula&Equation E_CROPDOM (all,j,CROP_COMM)(all,r,REG)
   5256    CROPDOM(j,r) = SHRCROPDOMR(j,r) * sum(i, AEZ_COMM, PRODUCTION(i,j,r));
   5257   Formula&Equation E_CROPEXPR (all,j,CROP_COMM)(all,r,REG)
   5258    CROPEXPR(j,r) =  SHRCROPEXPR(j,r) * sum(i, AEZ_COMM, PRODUCTION(i,j,r));
   5259   Formula&Equation E_CROPEXP (all,j,CROP_COMM)(all,r,REG)(all,s,REG)
   5260    CROPEXP(j,r,s) = SHRCROPEXP(j,r,s) * sum(i, AEZ_COMM, PRODUCTION(i,j,r));
   5261    
   5262    
   5263   Coefficient (parameter)
   5264   (all,j,CROP_COMM)(all,r,REG) LANDHA(j,r)
   5265   # ratio of land cover per harvested area of crops #;
   5266    
   5267   ZERODIVIDE DEFAULT 0 ;
   5268   Formula (initial) (all,j,CROP_COMM)(all,r,REG)
   5269   LANDHA     (j,r) = sum(i, AEZ_COMM, LANDCOVER_L(i,"CROPLAND",r))
   5270                     /sum(i, AEZ_COMM, HARVSTAREA_L(i,j,r));
   5271   ZERODIVIDE OFF;
   5272    
   5273    
   5274   YIELDREG(j,r) * HARVRATIO (j,r)
   5275   !]]!
   5276   ![[!
   5277   !<
   5278       ------------------------------------------------------
   5279       G. EMISSIONS DUE TO LAND COVER CHANGES TRACKING MODULE
   5280       ------------------------------------------------------
   5281   >!
   5282   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5283       cLANDCOVER(i,j,r)
   5284       # change in land cover by AEZ and region #;
   5285   Formula (initial) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5286       cLANDCOVER(i,j,r)=0;
   5287   Update (change) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5288       cLANDCOVER(i,j,r) = 1/100 * LANDCOVER(i,j,r) * p_LANDCOVER_L(i,j,r);
   5289    
   5290   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   5291       EFFORLOST(i,r)  # emission factor for forestry lost #;
   5292   Read
   5293       EFFORLOST from file GTAPPARM header "EFL";
   5294    
   5295   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   5296       EFFORGAIN(i,r)  # emission factor for forestry gain #;
   5297   Read
   5298       EFFORGAIN from file GTAPPARM header "EFG";
   5299    
   5300   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   5301       EFCROP(i,r)  # emission factor for forestry lost #;
   5302   Read
   5303       EFCROP from file GTAPPARM header "ECR";
   5304    
   5305   Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
   5306       EFPAST(i,r)  # emission factor for forestry lost #;
   5307   Read
   5308       EFPAST from file GTAPPARM header "EPS";
   5309    
   5310    
   5311   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5312       EMSSFCTR(i,j,r);
   5313   Formula (all,i,AEZ_COMM)(all,j, FOREST_COMM)(all,r,REG)
   5314       EMSSFCTR(i,j,r) =
   5315                     if(cLANDCOVER(i,j,r) le 0, EFFORLOST(i,r))
   5316                   + if(cLANDCOVER(i,j,r) gt 0, EFFORGAIN(i,r));
   5317   Formula (all,i,AEZ_COMM)(all,j,ACROP_COMM)(all,r,REG)
   5318       EMSSFCTR(i,j,r) = EFCROP(i,r);
   5319   Formula (all,i,AEZ_COMM)(all,j,GRAZE_COMM)(all,r,REG)
   5320       EMSSFCTR(i,j,r) = EFPAST(i,r);
   5321    
   5322   Variable (change) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5323       EMSSLC(i,j,r) #CO2 emissions from land cover change, Mg #;
   5324   Coefficient (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5325       EMSSLCLEV(i,j,r) #CO2 emissions from land cover change, Mg #;
   5326   Formula (initial)(all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5327       EMSSLCLEV(i,j,r) = 0;
   5328   Update (change) (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5329       EMSSLCLEV(i,j,r) = EMSSLC(i,j,r);
   5330    
   5331    
   5332   Equation E_EMSSLC
   5333   # new emissions from land cover change #
   5334       (all,i,AEZ_COMM)(all,j,LAND_COVER)(all,r,REG)
   5335   EMSSLC(i,j,r) = - 1/100 * EMSSFCTR(i,j,r) *
   5336              LANDCOVER(i,j,r)* p_LANDCOVER_L(i,j,r);
   5337    
   5338   Variable (change)(all,j,LAND_COVER)(all,r,REG)
   5339       EMSSLCALCR(j,r)
   5340       # emissions from land cover change, aggregated over AEZs #;
   5341   Equation E_EMSSLCALCR
   5342   # new emissions from land cover change, aggregated over AEZs #
   5343    (all,j,LAND_COVER)(all,r,REG)
   5344       EMSSLCALCR(j,r) = sum(i,AEZ_COMM, EMSSLC(i,j,r));
   5345    
   5346   Variable (change)(all,j,LAND_COVER)
   5347       EMSSLCALC(j)
   5348       # new emissions from land cover change, by land cover type#;
   5349   Equation E_EMSSLCALC
   5350   # new emissions from land cover change, by land cover type #
   5351    (all,j,LAND_COVER)
   5352       EMSSLCALC(j) = sum(i,AEZ_COMM, sum(r, REG, EMSSLC(i,j,r)));
   5353    
   5354   Variable (change)(all,r,REG)
   5355       EMSSLCAR(r)
   5356       # new emissions from land cover change, by region #;
   5357   Equation E_EMSSLCAR
   5358   # new emissions from land cover change, by region #
   5359    (all,r, REG)
   5360       EMSSLCAR(r) = sum(i,AEZ_COMM, sum(j,LAND_COVER, EMSSLC(i,j,r)));
   5361    
   5362   Variable (change)
   5363       EMSSLCAGL
   5364       # new emissions from land cover change, global total#;
   5365   Equation E_EMSSLCAGL
   5366   # new emissions from land cover change, global total #
   5367       EMSSLCAGL =
   5368           sum(i,AEZ_COMM, sum(j,LAND_COVER, sum(r,REG,EMSSLC(i,j,r))));
   5369   !]]!
   5370    
   5371    
   5372    
   5373    
   5374   !<
   5375       ------------------------------------------------------------
   5376       13. Laspeyres, Paasche and Fisher price and quantity indices
   5377       ------------------------------------------------------------
   5378   >!
   5379    
   5380   ! GDP expenditure side summary !
   5381   Set
   5382       GDPEX (Household,Investment,Government,Exports,IntnlMargins,Imports);
   5383    
   5384    
   5385   Coefficient (all,r,REG)
   5386       VEXPORTS(r)
   5387       # Value of merchandise and services sales to the world market from r #;
   5388   Formula (all,r,REG)
   5389       VEXPORTS(r)
   5390           = sum{i,NMRG_COMM, sum{s,REG, VXWD(i,r,s)}}
   5391           + sum{m,MARG_COMM, sum{s,REG, VXWD(m,r,s)}}
   5392   ;
   5393    
   5394   Coefficient (all,s,REG)
   5395       VIMPORTS(s)
   5396       # Value of merchandise and services purchases from world market by s #;
   5397   Formula (all,s,REG)
   5398       VIMPORTS(s) = sum{i,TRAD_COMM, sum{r,REG, VIWS(i,r,s)}};
   5399    
   5400    
   5401   Coefficient (all,r,REG)(all,g,GDPEX)
   5402       GDPEXP(r,g) # GDP expenditure side summary #;
   5403   Formula
   5404   (all,r,REG) GDPEXP(r,"Household")    = PRIVEXP(r);
   5405   (all,r,REG) GDPEXP(r,"Investment")   = REGINV(r);
   5406   (all,r,REG) GDPEXP(r,"Government")   = GOVEXP(r);
   5407   (all,r,REG) GDPEXP(r,"Exports")      = VEXPORTS(r);
   5408   (all,r,REG) GDPEXP(r,"IntnlMargins") = sum{m,MARG_COMM, VST(m,r)};
   5409   (all,r,REG) GDPEXP(r,"Imports")      = - VIMPORTS(r);
   5410    
   5411   !<
   5412       13-0. GDP-expenditure price and quantity indices
   5413       ------------------------------------------------
   5414   >!
   5415    
   5416   Variable (orig_level=VP_ind)(all,r,REG)
   5417       qp_ind(r) # aggregate private consumption quantity #;
   5418   Variable (orig_level=VG_ind) (all,r,REG)
   5419       qg_ind(r) # aggregate government consumption quantity #;
   5420   Variable (all,r,REG)
   5421       qfobxw_ind(r) # quantity of non margin exports by region r #;
   5422   Variable (all,r,REG)
   5423       qstxw_ind(r) # quantity of margin exports by region r #;
   5424   Coefficient (all,r,REG)
   5425       VP_ind(r) # value of aggregate private consumption #;
   5426   Coefficient (all,r,REG)
   5427       VG_ind(r) # value of aggregate government consumption #;
   5428   Coefficient (all,r,REG)
   5429       VFOBXW_ind(r) # value of non margin exports by region r #;
   5430   Coefficient (all,r,REG)
   5431       VSTXW_ind(r) # value of margin exports by region r #;
   5432   Formula (all,r,REG)
   5433       VP_ind(r) = sum{c,TRAD_COMM, VPA(c,r)};
   5434   Formula (all,r,REG)
   5435       VG_ind(r) = sum{c,TRAD_COMM, VGA(c,r)};
   5436   Formula (all,r,REG)
   5437       VFOBXW_ind(r) = sum{c,TRAD_COMM, VXW(c,r)};
   5438   Formula (all,r,REG)
   5439       VSTXW_ind(r) = sum{m,MARG_COMM, VST(m,r)};
   5440    
   5441   Equation E_qp
   5442   # computes % change in aggregate private consumption quantity #
   5443   (all,r,REG)
   5444       VP_ind(r) * qp_ind(r) = sum{c,TRAD_COMM, VPA(c,r) * qp(c,r)};
   5445    
   5446   Equation E_qg
   5447   # computes % change in aggregate government consumption quantity #
   5448   (all,r,REG)
   5449       VG_ind(r) * qg_ind(r) = sum{c,TRAD_COMM, VGA(c,r) * qg(c,r)};
   5450    
   5451   Equation E_qfobxw
   5452   # computes % change in quantity of non margin exports by region r #
   5453   (all,r,REG)
   5454       VFOBXW_ind(r) * qfobxw_ind(r) = sum{c,TRAD_COMM, sum{d,REG, VXWD(c,r,d) * qxs(c,r,d)}};
   5455    
   5456   Equation E_qstxw
   5457   # computes % change in quantity of margin exports by region r #
   5458   (all,r,REG)
   5459       VSTXW_ind(r) * qstxw_ind(r) = sum{m,MARG_COMM, VST(m,r) * qst(m,r)};
   5460    
   5461   Variable (all,r,REG)
   5462       pfobxw_ind(r) # price index for non margin exports by region r #;
   5463   Variable (all,r,REG)
   5464       pstxw_ind(r) # price index for margin exports by region r #;
   5465   Variable (orig_level=1.0)(all,r,REG)(all,g,GDPEX)
   5466       pgdpexp_ind(r,g) # GDP-expenditure component price indices #;
   5467   Variable (orig_level=GDPEXP)(all,r,REG)(all,g,GDPEX)
   5468       qgdpexp_ind(r,g) # GDP-expenditure side quantity indices #;
   5469   Variable (orig_level=GDPEXP)(all,r,REG)(all,g,GDPEX)
   5470       vgdpexp_ind(r,g) # GDP-expenditure side value indices #;
   5471    
   5472   Equation E_pfobxw
   5473   # computes % change in price index for non margin exports by region r #
   5474   (all,r,REG)
   5475       VFOBXW_ind(r) * pfobxw_ind(r) = sum{c,TRAD_COMM, sum{d,REG, VXWD(c,r,d) * pfob(c,r,d)}};
   5476    
   5477   Equation E_pstxw
   5478   # computes % change in price index for margin exports by region r #
   5479   (all,r,REG)
   5480       VSTXW_ind(r) * pstxw_ind(r) = sum{m,MARG_COMM, VST(m,r) * ps(m,r)};
   5481    
   5482   Equation E_pgdpexp_ind
   5483   # GDP-expenditure component price indices #
   5484   (all,r,REG)(all,g,GDPEX)
   5485       pgdpexp_ind(r,g) = IF[g="household", ppriv(r)] + IF[g="Investment", pcgds(r)]
   5486                    + IF[g="Government", pgov(r)] + IF[g="Exports", pfobxw_ind(r)]
   5487                    + IF[g="IntnlMargins", pstxw_ind(r)] + IF[g="Imports", piwreg(r)];
   5488    
   5489   Equation E_qgdpexp
   5490   # GDP-expenditure side quantity indices #
   5491   (all,r,REG)(all,g,GDPEX)
   5492       qgdpexp_ind(r,g) = IF[g="household", qp_ind(r)]  + IF[g="Investment", qcgds(r)]
   5493                    + IF[g="Government", qg_ind(r)] + IF[g="Exports", qfobxw_ind(r)]
   5494                    + IF[g="IntnlMargins", qstxw_ind(r)] + IF[g="Imports", qiwreg(r)];
   5495    
   5496   Equation E_vgdpexp
   5497   # value index for each GDP-expenditure component #
   5498   (all,r,REG)(all,g,GDPEX)
   5499       vgdpexp_ind(r,g) = pgdpexp_ind(r,g) + qgdpexp_ind(r,g);
   5500    
   5501   Variable (orig_level=1.0)(all,r,REG)
   5502       pgdplaspeyres(r) # percent change in GDP Laspeyres price index in r #;
   5503   Variable (orig_level=GDP)(all,r,REG)
   5504       qgdplaspeyres(r) # percent change in GDP Laspeyres quantity index in r #;
   5505   Variable (orig_level=1.0)(all,r,REG)
   5506       pgdppaasche(r) # percent change in GDP Paasche price index in r #;
   5507   Variable (orig_level=GDP)(all,r,REG)
   5508       qgdppaasche(r) # percent change in GDP Paasche quantity index in r #;
   5509   Variable (orig_level=1.0)(all,r,REG)
   5510       pgdpfisher(r) # percent change in GDP Fisher price index in r #;
   5511   Variable (orig_level=GDP)(all,r,REG)
   5512       qgdpfisher(r) # percent change in GDP Fisher quantity index in r #;
   5513   Variable (orig_level=GDP)(all,r,REG)
   5514       vgdpfisher(r) # percent change in GDP Fisher value in r #;
   5515   Coefficient (all,r,REG)(all,g,GDPEX)
   5516       GDPEXP_FPIQ(r,g) # GDP expenditure: final price and initial quantity #;
   5517   Coefficient (all,r,REG)(all,g,GDPEX)
   5518       GDPEXP_IPFQ(r,g) # GDP expenditure: initial price and final quantity #;
   5519   Formula (initial)(all,r,REG)(all,g,GDPEX)
   5520       GDPEXP_FPIQ(r,g) = GDPEXP(r,g);
   5521   Formula (initial)(all,r,REG)(all,g,GDPEX)
   5522       GDPEXP_IPFQ(r,g) = GDPEXP(r,g);
   5523   Update (all,r,REG)(all,g,GDPEX)
   5524      GDPEXP_FPIQ(r,g) = pgdpexp_ind(r,g);
   5525   Update (all,r,REG)(all,g,GDPEX)
   5526      GDPEXP_IPFQ(r,g) = qgdpexp_ind(r,g);
   5527    
   5528   Equation E_pgdplaspeyres
   5529   # computes % change in GDP Laspeyres price index in r #
   5530   (all,r,REG)
   5531       0 = sum{g, GDPEX, GDPEXP_FPIQ(r,g) * [pgdpexp_ind(r,g) - pgdplaspeyres(r)]};
   5532    
   5533   Equation E_qgdplaspeyres
   5534   # computes % change in GDP Laspeyres quantity index in r #
   5535   (all,r,REG)
   5536       0 = sum{g, GDPEX, GDPEXP_IPFQ(r,g) * [qgdpexp_ind(r,g) - qgdplaspeyres(r)]};
   5537    
   5538   Equation E_pgdppaasche
   5539   # computes % change in GDP Paasche price index in r #
   5540   (all,r,REG)
   5541       pgdppaasche(r) = vgdp(r) - qgdplaspeyres(r);
   5542    
   5543   Equation E_qgdppaasche
   5544   # computes % change in GDP Paasche quantity index in r #
   5545   (all,r,REG)
   5546       qgdppaasche(r) = vgdp(r) - pgdplaspeyres(r);
   5547    
   5548   Equation E_pgdpfisher
   5549   # computes % change in GDP Fisher price index in r #
   5550   (all,r,REG)
   5551       pgdpfisher(r) = 0.5 * [pgdplaspeyres(r) + pgdppaasche(r)];
   5552   Equation E_qgdpfisher
   5553   # computes % change in GDP Fisher quantity index in r #
   5554   (all,r,REG)
   5555       qgdpfisher(r) = 0.5 * [qgdplaspeyres(r) + qgdppaasche(r)];
   5556   Equation E_vgdpfisher
   5557   # computes % change in GDP Fisher value in r #
   5558   (all,r,REG)
   5559       vgdpfisher(r) = pgdpfisher(r) + qgdpfisher(r);
   5560    
   5561   Variable (orig_level=1.0)(all,r,REG)
   5562       preg(r) # price of aggregate utility in r #;
   5563   Equation PHOUSEHOLD
   5564   # eq'n defines price of aggregate utility in r  #
   5565   (all,r,REG)
   5566       preg(r) = (1 / INCOME(r)) * [sum(i, TRAD_COMM, VPA(i,r) * pp(i,r)
   5567                 + VGA(i,r) * pg(i,r)) + SAVE(r) * psave(r)] ;
   5568    
   5569   Variable (all,i,ENDW_COMM)(all,r,REG)
   5570       pfacthouse(i,r) # price of aggregate utility in r #;
   5571    
   5572   Equation HOUSERETURN
   5573   # eq'n defines the real rate of return to primary factor i in region r #
   5574   (all,i,ENDW_COMM)(all,r,REG)
   5575       pfacthouse(i,r) = pm(i,r) - preg(r);
   5576    
   5577   Variable (all,r,REG) pfacthouse_l(r)
   5578   # eq'n defines the real rate of return land i in region r #;
   5579   Equation E_HOUSERETURN_LAND (all,r,REG)
   5580   pfacthouse_l(r) =
   5581   sum(i, AEZ_COMM, [VOA(i,r) / sum(s , AEZ_COMM, VOA(s,r))] * pfacthouse(i,r));
   5582    
   5583   Variable (all,r,REG) pfactreal_l(r)
   5584   # eq'n defines the real rate of return land i in region r #;
   5585   Equation E_REALRETURN_LAND (all,r,REG)
   5586   pfactreal_l(r) =
   5587   sum(i, AEZ_COMM, [VOA(i,r) / sum(s , AEZ_COMM, VOA(s,r))] * pfactreal(i,r));
   5588    
   5589    
   5590   !<
   5591       ====================
   5592       END OF GTAP.TAB FILE
   5593       ====================
   5594   >!
   5595    
   5596   !<
   5597       --------------------------------------
   5598       Additional codes for reporting results
   5599       --------------------------------------
   5600   >!
   5601    
   5602   Set
   5603       REGINC # Regional income classification #
   5604       read elements from file GTAPSUPP header "RINC";
   5605   Mapping
   5606       MREGINC from REG to REGINC;
   5607       read (by_elements) MREGINC from file GTAPSUPP header "MRIN";
   5608    
   5609   Coefficient (all,r,REG)
   5610       POPR(r) # population #;
   5611   Read
   5612       POPR from file GTAPDATA header "POP";
   5613   Update (all,r,REG)
   5614       POPR(r) = pop(r);
   5615    
   5616   Variable (change)(all,r,REG)
   5617       delQGDP(r) # ordinary change in real GDP #;
   5618   Equation E_delQGDP
   5619    # ordinary change in real GDP #
   5620   (all,r,REG)
   5621       100 * delQGDP(r) = [GDP(r) * qgdpFisher(r)];
   5622    
   5623   Variable (all,r,REGINC)
   5624       qgdpreginc(r) # percent change in GDP - income classification #;
   5625   Equation E_qgdpreginc
   5626    # ordinary change in real GDP #
   5627   (all,r,REGINC)
   5628       0 = sum{rr, REG:MREGINC(rr)=r, GDP(rr) * [qgdpFisher(rr) - qgdpreginc(r)]};
   5629    
   5630   Coefficient (parameter)(all,r,REG)
   5631       INITGDP(r) # Initial GDP value #;
   5632   Formula (initial)(all,r,REG)
   5633       INITGDP(r) = GDP(r);
   5634   postsim (begin);
   5635   Coefficient (all,r,REG)
   5636       REALGDP(r) # Real GDP #;
   5637   Formula (all,r,REG)
   5638       REALGDP(r) = INITGDP(r) * [1 + [qgdpFisher(r)*0.01]];
   5639   Coefficient (all,r,REG)
   5640       VALRGDP(r) # change in value of Real GDP #;
   5641   Formula (all,r,REG)
   5642       VALRGDP(r) = INITGDP(r) * [qgdpFisher(r)*0.01];
   5643   Write
   5644    REALGDP to file GTAPSUM header "RGDP";
   5645    VALRGDP to file GTAPSUM header "VRGD";
   5646   postsim (end);
   5647    
   5648   Write
   5649    GDP to file GTAPSUM header "BGDP" longname "Base Nominal GDP";
   5650    (postsim)GDP to file GTAPSUM header "UGDP" longname "Updated Nominal GDP";
   5651    
   5652   !<
   5653       GDP decomposition
   5654       -----------------
   5655   >!
   5656    
   5657   ! GDP (Expenditure-side) decomposition  !
   5658    
   5659   Variable (change) (all,r,REG)(all,e,GDPEX)
   5660       contGDPEXP(r,e) # contributions to % change in qgdp #;
   5661   Coefficient (all,r,REG)
   5662       BGDP(r) # Initial real GDP at current prices #;
   5663   Formula (initial)(all,r,REG)
   5664       BGDP(r) = GDP(r);
   5665   Update (all,r,REG)
   5666       BGDP(r) = pgdp(r);
   5667   Equation E_contGDPEXP
   5668   # (expenditure-side) contributions to % change in real gdp #
   5669   (all,r,REG)(all,e,GDPEX)
   5670       BGDP(r) * contGDPEXP(r,e)
   5671           = IF[e="Household",    sum{c,TRAD_COMM, VPA(c,r) * qp(c,r)} ]
   5672           + IF[e="Investment",   REGINV(r) * qcgds(r)]
   5673           + IF[e="Government",   sum{c,TRAD_COMM, VGA(c,r) * qg(c,r)} ]
   5674           + IF[e="Exports",      sum{c,TRAD_COMM, sum{d,REG, VXWD(c,r,d) * qxs(c,r,d)}}]
   5675           + IF[e="IntnlMargins", sum{m,MARG_comm, VST(m,r) * qst(m,r)} ]
   5676           - IF[e="Imports",      sum{c,TRAD_COMM, sum{s,REG, VIWS(c,s,r) * qxs(c,s,r)}}];
   5677    
   5678   Variable (change)(all,r,REG)
   5679       qgdpexp(r) # GDP (income side) quantity index #;
   5680   Equation E_qgdpexp2
   5681   # GDP (income side) quantity index #
   5682   (all,r,REG)
   5683       qgdpexp(r) = sum{g,GDPEX, contGDPEXP(r,g)};
   5684    
   5685   ! GDP (Income-side) decomposition  !
   5686   Set
   5687       GDPIN # income-side GDP # = ENDW_COMM + "IndTaxes";
   5688   Set
   5689       CONTGDPIN # Components of income-side GDP changes # = GDPIN + "TechChange";
   5690   Set
   5691       CONTGDPIN2 # income-side GDP #
   5692           = "Land" + NAEZ_COMM + "IndTaxes" + "TechChange";
   5693    
   5694   Variable (change) (all,r,REG)(all,e,CONTGDPIN)
   5695       contGDPINC(r,e) # contributions to % change in qgdp #;
   5696   Equation E_contGDPINC
   5697   # (income-side) contributions to % change in real gdp #
   5698   (all,r,REG)(all,g,CONTGDPIN)
   5699       BGDP(r) * contGDPINC(r,g)
   5700           = IF[g in ENDW_COMM, sum{a,PROD_COMM, EVFA(g,a,r) *qfe(g,a,r)}]
   5701           + IF[g="IndTaxes",
   5702                   sum{a,PROD_COMM, PTAX(a,r) * qo(a,r)}
   5703                 + sum{c,TRAD_COMM, sum{a,PROD_COMM, DFTAX(c,a,r) * qfd(c,a,r)
   5704                                                   + IFTAX(c,a,r) * qfm(c,a,r)}}
   5705                 + sum{c,TRAD_COMM, DPTAX(c,r) * qpd(c,r) + IPTAX(c,r) * qpm(c,r)}
   5706                 + sum{c,TRAD_COMM, DGTAX(c,r) * qgd(c,r) + IGTAX(c,r) * qgm(c,r)}
   5707                 + sum{c,TRAD_COMM, sum{d,REG, XTAXD(c,r,d) * qxs(c,r,d)}}
   5708                 + sum{c,TRAD_COMM, sum{s,REG, MTAX(c,s,r)  * qxs(c,s,r)}}
   5709               ]
   5710           + IF[g="TechChange",
   5711                   sum{a,PROD_COMM, VOA(a,r) * ao(a,r)}
   5712                 + sum{e,ENDW_COMM, sum{a,PROD_COMM, VFA(e,a,r) * afe(e,a,r)}}
   5713                 + sum{a,PROD_COMM, VVA(a,r) * ava(a,r)}
   5714                 + sum{c,TRAD_COMM, sum{a,PROD_COMM,
   5715                           [VIFA(c,a,r) + VDFA(c,a,r)] * af(c,a,r)}}
   5716                 + sum{m,MARG_COMM, sum{c,TRAD_COMM, sum{s,REG,
   5717                           VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   5718                 + sum{c,TRAD_COMM, sum{s,REG, VIMS(c,s,r) * ams(c,s,r)}}
   5719               ];
   5720    
   5721   Variable (change)(all,r,REG)(all,e,CONTGDPIN2)
   5722       contGDPINC2(r,e) # contributions to income side real GDP (1 land) #;
   5723   Equation E_contGDPINC2
   5724   # (income-side) contributions to % change in real gdp #
   5725   (all,r,REG)(all,g,CONTGDPIN2)
   5726      BGDP(r) * contGDPINC2(r,g)
   5727           = IF[g="land",          sum{e,AEZ_COMM, sum{a,PROD_COMM, EVFA(e,a,r) *qfe(e,a,r)}}]
   5728           + IF[g in NAEZ_COMM,    sum{e,NAEZ_COMM, sum{a,PROD_COMM, EVFA(g,a,r) *qfe(g,a,r)}}]
   5729           + IF[g="IndTaxes",
   5730                   sum{a,NSAV_COMM, PTAX(a,r) * qo(a,r)}
   5731                 + sum{c,TRAD_COMM, sum{a,PROD_COMM, DFTAX(c,a,r) * qfd(c,a,r)
   5732                                                   + IFTAX(c,a,r) * qfm(c,a,r)}}
   5733                 + sum{c,TRAD_COMM, DPTAX(c,r) * qpd(c,r) + IPTAX(c,r) * qpm(c,r)}
   5734                 + sum{c,TRAD_COMM, DGTAX(c,r) * qgd(c,r) + IGTAX(c,r) * qgm(c,r)}
   5735                 + sum{c,TRAD_COMM, sum{d,REG, XTAXD(c,r,d) * qxs(c,r,d)}}
   5736                 + sum{c,TRAD_COMM, sum{s,REG, MTAX(c,s,r)  * qxs(c,s,r)}}
   5737               ]
   5738           + IF[g="TechChange",
   5739                   sum{a,PROD_COMM, VOA(a,r) * ao(a,r)}
   5740                 + sum{e,ENDW_COMM, sum{a,PROD_COMM, VFA(e,a,r) * afe(e,a,r)}}
   5741                 + sum{a,PROD_COMM, VVA(a,r) * ava(a,r)}
   5742                 + sum{c,TRAD_COMM, sum{a,PROD_COMM,
   5743                           [VIFA(c,a,r) + VDFA(c,a,r)] * af(c,a,r)}}
   5744                 + sum{m,MARG_COMM, sum{c,TRAD_COMM, sum{s,REG,
   5745                           VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   5746                 + sum{c,TRAD_COMM, sum{s,REG, VIMS(c,s,r) * ams(c,s,r)}}
   5747               ];
   5748    
   5749   Variable (change)(all,r,REG)
   5750       qgdpinc(r) # GDP (income side) quantity index #;
   5751   Equation E_qgdpinc
   5752   # GDP (income side) quantity index #
   5753   (all,r,REG)
   5754       qgdpinc(r) = sum{g,CONTGDPIN, contGDPINC(r,g)};
   5755    
   5756   Variable (all,r,REG)
   5757       qgdpdiff(r) # check that decomposed qgdp adds up #;
   5758   Equation E_qgdpdiff
   5759   # check that decomposed qgdp adds up: must by tiny #
   5760   (all,r,REG)
   5761       qgdpdiff(r) = sum{e,GDPIN, contGDPINC(r,e)}  - sum{e,GDPEX, contGDPEXP(r,e)} ;
   5762    
   5763   ! GDP (GVA-industry) decomposition  !
   5764   Set
   5765       ACTS # Activities # = PROD_COMM - CGDS_COMM;
   5766   Set
   5767       GDPVA # income-side GDP # = ACTS + "IndTaxes";
   5768   Set
   5769       CONTGVA # Components of GVA changes # = GDPVA + "TechChange";
   5770    
   5771   Variable (change) (all,r,REG)(all,e,CONTGVA)
   5772       contGDPGVA(r,e) # contributions to % change in industry GDP #;
   5773   Equation E_contGDPGVA
   5774   # (income-side) contributions to % change in real gdp #
   5775   (all,r,REG)(all,g,CONTGVA)
   5776       BGDP(r) * contGDPGVA(r,g)
   5777           = IF[g in ACTS, sum{e,ENDW_COMM, EVFA(e,g,r) * qfe(e,g,r)}]
   5778           + IF[g="IndTaxes",
   5779                   sum{a,PROD_COMM, PTAX(a,r) * qo(a,r)}
   5780                 + sum{c,TRAD_COMM, sum{a,PROD_COMM, DFTAX(c,a,r) * qfd(c,a,r)
   5781                                                   + IFTAX(c,a,r) * qfm(c,a,r)}}
   5782                 + sum{c,TRAD_COMM, DPTAX(c,r) * qpd(c,r) + IPTAX(c,r) * qpm(c,r)}
   5783                 + sum{c,TRAD_COMM, DGTAX(c,r) * qgd(c,r) + IGTAX(c,r) * qgm(c,r)}
   5784                 + sum{c,TRAD_COMM, sum{d,REG, XTAXD(c,r,d) * qxs(c,r,d)}}
   5785                 + sum{c,TRAD_COMM, sum{s,REG, MTAX(c,s,r)  * qxs(c,s,r)}}
   5786               ]
   5787           + IF[g="TechChange",
   5788                   sum{a,PROD_COMM, VOA(a,r) * ao(a,r)}
   5789                 + sum{e,ENDW_COMM, sum{a,PROD_COMM, VFA(e,a,r) * afe(e,a,r)}}
   5790                 + sum{a,PROD_COMM, VVA(a,r) * ava(a,r)}
   5791                 + sum{c,TRAD_COMM, sum{a,PROD_COMM,
   5792                           [VIFA(c,a,r) + VDFA(c,a,r)] * af(c,a,r)}}
   5793                 + sum{m,MARG_COMM, sum{c,TRAD_COMM, sum{s,REG,
   5794                           VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   5795                 + sum{c,TRAD_COMM, sum{s,REG, VIMS(c,s,r) * ams(c,s,r)}}
   5796               ];
   5797    
   5798   Variable (change)(all,r,REG)
   5799       qgdpind(r) # GDP quantity index by industry #;
   5800   Equation E_qgdpind
   5801   # GDP (income side) quantity index #
   5802   (all,r,REG)
   5803       qgdpind(r) = sum{g,CONTGVA, contGDPGVA(r,g)};
   5804    
   5805   Set GDPREP (income, expend, industry);
   5806   Variable (change)(all,r,REG)(all,g,GDPREP)
   5807       qgdprep(r,g) # GDP quantity index #;
   5808   Equation E_qgdprep
   5809   # GDP quantity index #
   5810   (all,r,REG)(all,g,GDPREP)
   5811       qgdprep(r,g) = IF[g="expend",   qgdpexp(r)]
   5812                    + IF[g="income",   qgdpinc(r)]
   5813                    + IF[g="industry", qgdpind(r)];
   5814    
   5815   Set
   5816       BACT # Broad activities #
   5817       read elements from file GTAPSUPP header "BACT";
   5818   Mapping
   5819       MACT from ACTS to BACT;
   5820       read (by_elements) MACT from file GTAPSUPP header "MACT";
   5821   Mapping
   5822       MCOM from TRAD_COMM to BACT;
   5823       read (by_elements) MCOM from file GTAPSUPP header "MACT";
   5824   Set
   5825       CONTGVABACT # Components of GVA changes # = BACT + "IndTaxes" + "TechChange";
   5826    
   5827   Variable (change) (all,r,REG)(all,a,CONTGVABACT)
   5828       contGDPBACT(r,a) # contributions to % change in GDP by broard activities #;
   5829   Equation E_contGDPBACT
   5830   # contributions to % change in industry GDP #
   5831   (all,r,REG)(all,g,CONTGVABACT)
   5832       contGDPBACT(r,g) = IF[g in BACT, sum{a,ACTS:MACT(a)=g, contGDPGVA(r,a)}]
   5833                        + IF[g="IndTaxes",   contGDPGVA(r,"IndTaxes")]
   5834                        + IF[g="TechChange", contGDPGVA(r,"TechChange")];
   5835    
   5836   Variable (all,a,BACT)(all,r,REG)
   5837       qobactreg(a,r) # quantity output index by broad activities in region r #;
   5838   Equation E_qoreg
   5839   # quantity index for supply of good i in region r #
   5840   (all,a,BACT)(all,r,REG)
   5841       0 = sum{i,TRAD_COMM:MCOM(i)=a, VOM(i,r) * [qobactreg(a,r) - qo(i,r)]};
   5842    
   5843   Variable (all,a,BACT)
   5844       qobactwld(a) # global quantity output index by broad activities #;
   5845   Equation E_qobactwld
   5846   # quantity index for supply of good i in region r #
   5847   (all,a,BACT)
   5848       0 = sum{i,TRAD_COMM:MCOM(i)=a, sum{r,REG, VOM(i,r) * [qobactwld(a) - qo(i,r)]}};
   5849    
   5850    
   5851   !<
   5852       ---------------------------------------
   5853       Additional codes for revenue neutrality
   5854       ---------------------------------------
   5855   >!
   5856    
   5857   Set
   5858       AEZ_REVN # Land categories under revenue neutral scenario #
   5859       read elements from file GTAPSUPP header "AEZR";
   5860   Subset
   5861       AEZ_REVN is subset of AEZ_COMM;
   5862   Set
   5863       PROD_REVN # Activities under revenue neutral scenario #
   5864       read elements from file GTAPSUPP header "PRDR";
   5865   Subset
   5866       PROD_REVN is subset of PROD_COMM;
   5867   Set
   5868       ENDW_X_REVN # Endowments not subject to revenue neutral scenario #
   5869       = ENDW_COMM - AEZ_REVN;
   5870   Set
   5871       PROD_X_REVN # Endowments not subject to revenue neutral scenario #
   5872       = PROD_COMM - PROD_REVN;
   5873    
   5874   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5875       tfijr(i,j,r) # tax shifter on primary factor i used by j in region r #;
   5876   Variable (all,r,REG)
   5877       tfreg(r) # Revenue-neutral shifter on primary factor use in region r #;
   5878   Equation E_tf
   5879   # tax shifter on primary factor i used by j in region r #
   5880   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5881       tf(i,j,r) = IF[i in AEZ_REVN,    IF[j in PROD_REVN,  tfijr(i,j,r) + tfreg(r)]]
   5882                 + IF[i in ENDW_X_REVN, IF[j in PROD_X_REVN, tfijr(i,j,r)]];
   5883    
   5884   zerodivide default 0.0;
   5885   Coefficient (all,i,NSAV_COMM)(all,r,REG)
   5886       rTO(i,r) # output tax rate #;
   5887   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5888       rTFD(i,j,r) # tax on domestic i purchased by j in r #;
   5889   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5890       rTFM(i,j,r) # tax on imported i purchased by j in r #;
   5891   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5892       rTF(i,j,r) # tax rate on factor use by firms#;
   5893    
   5894   Coefficient (all,i,NSAV_COMM)(all,r,REG)
   5895       dTO(i,r) # output tax collection #;
   5896   Coefficient  (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5897       dTFD(i,j,r) # tax on domestic i purchased by j in r #;
   5898   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5899       dTFM(i,j,r) # tax on imported i purchased by j in r #;
   5900   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5901       dTF(i,j,r) # tax collection on factor use by firms#;
   5902    
   5903   Formula (all,i,NSAV_COMM)(all,r,REG)
   5904       rTO(i,r) = IF[VOA(i,r)>0 and VOM(i,r)>0, 100*[VOA(i,r)/VOM(i,r)-1]];
   5905   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5906       rTFD(i,j,r) = IF[VDFA(i,j,r)>0 and VDFM(i,j,r)>0, 100*[VDFA(i,j,r)/VDFM(i,j,r) - 1]];
   5907   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5908       rTFM(i,j,r) = IF[VIFA(i,j,r)>0 and VIFM(i,j,r)>0, 100*[VIFA(i,j,r)/VIFM(i,j,r) - 1]];
   5909   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5910       rTF(i,j,r)  = 100*{[VFA(i,j,r)/VFM(i,j,r)]-1};
   5911    
   5912   Formula (all,i,NSAV_COMM)(all,r,REG)
   5913       dTO(i,r) =VOA(i,r) - VOM(i,r);
   5914   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   5915       dTF(i,j,r) = VFA(i,j,r) - VFM(i,j,r);
   5916   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5917       dTFD(i,j,r) = VDFA(i,j,r) - VDFM(i,j,r);
   5918   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   5919       dTFM(i,j,r) = VIFA(i,j,r) - VIFM(i,j,r);
   5920    
   5921    
   5922   Write
   5923    VDFA to file GTAPSUM header "rVDA";
   5924    (postsim)VDFA to file GTAPSUM header "sVDA";
   5925    VDFM to file GTAPSUM header "rVDM";
   5926    (postsim)VDFM to file GTAPSUM header "sVDM";
   5927    VIFA to file GTAPSUM header "rVIA";
   5928    (postsim)VIFA to file GTAPSUM header "sVIA";
   5929    VIFM to file GTAPSUM header "rVIM";
   5930    (postsim)VIFM to file GTAPSUM header "sVIM";
   5931    VOA to file GTAPSUM header "rVOA";
   5932    (postsim)VOA to file GTAPSUM header "sVOA";
   5933    VOM to file GTAPSUM header "rVOM";
   5934    (postsim)VOM to file GTAPSUM header "sVOM";
   5935    rTO to file GTAPSUM header "rTO";
   5936    (postsim)rTO to file GTAPSUM header "sTO";
   5937    rTF to file GTAPSUM header "rTF";
   5938    (postsim)rTF to file GTAPSUM header "sTF";
   5939    rTFD to file GTAPSUM header "rTFD";
   5940    (postsim)rTFD to file GTAPSUM header "sTFD";
   5941    rTFM to file GTAPSUM header "rTFM";
   5942    (postsim)rTFM to file GTAPSUM header "sTFM";
   5943    dTO to file GTAPSUM header "dTO";
   5944    (postsim)dTO to file GTAPSUM header "eTO";
   5945    dTF to file GTAPSUM header "dTF";
   5946    (postsim)dTF to file GTAPSUM header "eTF";
   5947    dTFD to file GTAPSUM header "dTFD";
   5948    (postsim)dTFD to file GTAPSUM header "eTFD";
   5949    dTFM to file GTAPSUM header "dTFM";
   5950    (postsim)dTFM to file GTAPSUM header "eTFM";
   5951    INCOME to file GTAPSUM header "INC";
   5952    (postsim) INCOME to file GTAPSUM header "UINC";
   5953    (postsim)to to file GTAPSUM header "to";
   5954    (postsim)tfd to file GTAPSUM header "tfd";
   5955    (postsim)tfm to file GTAPSUM header "tfm";
   5956    (postsim)tf to file GTAPSUM header "tf";
   5957    
   5958    
   5959   !<
   5960       ---------------------------------------------
   5961       END: Add'l codes for revenue neutral scenario
   5962       ---------------------------------------------
   5963   >!
   5964    
   5965    
   5966   !<
   5967       ----------------------------------------
   5968       Additional codes for reporting variables
   5969       ----------------------------------------
   5970   >!
   5971   !**** industry output at world prices ****!
   5972   Variable (levels) (all,i,TRAD_COMM)(all,r,REG)
   5973       qow_r(i,r) # industry output of commodity i in region r valued at world prices #;
   5974   Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   5975       qow_r(i,r) = VOW(i,r);
   5976   Equation E_qow_r (all,i,TRAD_COMM)(all,r,REG)
   5977       p_qow_r(i,r) = qo(i,r);
   5978    
   5979   Variable (levels) (all,r,REG)
   5980       qow_cropout(r) # industry real crop output in region r (in M USD, at world prices)#;
   5981       Formula&Equation E_qow_crops (all,r,REG)
   5982       qow_cropout(r) =  qow_r("paddyrice",r) + qow_r("wheat",r) + qow_r("crsgrns",r)
   5983                   + qow_r("fruitveg",r) + qow_r("oilsds",r) + qow_r("sugarcrps",r)
   5984                   + qow_r("cotton",r) + qow_r("othercrps",r);
       !  EQUATION(LINEAR) E_qow_crops
          (ALL,r,REG) qow_cropout(r) * p_qow_cropout(r) = qow_r("paddyrice",r)

           * p_qow_r("paddyrice",r) + qow_r("wheat",r) * p_qow_r("wheat",r) + 

          qow_r("crsgrns",r) * p_qow_r("crsgrns",r) + qow_r("fruitveg",r) * 

          p_qow_r("fruitveg",r) + qow_r("oilsds",r) * p_qow_r("oilsds",r) + 

          qow_r("sugarcrps",r) * p_qow_r("sugarcrps",r) + qow_r("cotton",r) * 

          p_qow_r("cotton",r) + qow_r("othercrps",r) * p_qow_r("othercrps",r)

           ;  ! 

   5985    
   5986   Variable (levels) (all,r,REG)
   5987       qow_pdyrice(r) # industry real paddyrice output in region r (in M USD, at world prices)#;
   5988       Formula&Equation E_qow_paddyrice (all,r,REG)
   5989       qow_pdyrice(r) =  qow_r("paddyrice",r);
       !  EQUATION(LINEAR) E_qow_paddyrice
          (ALL,r,REG) p_qow_pdyrice(r) = p_qow_r("paddyrice",r) ;  ! 

   5990    
   5991   Variable (levels) (all,r,REG)
   5992       qow_wheat(r) # industry real wheat output in region r (in M USD, at world prices)#;
   5993       Formula&Equation E_qow_wheat (all,r,REG)
   5994       qow_wheat(r) =  qow_r("wheat",r);
       !  EQUATION(LINEAR) E_qow_wheat
          (ALL,r,REG) p_qow_wheat(r) = p_qow_r("wheat",r) ;  ! 

   5995    
   5996   Variable (levels) (all,r,REG)
   5997       qow_crsgrns(r) # industry real crsgrns output in region r (in M USD, at world prices)#;
   5998       Formula&Equation E_qow_crsgrns (all,r,REG)
   5999       qow_crsgrns(r) =  qow_r("crsgrns",r);
       !  EQUATION(LINEAR) E_qow_crsgrns
          (ALL,r,REG) p_qow_crsgrns(r) = p_qow_r("crsgrns",r) ;  ! 

   6000    
   6001   Variable (levels) (all,r,REG)
   6002       qow_fruitveg(r) # industry real fruitveg output in region r (in M USD, at world prices)#;
   6003       Formula&Equation E_qow_fruitveg (all,r,REG)
   6004       qow_fruitveg(r) =  qow_r("fruitveg",r);
       !  EQUATION(LINEAR) E_qow_fruitveg
          (ALL,r,REG) p_qow_fruitveg(r) = p_qow_r("fruitveg",r) ;  ! 

   6005    
   6006   Variable (levels) (all,r,REG)
   6007       qow_oilsds(r) # industry real oilsds output in region r (in M USD, at world prices)#;
   6008       Formula&Equation E_qow_oilsds (all,r,REG)
   6009       qow_oilsds(r) =  qow_r("oilsds",r);
       !  EQUATION(LINEAR) E_qow_oilsds
          (ALL,r,REG) p_qow_oilsds(r) = p_qow_r("oilsds",r) ;  ! 

   6010    
   6011   Variable (levels) (all,r,REG)
   6012       qow_sugarcrp(r) # industry real sugarcrps output in region r (in M USD, at world prices)#;
   6013       Formula&Equation E_qow_sugarcrps (all,r,REG)
   6014       qow_sugarcrp(r) =  qow_r("sugarcrps",r);
       !  EQUATION(LINEAR) E_qow_sugarcrps
          (ALL,r,REG) p_qow_sugarcrp(r) = p_qow_r("sugarcrps",r) ;  ! 

   6015    
   6016   Variable (levels) (all,r,REG)
   6017       qow_cotton(r) # industry real cotton output in region r (in M USD, at world prices)#;
   6018       Formula&Equation E_qow_cotton (all,r,REG)
   6019       qow_cotton(r) =  qow_r("cotton",r);
       !  EQUATION(LINEAR) E_qow_cotton
          (ALL,r,REG) p_qow_cotton(r) = p_qow_r("cotton",r) ;  ! 

   6020    
   6021   Variable (levels) (all,r,REG)
   6022       qow_liveout(r) # industry real livestock output in region r (in M USD, at world prices)#;
   6023       Formula&Equation E_qow_liveout (all,r,REG)
   6024       qow_liveout(r) =  qow_r("ruminant",r) + qow_r("nonruminant",r);
       !  EQUATION(LINEAR) E_qow_liveout
          (ALL,r,REG) qow_liveout(r) * p_qow_liveout(r) = qow_r("ruminant",r)

           * p_qow_r("ruminant",r) + qow_r("nonruminant",r) * 

          p_qow_r("nonruminant",r) ;  ! 

   6025    
   6026   Variable (levels) (all,r,REG)
   6027       qow_fishout(r) # industry real fishery output in region r (in M USD, at world prices)#;
   6028       Formula&Equation E_qow_fishout (all,r,REG)
   6029       qow_fishout(r) =  qow_r("fishery",r) ;
       !  EQUATION(LINEAR) E_qow_fishout
          (ALL,r,REG) p_qow_fishout(r) = p_qow_r("fishery",r) ;  ! 

   6030    
   6031   Variable (levels) (all,r,REG)
   6032       qow_forsout(r) # industry real forest output in region r (in M USD, at world prices)#;
   6033       Formula&Equation E_qow_forsout (all,r,REG)
   6034       qow_forsout(r) =  qow_r("forestsec",r);
       !  EQUATION(LINEAR) E_qow_forsout
          (ALL,r,REG) p_qow_forsout(r) = p_qow_r("forestsec",r) ;  ! 

   6035    
   6036   Variable (levels) (all,r,REG)
   6037       qow_agforout(r) # industry real agri + forestry output in region r (in M USD, at world prices)#;
   6038       Formula&Equation E_qow_agforout (all,r,REG)
   6039       qow_agforout(r) =  qow_cropout(r) + qow_liveout(r) + qow_fishout(r);
       !  EQUATION(LINEAR) E_qow_agforout
          (ALL,r,REG) qow_agforout(r) * p_qow_agforout(r) = qow_cropout(r) * 

          p_qow_cropout(r) + qow_liveout(r) * p_qow_liveout(r) + qow_fishout(r)

           * p_qow_fishout(r) ;  ! 

   6040    
   6041   Variable (levels) (all,r,REG)
   6042       qow_mnfc(r) # industry real nres+mnfcs output in region r (in M USD, at world prices)#;
   6043       Formula&Equation E_qow_mnfc (all,r,REG)
   6044       qow_mnfc(r) =  qow_r("NRes",r) + qow_r("Mnfcing",r) + qow_r("PrFood",r) + qow_r("PrLstk",r);
       !  EQUATION(LINEAR) E_qow_mnfc
          (ALL,r,REG) qow_mnfc(r) * p_qow_mnfc(r) = qow_r("NRes",r) * 

          p_qow_r("NRes",r) + qow_r("Mnfcing",r) * p_qow_r("Mnfcing",r) + 

          qow_r("PrFood",r) * p_qow_r("PrFood",r) + qow_r("PrLstk",r) * 

          p_qow_r("PrLstk",r) ;  ! 

   6045    
   6046   Variable (levels) (all,r,REG)
   6047       qow_serv(r) # industry real services output in region r (in M USD, at world prices)#;
   6048       Formula&Equation E_qow_serv (all,r,REG)
   6049       qow_serv(r) =  qow_r("Services",r);
       !  EQUATION(LINEAR) E_qow_serv
          (ALL,r,REG) p_qow_serv(r) = p_qow_r("Services",r) ;  ! 

   6050    
   6051   !**** aggregate exports at FOB prices ****!
   6052    
   6053   Variable (levels) (all,i,TRAD_COMM)(all,r,REG)
   6054       qxw_r(i,r) # aggregate export of commodity i in region r valued at world prices #;
   6055   Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   6056       qxw_r(i,r) = VXW(i,r);
   6057   Equation E_qxw_r (all,i,TRAD_COMM)(all,r,REG)
   6058       p_qxw_r(i,r) = qxw(i,r);
   6059    
   6060   Variable (levels) (all,r,REG)
   6061       qxw_cropout(r) # aggregate export crop in region r (in M USD, at world prices)#;
   6062       Formula&Equation E_qxw_crops (all,r,REG)
   6063       qxw_cropout(r) =  qxw_r("paddyrice",r) + qxw_r("wheat",r) + qxw_r("crsgrns",r)
   6064                   + qxw_r("fruitveg",r) + qxw_r("oilsds",r) + qxw_r("sugarcrps",r)
   6065                   + qxw_r("cotton",r) + qxw_r("othercrps",r);
       !  EQUATION(LINEAR) E_qxw_crops
          (ALL,r,REG) qxw_cropout(r) * p_qxw_cropout(r) = qxw_r("paddyrice",r)

           * p_qxw_r("paddyrice",r) + qxw_r("wheat",r) * p_qxw_r("wheat",r) + 

          qxw_r("crsgrns",r) * p_qxw_r("crsgrns",r) + qxw_r("fruitveg",r) * 

          p_qxw_r("fruitveg",r) + qxw_r("oilsds",r) * p_qxw_r("oilsds",r) + 

          qxw_r("sugarcrps",r) * p_qxw_r("sugarcrps",r) + qxw_r("cotton",r) * 

          p_qxw_r("cotton",r) + qxw_r("othercrps",r) * p_qxw_r("othercrps",r)

           ;  ! 

   6066    
   6067   Variable (levels) (all,r,REG)
   6068       qxw_pdyrice(r) # aggregate export paddyrice in region r (in M USD, at world prices)#;
   6069       Formula&Equation E_qxw_paddyrice (all,r,REG)
   6070       qxw_pdyrice(r) =  qxw_r("paddyrice",r);
       !  EQUATION(LINEAR) E_qxw_paddyrice
          (ALL,r,REG) p_qxw_pdyrice(r) = p_qxw_r("paddyrice",r) ;  ! 

   6071    
   6072   Variable (levels) (all,r,REG)
   6073       qxw_wheat(r) # aggregate export wheat in region r (in M USD, at world prices)#;
   6074       Formula&Equation E_qxw_wheat (all,r,REG)
   6075       qxw_wheat(r) =  qxw_r("wheat",r);
       !  EQUATION(LINEAR) E_qxw_wheat
          (ALL,r,REG) p_qxw_wheat(r) = p_qxw_r("wheat",r) ;  ! 

   6076    
   6077   Variable (levels) (all,r,REG)
   6078       qxw_crsgrns(r) # aggregate export crsgrns in region r (in M USD, at world prices)#;
   6079       Formula&Equation E_qxw_crsgrns (all,r,REG)
   6080       qxw_crsgrns(r) =  qxw_r("crsgrns",r);
       !  EQUATION(LINEAR) E_qxw_crsgrns
          (ALL,r,REG) p_qxw_crsgrns(r) = p_qxw_r("crsgrns",r) ;  ! 

   6081    
   6082   Variable (levels) (all,r,REG)
   6083       qxw_fruitveg(r) # aggregate export fruitveg in region r (in M USD, at world prices)#;
   6084       Formula&Equation E_qxw_fruitveg (all,r,REG)
   6085       qxw_fruitveg(r) =  qxw_r("fruitveg",r);
       !  EQUATION(LINEAR) E_qxw_fruitveg
          (ALL,r,REG) p_qxw_fruitveg(r) = p_qxw_r("fruitveg",r) ;  ! 

   6086    
   6087   Variable (levels) (all,r,REG)
   6088       qxw_oilsds(r) # aggregate export oilsds in region r (in M USD, at world prices)#;
   6089       Formula&Equation E_qxw_oilsds (all,r,REG)
   6090       qxw_oilsds(r) =  qxw_r("oilsds",r);
       !  EQUATION(LINEAR) E_qxw_oilsds
          (ALL,r,REG) p_qxw_oilsds(r) = p_qxw_r("oilsds",r) ;  ! 

   6091    
   6092   Variable (levels) (all,r,REG)
   6093       qxw_sugarcrp(r) # aggregate export sugarcrps in region r (in M USD, at world prices)#;
   6094       Formula&Equation E_qxw_sugarcrps (all,r,REG)
   6095       qxw_sugarcrp(r) =  qxw_r("sugarcrps",r);
       !  EQUATION(LINEAR) E_qxw_sugarcrps
          (ALL,r,REG) p_qxw_sugarcrp(r) = p_qxw_r("sugarcrps",r) ;  ! 

   6096    
   6097   Variable (levels) (all,r,REG)
   6098       qxw_cotton(r) # aggregate export cotton in region r (in M USD, at world prices)#;
   6099       Formula&Equation E_qxw_cotton (all,r,REG)
   6100       qxw_cotton(r) =  qxw_r("cotton",r);
       !  EQUATION(LINEAR) E_qxw_cotton
          (ALL,r,REG) p_qxw_cotton(r) = p_qxw_r("cotton",r) ;  ! 

   6101    
   6102   Variable (levels) (all,r,REG)
   6103       qxw_liveout(r) # aggregate export livestock in region r (in M USD, at world prices)#;
   6104       Formula&Equation E_qxw_liveout (all,r,REG)
   6105       qxw_liveout(r) =  qxw_r("ruminant",r) + qxw_r("nonruminant",r);
       !  EQUATION(LINEAR) E_qxw_liveout
          (ALL,r,REG) qxw_liveout(r) * p_qxw_liveout(r) = qxw_r("ruminant",r)

           * p_qxw_r("ruminant",r) + qxw_r("nonruminant",r) * 

          p_qxw_r("nonruminant",r) ;  ! 

   6106    
   6107   Variable (levels) (all,r,REG)
   6108       qxw_fishout(r) # aggregate export fishery in region r (in M USD, at world prices)#;
   6109       Formula&Equation E_qxw_fishout (all,r,REG)
   6110       qxw_fishout(r) =  qxw_r("fishery",r) ;
       !  EQUATION(LINEAR) E_qxw_fishout
          (ALL,r,REG) p_qxw_fishout(r) = p_qxw_r("fishery",r) ;  ! 

   6111    
   6112   Variable (levels) (all,r,REG)
   6113       qxw_forsout(r) # aggregate export forest in region r (in M USD, at world prices)#;
   6114       Formula&Equation E_qxw_forsout (all,r,REG)
   6115       qxw_forsout(r) =  qxw_r("forestsec",r);
       !  EQUATION(LINEAR) E_qxw_forsout
          (ALL,r,REG) p_qxw_forsout(r) = p_qxw_r("forestsec",r) ;  ! 

   6116    
   6117   Variable (levels) (all,r,REG)
   6118       qxw_agforout(r) # aggregate export agri + forestry in region r (in M USD, at world prices)#;
   6119       Formula&Equation E_qxw_agforout (all,r,REG)
   6120       qxw_agforout(r) =  qxw_cropout(r) + qxw_liveout(r) + qxw_fishout(r);
       !  EQUATION(LINEAR) E_qxw_agforout
          (ALL,r,REG) qxw_agforout(r) * p_qxw_agforout(r) = qxw_cropout(r) * 

          p_qxw_cropout(r) + qxw_liveout(r) * p_qxw_liveout(r) + qxw_fishout(r)

           * p_qxw_fishout(r) ;  ! 

   6121    
   6122   Variable (levels) (all,r,REG)
   6123       qxw_mnfc(r) # aggregate export nres+mnfcs in region r (in M USD, at world prices)#;
   6124       Formula&Equation E_qxw_mnfc (all,r,REG)
   6125       qxw_mnfc(r) =  qxw_r("NRes",r) + qxw_r("Mnfcing",r) + qxw_r("PrFood",r) + qxw_r("PrLstk",r);
       !  EQUATION(LINEAR) E_qxw_mnfc
          (ALL,r,REG) qxw_mnfc(r) * p_qxw_mnfc(r) = qxw_r("NRes",r) * 

          p_qxw_r("NRes",r) + qxw_r("Mnfcing",r) * p_qxw_r("Mnfcing",r) + 

          qxw_r("PrFood",r) * p_qxw_r("PrFood",r) + qxw_r("PrLstk",r) * 

          p_qxw_r("PrLstk",r) ;  ! 

   6126    
   6127   Variable (levels) (all,r,REG)
   6128       qxw_serv(r) # aggregate export services in region r (in M USD, at world prices)#;
   6129       Formula&Equation E_qxw_serv (all,r,REG)
   6130       qxw_serv(r) =  qxw_r("Services",r);
       !  EQUATION(LINEAR) E_qxw_serv
          (ALL,r,REG) p_qxw_serv(r) = p_qxw_r("Services",r) ;  ! 

   6131    
   6132   !**** crop output in metric tonne ****!
   6133    
   6134   Variable (levels) (all,r,REG)
   6135       qmt_pdyrice(r) # paddyrice output in region r (in MTs)#;
   6136       Formula&Equation E_qmt_paddyrice (all,r,REG)
   6137       qmt_pdyrice(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"paddyrice",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_paddyrice
          (ALL,r,REG) qmt_pdyrice(r) * p_qmt_pdyrice(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"paddyrice",r) * p_PRODUCTION(i,"paddyrice",r)) ;  ! 

   6138    
   6139   Variable (levels) (all,r,REG)
   6140       qmt_wheat(r) # wheat output in region r (in MTs)#;
   6141       Formula&Equation E_qmt_wheat (all,r,REG)
   6142       qmt_wheat(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"wheat",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_wheat
          (ALL,r,REG) qmt_wheat(r) * p_qmt_wheat(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"wheat",r) * p_PRODUCTION(i,"wheat",r)) ;  ! 

   6143    
   6144   Variable (levels) (all,r,REG)
   6145       qmt_crsgrns(r) # crsgrns output in region r (in MTs)#;
   6146       Formula&Equation E_qmt_crsgrns (all,r,REG)
   6147       qmt_crsgrns(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"crsgrns",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_crsgrns
          (ALL,r,REG) qmt_crsgrns(r) * p_qmt_crsgrns(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"crsgrns",r) * p_PRODUCTION(i,"crsgrns",r)) ;  ! 

   6148    
   6149   Variable (levels) (all,r,REG)
   6150       qmt_fruitveg(r) # fruitveg output in region r (in MTs)#;
   6151       Formula&Equation E_qmt_fruitveg (all,r,REG)
   6152       qmt_fruitveg(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"fruitveg",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_fruitveg
          (ALL,r,REG) qmt_fruitveg(r) * p_qmt_fruitveg(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"fruitveg",r) * p_PRODUCTION(i,"fruitveg",r)) ;  ! 

   6153    
   6154   Variable (levels) (all,r,REG)
   6155       qmt_oilsds(r) # oilsds output in region r (in MTs)#;
   6156       Formula&Equation E_qmt_oilsds (all,r,REG)
   6157       qmt_oilsds(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"oilsds",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_oilsds
          (ALL,r,REG) qmt_oilsds(r) * p_qmt_oilsds(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"oilsds",r) * p_PRODUCTION(i,"oilsds",r)) ;  ! 

   6158    
   6159   Variable (levels) (all,r,REG)
   6160       qmt_sugarcrp(r) # sugarcrps output in region r (in MTs)#;
   6161       Formula&Equation E_qmt_sugarcrps (all,r,REG)
   6162       qmt_sugarcrp(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"sugarcrps",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_sugarcrps
          (ALL,r,REG) qmt_sugarcrp(r) * p_qmt_sugarcrp(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"sugarcrps",r) * p_PRODUCTION(i,"sugarcrps",r)) ;  ! 

   6163    
   6164   Variable (levels) (all,r,REG)
   6165       qmt_cotton(r) # cotton output in region r (in MTs)#;
   6166       Formula&Equation E_qmt_cotton (all,r,REG)
   6167       qmt_cotton(r) =  sum(i, AEZ_COMM, PRODUCTION(i,"cotton",r)) + 0.0001;
       !  EQUATION(LINEAR) E_qmt_cotton
          (ALL,r,REG) qmt_cotton(r) * p_qmt_cotton(r) = SUM(i,AEZ_COMM,

          PRODUCTION(i,"cotton",r) * p_PRODUCTION(i,"cotton",r)) ;  ! 

   6168    
   6169   !**** other reporting variables ****!
   6170    
   6171   Variable (all,r,REG)(orig_level=1) pfactrl_land(r)
   6172   # real rate of return land i in region r #;
   6173   Equation E_REALRETURN_LND (all,r,REG)
   6174   pfactrl_land(r) =
   6175   sum(i, AEZ_COMM, [VOA(i,r) / sum(s , AEZ_COMM, VOA(s,r))] * pfactreal(i,r));
   6176    
   6177   Variable (all,r,REG)(orig_level=1) pfactrl_sklab(r)
   6178   # real rate of skilled labor in region r #;
   6179   Equation E_REALRETURN_SKLAB (all,r,REG)
   6180   pfactrl_sklab(r) = pfactreal("SkLab",r);
   6181    
   6182   Variable (all,r,REG)(orig_level=1) pfactrl_usklab(r)
   6183   # real rate of unskilled labor in region r #;
   6184   Equation E_REALRETURN_USKLAB (all,r,REG)
   6185   pfactrl_usklab(r) = pfactreal("UnSkLab",r);
   6186    
   6187   Variable (all,r,REG)(orig_level=1) pfactrl_cap(r)
   6188   # real rate of capital in region r #;
   6189   Equation E_REALRETURN_CAP (all,r,REG)
   6190   pfactrl_cap(r) = pfactreal("Capital",r);
   6191    
   6192   Variable (levels) (all,r,REG) lc_cropland(r)
   6193   # cropland cover in region r (in hectares) #;
   6194   Formula&Equation E_LC_CROPLAND (all,r,REG)
   6195   lc_cropland(r) = LANDCOVER_R("CROPLAND",r);
       !  EQUATION(LINEAR) E_LC_CROPLAND
          (ALL,r,REG) p_lc_cropland(r) = p_LANDCOVER_R("CROPLAND",r) ;  ! 

   6196    
   6197   Variable (levels) (all,r,REG) lc_mngforest(r)
   6198   # managed forest cover in region r (in hectares) #;
   6199   Formula&Equation  E_LC_MNGD_FOREST (all,r,REG)
   6200   lc_mngforest(r) = LANDCOVER_R("forestsec",r);
       !  EQUATION(LINEAR) E_LC_MNGD_FOREST
          (ALL,r,REG) p_lc_mngforest(r) = p_LANDCOVER_R("forestsec",r) ;  ! 

   6201    
   6202   Variable (levels) (all,r,REG) lc_pasture(r)
   6203   # pasture cover in region r (in hectares) #;
   6204   Formula&Equation  E_LC_PASTURE (all,r,REG)
   6205   lc_pasture(r) = LANDCOVER_R("ruminant",r);
       !  EQUATION(LINEAR) E_LC_PASTURE
          (ALL,r,REG) p_lc_pasture(r) = p_LANDCOVER_R("ruminant",r) ;  ! 

   6206    
   6207   Variable (change) (all,r,REG) lc_ntl_land(r)
   6208   # change in natural land cover in region r (in hectares) #;
   6209   Equation E_LC_NTL_LAND (all,r,REG)
   6210   lc_ntl_land(r) = p_lc_cropland(r) + p_lc_mngforest(r) + p_lc_pasture(r);
   6211    
   6212   Variable (all,r,REG)
   6213       pmallland(r) # Aggregate land returns #;
   6214   Coefficient (all,r,REG)
   6215       VFM_AEZ(r) # Total land #;
   6216   Formula (all,r,REG)
   6217       VFM_AEZ(r) = sum{i,AEZ_COMM, sum{j,PROD_COMM, VFM(i,j,r)}};
   6218    
   6219   Equation E_pmallland
   6220   # Aggregate land returns #
   6221   (all,r,REG)
   6222      pmallland(r) = sum{i,AEZ_COMM, sum{j,PROD_COMM, VFM(i,j,r)/ID01[VFM_AEZ(r)] * pmes(i,j,r)}};
   6223    
   6224   !<
   6225       ---------------------------------------------
   6226       END: Add'l codes for revenue neutral scenario
   6227       ---------------------------------------------
   6228   >!
   6229    
   6230    
   6231   !<
   6232       ---------------------
   6233       Add'l codes for taxes
   6234       ---------------------
   6235   >!
   6236    
   6237   ! Additional variables for tracking difference for VOM and VOA !
   6238   ! **** VOA **** !
   6239   Variable (levels) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) VDFA_alt(i,j,r)
   6240       # VDFA alternative #;
   6241       Formula (initial) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) VDFA_alt(i,j,r) = VDFA(i,j,r);
   6242       Equation E_VDFA_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) p_VDFA_alt(i,j,r) = pfd(i,j,r) + qfd(i,j,r);
   6243    
   6244   Variable (levels) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) VIFA_alt(i,j,r)
   6245       # VIFA alternative #;
   6246       Formula (initial) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) VIFA_alt(i,j,r) = VIFA(i,j,r);
   6247       Equation E_VIFA_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) p_VIFA_alt(i,j,r) = pfm(i,j,r) + qfm(i,j,r);
   6248    
   6249   Variable (levels) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG) EVFA_alt(i,j,r)
   6250       # EVFA alternative #;
   6251       Formula (initial) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG) EVFA_alt(i,j,r) = EVFA(i,j,r);
   6252       Equation E_EVFA_alt (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   6253       p_EVFA_alt(i,j,r) = pfe(i,j,r) + qfe(i,j,r);
   6254    
   6255   Variable (levels) (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG) VFA_alt(i,j,r)
   6256       # VFA alternative #;
   6257      Formula&Equation  E_VFA_alt_endw (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG) VFA_alt(i,j,r) = EVFA_alt(i,j,r); ! need to update evfa !
       !  EQUATION(LINEAR) E_VFA_alt_endw
          (ALL,i,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) p_VFA_alt(i,j,r) = 

          p_EVFA_alt(i,j,r) ;  ! 

   6258      Formula&Equation  E_VFA_alt_trad (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG) VFA_alt(i,j,r) = VDFA_alt(i,j,r) + VIFA_alt(i,j,r);
       !  EQUATION(LINEAR) E_VFA_alt_trad
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) VFA_alt(i,j,r) * 

          p_VFA_alt(i,j,r) = VDFA_alt(i,j,r) * p_VDFA_alt(i,j,r) + VIFA_alt(i,

          j,r) * p_VIFA_alt(i,j,r) ;  ! 

   6259    
   6260   Variable (levels) (all,i,NSAV_COMM)(all,r,REG) VOA_alt(i,r)
   6261       # EVOA alternative #  ;
   6262       Formula (initial) (all,i,ENDW_COMM)(all,r,REG)  VOA_alt(i,r) = EVOA(i,r);
   6263       Equation E_VOA_alt_endw (all,i,ENDW_COMM)(all,r,REG)
   6264          p_VOA_alt(i,r) = ps(i,r) + qo(i,r);
   6265       Formula&Equation E_VOA_alt_prod (all,i,PROD_COMM)(all,r,REG)
   6266            VOA_alt(i,r) = sum(j,DEMD_COMM, VFA_alt(j,i,r));
       !  EQUATION(LINEAR) E_VOA_alt_prod
          (ALL,i,PROD_COMM) (ALL,r,REG) VOA_alt(i,r) * p_VOA_alt(i,r) = 

          SUM(j,DEMD_COMM,VFA_alt(j,i,r) * p_VFA_alt(j,i,r)) ;  ! 

   6267    
   6268   ! **** VOM **** !
   6269       Variable (levels) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   6270          VFM_alt(i,j,r) # producer expenditure on i by j in r valued at mkt prices #;
   6271       Formula (initial) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   6272          VFM_alt(i,j,r) = VFM(i,j,r);
   6273       Equation E_VFM_alt_endwm (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   6274          p_VFM_alt(i,j,r) = pm(i,r) + qfe(i,j,r);
   6275       Equation E_VFM_alt_endws (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   6276          p_VFM_alt(i,j,r) = pmes(i,j,r) + qfe(i,j,r);
   6277    
   6278            Variable (levels)(all,i,TRAD_COMM)(all,r,REG)
   6279                   VDPM_alt(i,r) # private consumption expenditure on domestic i in r #;
   6280               Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   6281                   VDPM_alt(i,r) = VDPM(i,r);
   6282               Equation E_VDPM_alt (all,i,TRAD_COMM)(all,r,REG)
   6283                   p_VDPM_alt(i,r) = pm(i,r) + qpd(i,r);
   6284    
   6285               Variable (levels)(all,i,TRAD_COMM)(all,r,REG)
   6286                   VDGM_alt(i,r) # government consumption expenditure on domestic i in r #;
   6287               Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   6288                   VDGM_alt(i,r) = VDGM(i,r);
   6289               Equation E_VDGM_alt (all,i,TRAD_COMM)(all,r,REG)
   6290                   p_VDGM_alt(i,r) = pm(i,r) + qgd(i,r);
   6291    
   6292               Variable (levels)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6293                   VDFM_alt(i,j,r) # purchases of domestic i for use by j in region r #;
   6294               Formula (initial) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6295                   VDFM_alt(i,j,r) = VDFM(i,j,r);
   6296               Equation E_VDFM_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6297                   p_VDFM_alt(i,j,r) = pm(i,r) + qfd(i,j,r);
   6298    
   6299               Variable (levels)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6300                   VIFM_alt(i,j,r) # purchases of imports i for use by j in region r #;
   6301               Formula (initial) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6302                   VIFM_alt(i,j,r) = VIFM(i,j,r);
   6303               Equation E_VIFM_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6304                   p_VIFM_alt(i,j,r) = pim(i,r) + qfm(i,j,r);
   6305    
   6306    
   6307       Variable (levels) (all,i,TRAD_COMM)(all,r,REG)
   6308       VDM_alt(i,r) # VDM Alternative #;
   6309       Formula&Equation E_VDM_alt (all,i,TRAD_COMM)(all,r,REG)
   6310       VDM_alt(i,r) = VDPM_alt(i,r) + VDGM_alt(i,r) + sum(j,PROD_COMM, VDFM_alt(i,j,r));
       !  EQUATION(LINEAR) E_VDM_alt
          (ALL,i,TRAD_COMM) (ALL,r,REG) VDM_alt(i,r) * p_VDM_alt(i,r) = 

          VDPM_alt(i,r) * p_VDPM_alt(i,r) + VDGM_alt(i,r) * p_VDGM_alt(i,r) + 

          SUM(j,PROD_COMM,VDFM_alt(i,j,r) * p_VDFM_alt(i,j,r)) ;  ! 

   6311    
   6312   Variable (levels)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   6313       VXMD_alt(i,r,s)
   6314       # exports of i from r to s valued at mkt prices (tradeables only) #;
   6315   Formula (initial)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   6316       VXMD_alt(i,r,s) =  VXMD(i,r,s);
   6317   Equation E_VXMD_alt (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   6318       p_VXMD_alt(i,r,s) = pm(i,r) + qxs(i,r,s);
   6319    
   6320   Variable (levels)(all,m,MARG_COMM)(all,r,REG)
   6321       VST_alt(m,r) # exprts of m from r for int'l trnsport valued at mkt p (tradeables only) #;
   6322   Equation E_VST_alt (all,m,MARG_COMM)(all,r,REG)
   6323       p_VST_alt(m,r) = pm(m,r) + qst(m,r);
   6324   Formula (initial)(all,m,MARG_COMM)(all,r,REG)
   6325       VST_alt(m,r) = VST(m,r);
   6326    
   6327   Variable (levels) (all,i,NSAV_COMM)(all,r,REG)
   6328       VOM_alt(i,r) # VOM Alternative #;
   6329    
   6330   Formula&Equation E_VOM_alt_endw (all,i,ENDW_COMM)(all,r,REG)
   6331       VOM_alt(i,r) = sum(j,PROD_COMM, VFM_alt(i,j,r)) + 0.001; ! Add tiny value !
       !  EQUATION(LINEAR) E_VOM_alt_endw
          (ALL,i,ENDW_COMM) (ALL,r,REG) VOM_alt(i,r) * p_VOM_alt(i,r) = 

          SUM(j,PROD_COMM,VFM_alt(i,j,r) * p_VFM_alt(i,j,r)) ;  ! 

   6332    
   6333   Formula&Equation E_VOM_alt_marg (all,m,MARG_COMM)(all,r,REG)
   6334       VOM_alt(m,r) = VDM_alt(m,r) + sum(s,REG, VXMD_alt(m,r,s)) + VST_alt(m,r);
       !  EQUATION(LINEAR) E_VOM_alt_marg
          (ALL,m,MARG_COMM) (ALL,r,REG) VOM_alt(m,r) * p_VOM_alt(m,r) = 

          VDM_alt(m,r) * p_VDM_alt(m,r) + SUM(s,REG,VXMD_alt(m,r,s) * 

          p_VXMD_alt(m,r,s)) + VST_alt(m,r) * p_VST_alt(m,r) ;  ! 

   6335    
   6336   Formula&Equation E_VOM_alt_nmrg (all,i,NMRG_COMM)(all,r,REG)
   6337       VOM_alt(i,r) = VDM_alt(i,r) + sum(s,REG, VXMD_alt(i,r,s));
       !  EQUATION(LINEAR) E_VOM_alt_nmrg
          (ALL,i,NMRG_COMM) (ALL,r,REG) VOM_alt(i,r) * p_VOM_alt(i,r) = 

          VDM_alt(i,r) * p_VDM_alt(i,r) + SUM(s,REG,VXMD_alt(i,r,s) * 

          p_VXMD_alt(i,r,s)) ;  ! 

   6338    
   6339   Formula&Equation E_VOM_alt_cgds (all,h,CGDS_COMM)(all,r,REG)
   6340       VOM_alt(h,r) = VOA_alt(h,r);
       !  EQUATION(LINEAR) E_VOM_alt_cgds
          (ALL,h,CGDS_COMM) (ALL,r,REG) p_VOM_alt(h,r) = p_VOA_alt(h,r) ;  ! 

   6341    
   6342   Variable (levels,change) (all,i,NSAV_COMM)(all,r,REG)
   6343       dTO_alt(i,r) # Difference in VOA and VOM #;
   6344   Formula&Equation E_dTO_alt (all,i,NSAV_COMM)(all,r,REG)
   6345       dTO_alt(i,r) = {VOA_alt(i,r) - VOM_alt(i,r)}; ! Add tiny value !
       !  EQUATION(LINEAR) E_dTO_alt
          (ALL,i,NSAV_COMM) (ALL,r,REG) 100.0  * c_dTO_alt(i,r) = VOA_alt(i,r)

           * p_VOA_alt(i,r) - VOM_alt(i,r) * p_VOM_alt(i,r) ;  ! 

   6346    
   6347   Coefficient (parameter) (all,i,TRAD_COMM)(all,r,REG)
   6348       TO_dTO_ID(i,r) # ID for TRAD_COMM with Output Subsidy Reduction #;
   6349           Read  TO_dTO_ID from file GTAPSUPP header "IDTO";
   6350    
   6351   Coefficient (Parameter) (all,i,AEZ_COMM)(all,r,REG)
   6352       TO_AEZ_ID(i,r) # value per ha for AEZ_COMM with Subsidy Repurpose: for weights calc #;
   6353           Read  TO_AEZ_ID from file GTAPSUPP header "AZTO";
   6354    
   6355   Coefficient (all,i,AEZ_COMM)(all,r,REG)
   6356       WGHT_AEZ_ID(i,r) # weights for AEZ_COMM with Subsidy Repurpose: by reg , aez #;
   6357           Formula (all,i,AEZ_COMM)(all,r,REG)
   6358           WGHT_AEZ_ID(i,r) = TO_AEZ_ID(i,r)/sum(j, AEZ_COMM, TO_AEZ_ID(j,r));
   6359    
   6360   Variable (levels,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6361       dTFD_alt(i,j,r) # Difference in VDFA and VDFM #;
   6362   Formula&Equation E_dTFD_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6363       dTFD_alt(i,j,r) = {VDFA_alt(i,j,r) - VDFM_alt(i,j,r)}; ! Add tiny value !
       !  EQUATION(LINEAR) E_dTFD_alt
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) 100.0  * 

          c_dTFD_alt(i,j,r) = VDFA_alt(i,j,r) * p_VDFA_alt(i,j,r) - VDFM_alt(i,

          j,r) * p_VDFM_alt(i,j,r) ;  ! 

   6364    
   6365   Coefficient (parameter) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6366       TO_dTFD_ID(i,j,r) # ID for TRAD_COMM with Domestic Subsidy Reduction #;
   6367           Read  TO_dTFD_ID from file GTAPSUPP header "IDTD";
   6368    
   6369   Variable (levels,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6370       dTFM_alt(i,j,r) # Difference in VIFA and VIFM #;
   6371   Formula&Equation E_dTFM_alt (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6372       dTFM_alt(i,j,r) = {VIFA_alt(i,j,r) - VIFM_alt(i,j,r)}; ! Add tiny value !
       !  EQUATION(LINEAR) E_dTFM_alt
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) 100.0  * 

          c_dTFM_alt(i,j,r) = VIFA_alt(i,j,r) * p_VIFA_alt(i,j,r) - VIFM_alt(i,

          j,r) * p_VIFM_alt(i,j,r) ;  ! 

   6373    
   6374   Coefficient (parameter) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   6375       TO_dTFM_ID(i,j,r) # ID for TRAD_COMM with Imports Subsidy Reduction #;
   6376           Read  TO_dTFM_ID from file GTAPSUPP header "IDTM";
   6377    
   6378   Variable (change) (all,r,REG)
   6379       c_dTO_slack(r) # slack variable for TO #;
   6380    
   6381   Variable (change) (all,i,AEZ_COMM)(all,r,REG)
   6382       c_dTO_AEZ(i,r) # Change in subsidy payments TO by region by AEZ#;
   6383   Equation E_c_dTO_AEZ (all,i,AEZ_COMM)(all,r,REG)
   6384          c_dTO_AEZ(i,r) = TO_AEZ_ID(i,r) * c_dTO_alt(i,r);
   6385    
   6386   Variable (change) (all,r,REG)
   6387       c_dTO_AEZR(r) # Change in subsidy payments TO by region #;
   6388   Equation E_c_dTO_AEZR (all,r,REG)
   6389          c_dTO_AEZR(r) = sum(j, AEZ_COMM, TO_AEZ_ID(j,r) * c_dTO_alt(j,r));
   6390    
   6391   Equation E_dTO_revnue (all,r,REG)
   6392   - sum(j, TRAD_COMM, TO_dTO_ID(j,r)*c_dTO_alt(j,r)) +
   6393     sum(j, TRAD_COMM, sum(k, PROD_COMM, TO_dTFD_ID(j,k,r)*c_dTFD_alt(j,k,r))) +
   6394     sum(j, TRAD_COMM, sum(k, PROD_COMM, TO_dTFM_ID(j,k,r)*c_dTFM_alt(j,k,r)))
   6395    = sum(j, AEZ_COMM, WGHT_AEZ_ID(j,r) * [c_dTO_alt(j,r)]) + c_dTO_slack(r) ;
   6396    
   6397   ! EC (Apr 2022): Add global PES welfare contribution !
   6398   Variable (linear,change) (all,r,REG)
   6399       CNTpesgrin(r) # contribution to regional EV of changes in PES inflow #;
   6400   Equation E_CNTpesgin
   6401   (all,r,REG)
   6402       CNTpesgrin(r)
   6403           = [0.01 * EVSCALFACT(r)] * 100 * pes_inflow(r);
   6404    
   6405   Variable (linear,change) (all,r,REG)
   6406       CNTpesgrout(r) # contribution to regional EV of changes in PES outflow  #;
   6407   Equation E_CNTpesgrgout
   6408   (all,r,REG)
   6409       CNTpesgrout(r)
   6410           = [0.01 * EVSCALFACT(r)] * 100 * pes_outflow(r);
   6411    
   6412   Variable (linear,change) (all,r,REG)
   6413       CNTpesgr(r) # contribution to regional EV of net changes in PES #;
   6414   Equation E_CNTpesgr
   6415   (all,r,REG)
   6416       CNTpesgr(r)
   6417           = CNTpesgrin(r) - CNTpesgrout(r);
   6418   ! End: Add global PES !
   6419    
   6420   ! EC (Aug 2022): Add % change in utility by aggregate region !
   6421   Coefficient (all,r,REGINC)
   6422       AGGINCOMEEV(r) # aggregate regional household per capita expenditure #;
   6423   Formula (all,r,REGINC)
   6424       AGGINCOMEEV(r) = sum{rr, REG:MREGINC(rr)=r, INCOMEEV(rr)};
   6425    
   6426   Variable (orig_level=AGGINCOMEEV)(all,r,REGINC)
   6427       ureginc(r) # percent change in per capita utility - by aggregate regions #;
   6428   Equation E_ureginc
   6429    # ordinary change in real GDP #
   6430   (all,r,REGINC)
   6431       0 = sum{rr, REG:MREGINC(rr)=r, INCOMEEV(rr) * [u(rr) - ureginc(r)]};
   6432   ! EC (Aug 2022): End of changes !
   6433    
   6434   Write
   6435    INCOMEEV to file GTAPSUM header "YEV0";
   6436   (postsim) INCOMEEV to file GTAPSUM header "YEVU";
   6437    
   6438   ! EC (Aug 2022): Add GDP decomposition by aggregate region !
   6439   Variable (all,r,REGINC)(all,g,GDPEX)
   6440       pgdpexreginc(r,g) # percent change in GDP expenditure components, by aggregate region #;
   6441   Equation E_pgdpexreginc
   6442   # GDP-expenditure component price indices #
   6443   (all,r,REGINC)(all,e,GDPEX)
   6444       0 = sum{rr,REG:MREGINC(rr)=r, GDPEXP(rr,e) * [pgdpexp_ind(rr,e) - pgdpexreginc(r,e)]};
   6445    
   6446   Variable (all,r,REGINC)(all,g,GDPEX)
   6447       qgdpexreginc(r,g) # percent change in real GDP expenditure components, by aggregate region #;
   6448   Equation E_qgdpexreginc
   6449   # GDP-expenditure component quantity indices #
   6450   (all,r,REGINC)(all,e,GDPEX)
   6451       0 = sum{rr,REG:MREGINC(rr)=r, GDPEXP(rr,e) * [qgdpexp_ind(rr,e) - qgdpexreginc(r,e)]};
   6452    
   6453   Coefficient (all,r,REGINC)(all,e,GDPEX)
   6454       GDPEXP_a(r,e) # GDP expenditure components, by aggregate region #;
   6455   Formula (all,r,REGINC)(all,e,GDPEX)
   6456       GDPEXP_a(r,e) = sum{rr,REG:MREGINC(rr)=r, GDPEXP(rr,e)};
   6457   Coefficient (all,r,REGINC)(all,e,GDPEX)
   6458       BGDPEXP_a(r,e) # Initial real GDP at current prices, by aggregate region #;
   6459   Formula (initial)(all,r,REGINC)(all,e,GDPEX)
   6460       BGDPEXP_a(r,e) = GDPEXP_a(r,e);
   6461   Update (all,r,REGINC)(all,e,GDPEX)
   6462       BGDPEXP_a(r,e) = pgdpexreginc(r,e);
   6463   Variable (all,r,REGINC)
   6464       pgdpreginc(r) # percent change in GDP price index - income classification #;
   6465   Equation E_pgdpreginc
   6466    # ordinary change in real GDP #
   6467   (all,r,REGINC)
   6468       0 = sum{rr, REG:MREGINC(rr)=r, GDP(rr) * [pgdpFisher(rr) - pgdpreginc(r)]};
   6469    
   6470   Coefficient (all,r,REGINC)
   6471       BGDP_a(r) # Initial real GDP at current prices, by aggregate region #;
   6472   Formula (initial) (all,r,REGINC)
   6473       BGDP_a(r) = sum{rr,REG:MREGINC(rr)=r, BGDP(rr)};
   6474   Update (all,r,REGINC)
   6475       BGDP_a(r) = pgdpreginc(r);
   6476   Variable (change) (all,r,REGINC)(all,e,GDPEX)
   6477       contGDPEXP_a(r,e) # contributions to % change in qgdp by aggregate region #;
   6478   Equation E_contGDPEXP_a
   6479   # (expenditure-side) contributions to % change in real gdp #
   6480   (all,r,REGINC)(all,e,GDPEX)
   6481       BGDP_a(r) * contGDPEXP_a(r,e)
   6482           = GDPEXP_a(r,e) * qgdpexreginc(r,e);
   6483    
   6484   Variable (change)(all,r,REGINC)(all,e,CONTGDPIN2)
   6485       contGDPINC_a(r,e) # contributions to income side real GDP (1 land) #;
   6486   Equation E_contGDPINC_a
   6487   # (income-side) contributions to % change in real gdp #
   6488   (all,rr,REGINC)(all,g,CONTGDPIN2)
   6489      BGDP_a(rr) * contGDPINC_a(rr,g)
   6490           = sum{r,REG:MREGINC(r)=rr,
   6491             IF[g="land",          sum{e,AEZ_COMM, sum{a,PROD_COMM, EVFA(e,a,r) *qfe(e,a,r)}}]
   6492           + IF[g in NAEZ_COMM,    sum{e,NAEZ_COMM, sum{a,PROD_COMM, EVFA(g,a,r) *qfe(g,a,r)}}]
   6493           + IF[g="IndTaxes",
   6494                   sum{a,NSAV_COMM, PTAX(a,r) * qo(a,r)}
   6495                 + sum{c,TRAD_COMM, sum{a,PROD_COMM, DFTAX(c,a,r) * qfd(c,a,r)
   6496                                                   + IFTAX(c,a,r) * qfm(c,a,r)}}
   6497                 + sum{c,TRAD_COMM, DPTAX(c,r) * qpd(c,r) + IPTAX(c,r) * qpm(c,r)}
   6498                 + sum{c,TRAD_COMM, DGTAX(c,r) * qgd(c,r) + IGTAX(c,r) * qgm(c,r)}
   6499                 + sum{c,TRAD_COMM, sum{d,REG, XTAXD(c,r,d) * qxs(c,r,d)}}
   6500                 + sum{c,TRAD_COMM, sum{s,REG, MTAX(c,s,r)  * qxs(c,s,r)}}
   6501               ]
   6502           + IF[g="TechChange",
   6503                   sum{a,PROD_COMM, VOA(a,r) * ao(a,r)}
   6504                 + sum{e,ENDW_COMM, sum{a,PROD_COMM, VFA(e,a,r) * afe(e,a,r)}}
   6505                 + sum{a,PROD_COMM, VVA(a,r) * ava(a,r)}
   6506                 + sum{c,TRAD_COMM, sum{a,PROD_COMM,
   6507                           [VIFA(c,a,r) + VDFA(c,a,r)] * af(c,a,r)}}
   6508                 + sum{m,MARG_COMM, sum{c,TRAD_COMM, sum{s,REG,
   6509                           VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   6510                 + sum{c,TRAD_COMM, sum{s,REG, VIMS(c,s,r) * ams(c,s,r)}}
   6511               ]
   6512               };
   6513    
   6514   Variable
   6515       pgdpwld # percent change in GDP price index - income classification #;
   6516   Equation E_pgdpwld
   6517    # ordinary change in real GDP #
   6518       0 = sum{r, REG, GDP(r) * [pgdpFisher(r) - pgdpwld]};
   6519   Variable
   6520       qgdpwld # percent change in GDP price index - income classification #;
   6521   Equation E_qgdpwld
   6522    # ordinary change in real GDP #
   6523       0 = sum{r, REG, GDP(r) * [qgdpFisher(r) - qgdpwld]};
   6524    
   6525   Variable (all,e,GDPEX)
   6526       qgdpewld(e) # percent change in global real GDP expenditure components #;
   6527   Equation E_qgdpewld
   6528   # GDP-expenditure component quantity indices #
   6529   (all,e,GDPEX)
   6530       0 = sum{r,REG, GDPEXP(r,e) * [qgdpexp_ind(r,e) - qgdpewld(e)]};
   6531   Variable (all,e,GDPEX)
   6532       pgdpewld(e) # percent change in global real GDP expenditure components #;
   6533   Equation E_pgdpewld
   6534   # GDP-expenditure component quantity indices #
   6535   (all,e,GDPEX)
   6536       0 = sum{r,REG, GDPEXP(r,e) * [pgdpexp_ind(r,e) - pgdpewld(e)]};
   6537    
   6538   Coefficient (all,e,GDPEX)
   6539       GDPEXPWLD(e) # GDP expenditure components, by aggregate region #;
   6540   Formula (all,e,GDPEX)
   6541       GDPEXPWLD(e) = sum{r,REG, GDPEXP(r,e)};
   6542   Coefficient (all,e,GDPEX)
   6543       BGDPEXPWLD(e) # Initial real GDP at current prices, global #;
   6544   Formula (initial)(all,e,GDPEX)
   6545       BGDPEXPWLD(e) = GDPEXPWLD(e);
   6546   Update (all,e,GDPEX)
   6547       BGDPEXPWLD(e) = pgdpewld(e);
   6548    
   6549   Coefficient
   6550       BGDPWLD # Initial real GDP at current prices, world #;
   6551   Formula (initial)
   6552       BGDPWLD = sum{r,REG, BGDP(r)};
   6553   Update
   6554       BGDPWLD = pgdpwld;
   6555   Variable (change) (all,e,GDPEX)
   6556       contGDPEXP_w(e) # contributions to % change in qgdp world #;
   6557   Equation E_contGDPEXP_w
   6558   # (expenditure-side) contributions to % change in real gdp #
   6559   (all,e,GDPEX)
   6560       BGDPWLD * contGDPEXP_w(e) = BGDPEXPWLD(e) * qgdpewld(e);
   6561    
   6562   Variable (change)(all,g,CONTGDPIN2)
   6563       contGDPINC_w(g) # contributions to income side real GDP, world #;
   6564   Equation E_contGDPINC_w
   6565   # (income-side) contributions to % change in real gdp #
   6566   (all,g,CONTGDPIN2)
   6567      BGDPWLD * contGDPINC_w(g)
   6568           = sum{r,REG,
   6569             IF[g="land",          sum{e,AEZ_COMM, sum{a,PROD_COMM, EVFA(e,a,r) *qfe(e,a,r)}}]
   6570           + IF[g in NAEZ_COMM,    sum{e,NAEZ_COMM, sum{a,PROD_COMM, EVFA(g,a,r) *qfe(g,a,r)}}]
   6571           + IF[g="IndTaxes",
   6572                   sum{a,NSAV_COMM, PTAX(a,r) * qo(a,r)}
   6573                 + sum{c,TRAD_COMM, sum{a,PROD_COMM, DFTAX(c,a,r) * qfd(c,a,r)
   6574                                                   + IFTAX(c,a,r) * qfm(c,a,r)}}
   6575                 + sum{c,TRAD_COMM, DPTAX(c,r) * qpd(c,r) + IPTAX(c,r) * qpm(c,r)}
   6576                 + sum{c,TRAD_COMM, DGTAX(c,r) * qgd(c,r) + IGTAX(c,r) * qgm(c,r)}
   6577                 + sum{c,TRAD_COMM, sum{d,REG, XTAXD(c,r,d) * qxs(c,r,d)}}
   6578                 + sum{c,TRAD_COMM, sum{s,REG, MTAX(c,s,r)  * qxs(c,s,r)}}
   6579               ]
   6580           + IF[g="TechChange",
   6581                   sum{a,PROD_COMM, VOA(a,r) * ao(a,r)}
   6582                 + sum{e,ENDW_COMM, sum{a,PROD_COMM, VFA(e,a,r) * afe(e,a,r)}}
   6583                 + sum{a,PROD_COMM, VVA(a,r) * ava(a,r)}
   6584                 + sum{c,TRAD_COMM, sum{a,PROD_COMM,
   6585                           [VIFA(c,a,r) + VDFA(c,a,r)] * af(c,a,r)}}
   6586                 + sum{m,MARG_COMM, sum{c,TRAD_COMM, sum{s,REG,
   6587                           VTMFSD(m,c,s,r) * atmfsd(m,c,s,r)}}}
   6588                 + sum{c,TRAD_COMM, sum{s,REG, VIMS(c,s,r) * ams(c,s,r)}}
   6589               ]
   6590               };
   6591    
   6592   ! results by aggregate sector and aggregate regions !
   6593   Variable (all,a,BACT)(all,r,REGINC)
   6594       qoar(a,r) # quantity output index by broad activities in region r #;
   6595   Equation E_qoar
   6596   # quantity index for supply of good i in region r #
   6597   (all,a,BACT)(all,r,REGINC)
   6598       0 = sum{i,TRAD_COMM:MCOM(i)=a, sum{rr,REG:MREGINC(rr)=r,
   6599                    VOM(i,rr) * [qoar(a,r) - qo(i,rr)]}};
   6600    
   6601   Variable (all,a,BACT)(all,r,REGINC)
   6602       poar(a,r) # quantity output index by broad activities in region r #;
   6603   Equation E_poreg
   6604   # quantity index for supply of good i in region r #
   6605   (all,a,BACT)(all,r,REGINC)
   6606       0 = sum{i,TRAD_COMM:MCOM(i)=a, sum{rr,REG:MREGINC(rr)=r,
   6607                    VOM(i,rr) * [poar(a,r) - pm(i,rr)]}};
   6608    
   6609   Variable (all,a,BACT)
   6610       pobactwld(a) # global quantity output index by broad activities #;
   6611   Equation E_pobactwld
   6612   # quantity index for supply of good i in region r #
   6613   (all,a,BACT)
   6614       0 = sum{i,TRAD_COMM:MCOM(i)=a, sum{r,REG, VOM(i,r) * [pobactwld(a) - qo(i,r)]}};
   6615    
   6616   Variable (all,e,ENDW_COMM)(all,r,REGINC)
   6617       qear(e,r) # endowment quantity index in aggregate region r #;
   6618   Equation E_qear
   6619   # quantity index for supply of good i in region r #
   6620   (all,e,ENDW_COMM)(all,r,REGINC)
   6621       0 = sum{rr,REG:MREGINC(rr)=r, VOM(e,rr) * [qear(e,r) - qo(e,rr)]};
   6622    
   6623   Variable (all,e,ENDW_COMM)(all,r,REGINC)
   6624       pear(e,r) # endowment quantity index in aggregate region r #;
   6625   Equation E_pear
   6626   # price index for supply of good i in region r #
   6627   (all,e,ENDW_COMM)(all,r,REGINC)
   6628       0 = sum{rr,REG:MREGINC(rr)=r, VOM(e,rr) * [pear(e,r) - pm(e,rr)]};
   6629    
   6630   Variable (all,e,ENDW_COMM)
   6631       qewld(e) # endowment quantity index world #;
   6632   Equation E_qewld
   6633   # quantity index for supply of good i in region r #
   6634   (all,e,ENDW_COMM)
   6635       0 = sum{r,REG, VOM(e,r) * [qo(e,r) - qewld(e)]};
   6636    
   6637   Variable (all,e,ENDW_COMM)
   6638       pewld(e) # endowment price index world #;
   6639   Equation E_pewld
   6640   # quantity index for supply of good i in region r #
   6641   (all,e,ENDW_COMM)
   6642       0 = sum{r,REG, VOM(e,r) * [pm(e,r) - pewld(e)]};
   6643    
   6644   Variable (all,i,ENDW_COMM)(all,j,BACT)(all,r,REGINC)
   6645       qfear(i,j,r) # factor demand by broad activities and aggregate region #;
   6646   Equation E_qfear
   6647   # factor demand by broad activities and aggregate region #
   6648   (all,i,ENDW_COMM)(all,j,BACT)(all,r,REGINC)
   6649       0 = sum{a,ACTS:MACT(a)=j, sum{rr,REG:MREGINC(rr)=r,
   6650               ID01[EVFA(i,a,rr)] * [qfear(i,j,r) - qfe(i,a,rr)]}};
   6651    
   6652   Variable (all,i,ENDW_COMM)(all,j,BACT)(all,r,REGINC)
   6653       pfear(i,j,r) # factor price by broad activities and aggregate region #;
   6654   Equation E_pfear
   6655   # factor demand by broad activities and aggregate region #
   6656   (all,i,ENDW_COMM)(all,j,BACT)(all,r,REGINC)
   6657       0 = sum{a,ACTS:MACT(a)=j, sum{rr,REG:MREGINC(rr)=r,
   6658               ID01[EVFA(i,a,rr)] * [pfear(i,j,r) - pfe(i,a,rr)]}};
   6659    
   6660   Variable (all,i,ENDW_COMM)(all,j,BACT)
   6661       qfeawld(i,j) # global factor demand by broad activities #;
   6662   Equation E_qfeawld
   6663   # global factor demand by broad activities #
   6664   (all,i,ENDW_COMM)(all,j,BACT)
   6665       0 = sum{a,ACTS:MACT(a)=j, sum{r,REG,
   6666               ID01[EVFA(i,a,r)] * [qfeawld(i,j) - qfe(i,a,r)]}};
   6667    
   6668   Variable (all,i,ENDW_COMM)(all,j,BACT)
   6669       pfeawld(i,j) # global factor price by broad activities #;
   6670   Equation E_pfeawld
   6671   # global factor price by broad activities #
   6672   (all,i,ENDW_COMM)(all,j,BACT)
   6673       0 = sum{a,ACTS:MACT(a)=j, sum{r,REG,
   6674               ID01[EVFA(i,a,r)] * [pfeawld(i,j) - pfe(i,a,r)]}};
   6675    
   6676   Variable (all,i,BACT)(all,r,REGINC)
   6677       qxwacomreg(i,r) # exports by aggregate commodity i and aggregate region  #;
   6678   Equation E_qxwacomreg
   6679   # exports by aggregate commodity i and aggregate region  #
   6680   (all,i,BACT)(all,r,REGINC)
   6681       0 = sum{c,TRAD_COMM:MCOM(c)=i, sum{rr,REG:MREGINC(rr)=r,
   6682               VXW(c,rr) * [qxwacomreg(i,r) - qxw(c,rr)]}};
   6683    
   6684   Variable (all,i,BACT)(all,r,REGINC)(all,s,REGINC)
   6685       qxsareg(i,r,s) # bilateral export of commodity i by aggregate regions #;
   6686   Equation E_qxsareg
   6687   # bilateral export of commodity i by aggregate regions #
   6688   (all,i,BACT)(all,r,REGINC)(all,s,REGINC)
   6689       0 = sum{c,TRAD_COMM:MCOM(c)=i, sum{rr,REG:MREGINC(rr)=r, sum{ss,REG:MREGINC(ss)=s,
   6690               VXWD(c,rr,ss) * [qxsareg(i,r,s) - qxs(c,rr,ss)]}}};
   6691    
   6692   Variable (all,i,BACT)(all,r,REGINC)(all,s,REGINC)
   6693       pfobareg(i,r,s) # bilateral export price of commodity i by aggregate regions #;
   6694   Equation E_pfobareg
   6695   # bilateral export of commodity i by aggregate regions #
   6696   (all,i,BACT)(all,r,REGINC)(all,s,REGINC)
   6697       0 = sum{c,TRAD_COMM:MCOM(c)=i, sum{rr,REG:MREGINC(rr)=r, sum{ss,REG:MREGINC(ss)=s,
   6698               VXWD(c,rr,ss) * [pfobareg(i,r,s) - pfob(c,rr,ss)]}}};
   6699    

MESSAGE(S) ABOUT COEFFICIENT INITIALIZATION IN EQUATIONS
--------------------------------------------------------

 EQUATION 'E_VFA_alt_endw' starting at line 6257.

 %%WARNING.  The values of coefficient 'VFA_alt', which
    occurs in this equation, appear to be altered in the following reads
    and/or formulae which come after this equation in the TABLO Input file.
   Note that the values of this coefficient used in the equation are
    those AFTER all formulae and/or reads have been applied.

            Statement type      Starts at line
            ----------------------------------
              Formula             6258

 EQUATION 'E_VOM_alt_endw' starting at line 6330.

 %%WARNING.  The values of coefficient 'VOM_alt', which
    occurs in this equation, appear to be altered in the following reads
    and/or formulae which come after this equation in the TABLO Input file.
   Note that the values of this coefficient used in the equation are
    those AFTER all formulae and/or reads have been applied.

            Statement type      Starts at line
            ----------------------------------
              Formula             6333
              Formula             6336
              Formula             6339

 EQUATION 'E_VOM_alt_marg' starting at line 6333.

 %%WARNING.  The values of coefficient 'VOM_alt', which
    occurs in this equation, appear to be altered in the following reads
    and/or formulae which come after this equation in the TABLO Input file.
   Note that the values of this coefficient used in the equation are
    those AFTER all formulae and/or reads have been applied.

            Statement type      Starts at line
            ----------------------------------
              Formula             6336
              Formula             6339

 EQUATION 'E_VOM_alt_nmrg' starting at line 6336.

 %%WARNING.  The values of coefficient 'VOM_alt', which
    occurs in this equation, appear to be altered in the following reads
    and/or formulae which come after this equation in the TABLO Input file.
   Note that the values of this coefficient used in the equation are
    those AFTER all formulae and/or reads have been applied.

            Statement type      Starts at line
            ----------------------------------
              Formula             6339


MESSAGE(S) ABOUT APPARENTLY REDUNDANT STATEMENTS
------------------------------------------------

 FORMULA for 'G2LAND_COMM' starting at line 299.

 %%WARNING.  This formula appears to be redundant because
    the coefficient 'G2LAND_COMM' affected by it occurs in no equation
    update or 'ORIG_LEVEL=' qualifier, nor on the right hand side of any
    subsequent formula, nor in any subsequent DISPLAY,
    ZERODIVIDE, WRITE or SET statement.

 FORMULA for 'G2CROP_COMM' starting at line 326.

 %%WARNING.  This formula appears to be redundant because
    the coefficient 'G2CROP_COMM' affected by it occurs in no equation
    update or 'ORIG_LEVEL=' qualifier, nor on the right hand side of any
    subsequent formula, nor in any subsequent DISPLAY,
    ZERODIVIDE, WRITE or SET statement.

 FORMULA for 'G2FOREST_COM' starting at line 345.

 %%WARNING.  This formula appears to be redundant because
    the coefficient 'G2FOREST_COM' affected by it occurs in no equation
    update or 'ORIG_LEVEL=' qualifier, nor on the right hand side of any
    subsequent formula, nor in any subsequent DISPLAY,
    ZERODIVIDE, WRITE or SET statement.

 FORMULA for 'G2GRAZE_COMM' starting at line 367.

 %%WARNING.  This formula appears to be redundant because
    the coefficient 'G2GRAZE_COMM' affected by it occurs in no equation
    update or 'ORIG_LEVEL=' qualifier, nor on the right hand side of any
    subsequent formula, nor in any subsequent DISPLAY,
    ZERODIVIDE, WRITE or SET statement.

 FORMULA for 'YIELDREG' starting at line 5164.

 %%WARNING.  This formula appears to be redundant because
    the coefficient 'YIELDREG' affected by it occurs in no equation
    update or 'ORIG_LEVEL=' qualifier, nor on the right hand side of any
    subsequent formula, nor in any subsequent DISPLAY,
    ZERODIVIDE, WRITE or SET statement.

COEFFICIENT INITIALIZATION SUMMARY
----------------------------------

 %% NOTE the 9 WARNING(s) above about coefficients.

 %%INFORMATION. TABLO has created 23 new sets as follows:
  S@ruminant # Set with one element ruminant, a subset of TRAD_COMM #
  S@nonruminan # Set with one element nonruminant, a subset of TRAD_COMM #
  S@IndTaxes # Set with one element IndTaxes, a subset of CONTGDPIN #
  S@TechChange # Set with one element TechChange, a subset of CONTGDPIN #
  S@land # Set with one element land, a subset of CONTGDPIN2 #
  S@paddyrice # Set with one element paddyrice, a subset of TRAD_COMM #
  S@wheat # Set with one element wheat, a subset of TRAD_COMM #
  S@crsgrns # Set with one element crsgrns, a subset of TRAD_COMM #
  S@fruitveg # Set with one element fruitveg, a subset of TRAD_COMM #
  S@oilsds # Set with one element oilsds, a subset of TRAD_COMM #
  S@sugarcrps # Set with one element sugarcrps, a subset of TRAD_COMM #
  S@cotton # Set with one element cotton, a subset of TRAD_COMM #
  S@othercrps # Set with one element othercrps, a subset of TRAD_COMM #
  S@fishery # Set with one element fishery, a subset of TRAD_COMM #
  S@forestsec # Set with one element forestsec, a subset of TRAD_COMM #
  S@NRes # Set with one element NRes, a subset of TRAD_COMM #
  S@Mnfcing # Set with one element Mnfcing, a subset of TRAD_COMM #
  S@PrFood # Set with one element PrFood, a subset of TRAD_COMM #
  S@PrLstk # Set with one element PrLstk, a subset of TRAD_COMM #
  S@Services # Set with one element Services, a subset of TRAD_COMM #
  S@SkLab # Set with one element SkLab, a subset of ENDW_COMM #
  S@UnSkLab # Set with one element UnSkLab, a subset of ENDW_COMM #
  S@CROPLAND # Set with one element CROPLAND, a subset of PROD_COVER #





 ========================
 ++ INPUT STATEMENT TABLE
 ========================

          Starts   Syntax  Semantic
  Number  at line  Error?   Error?            Description
  ------------------------------------------------------------
     1       111     no       no      FILE 'GTAPSETS'                         
     2       113     no       no      FILE 'GTAPDATA'                         
     3       115     no       no      FILE 'GTAPPARM'                         
     4       119     no       no      FILE 'GTAPSUPP'                         
     5       121     no       no      FILE 'GTAPSUM'                          
     6       162     no       no      COEFFICIENT 'VERNUM'                    
     7       164     no       no      READ into 'VERNUM'                      
     8       166     no       no      UPDATE of 'VERNUM'                      
     9       169     no       no      SET 'REG'                               
    10       172     no       no      SET 'TRAD_COMM'                         
    11       177     no       no      SET 'MARG_COMM'                         
    12       180     no       no      SUBSET 1 'MARG_COMM' of 'TRAD_COMM'     
    13       182     no       no      SET 'NMRG_COMM'                         
    14       182     no       no      SUBSET 2 'NMRG_COMM' of 'TRAD_COMM'     
    15       184     no       no      SET 'CGDS_COMM'                         
    16       187     no       no      SET 'ENDW_COMM'                         
    17       190     no       no      SET 'PROD_COMM'                         
    18       190     no       no      SUBSET 3 'TRAD_COMM' of 'PROD_COMM'     
    19       190     no       no      SUBSET 4 'CGDS_COMM' of 'PROD_COMM'     
    20       190     no       no      SUBSET 5 'MARG_COMM' of 'PROD_COMM'     
    21       190     no       no      SUBSET 6 'NMRG_COMM' of 'PROD_COMM'     
    22       192     no       no      SET 'DEMD_COMM'                         
    23       192     no       no      SUBSET 7 'ENDW_COMM' of 'DEMD_COMM'     
    24       192     no       no      SUBSET 8 'TRAD_COMM' of 'DEMD_COMM'     
    25       192     no       no      SUBSET 9 'MARG_COMM' of 'DEMD_COMM'     
    26       192     no       no      SUBSET 10 'NMRG_COMM' of 'DEMD_COMM'    
    27       194     no       no      SET 'NSAV_COMM'                         
    28       194     no       no      SUBSET 11 'DEMD_COMM' of 'NSAV_COMM'    
    29       194     no       no      SUBSET 12 'CGDS_COMM' of 'NSAV_COMM'    
    30       194     no       no      SUBSET 13 'TRAD_COMM' of 'NSAV_COMM'    
    31       194     no       no      SUBSET 14 'MARG_COMM' of 'NSAV_COMM'    
    32       194     no       no      SUBSET 15 'NMRG_COMM' of 'NSAV_COMM'    
    33       194     no       no      SUBSET 16 'ENDW_COMM' of 'NSAV_COMM'    
    34       196     no       no      SUBSET 17 'PROD_COMM' of 'NSAV_COMM'    
    35       204     no       no      COEFFICIENT 'SIZE_TRAD'                 
    36       206     no       no      Formula for 'SIZE_TRAD'                 
    37       208     no       no      COEFFICIENT 'SIZE_ENDW'                 
    38       210     no       no      Formula for 'SIZE_ENDW'                 
    39       212     no       no      COEFFICIENT 'SIZE_DEMD'                 
    40       214     no       no      Formula for 'SIZE_DEMD'                 
    41       216     no       no      Assertion                               
    42       219     no       no      COEFFICIENT 'SIZE_CGDS'                 
    43       221     no       no      Formula for 'SIZE_CGDS'                 
    44       223     no       no      COEFFICIENT 'SIZE_PROD'                 
    45       225     no       no      Formula for 'SIZE_PROD'                 
    46       227     no       no      Assertion                               
    47       236     no       no      COEFFICIENT 'SLUG'                      
    48       238     no       no      READ into 'SLUG'                        
    49       241     no       no      SET 'ENDWS_COMM'                        
    50       241     no       no      Formula for Set 'ENDWS_COMM'            
    51       241     no       no      SUBSET 18 'ENDWS_COMM' of 'ENDW_COMM'   
    52       241     no       no      SUBSET 19 'ENDWS_COMM' of 'DEMD_COMM'   
    53       241     no       no      SUBSET 20 'ENDWS_COMM' of 'NSAV_COMM'   
    54       244     no       no      SET 'ENDWM_COMM'                        
    55       244     no       no      SUBSET 21 'ENDWM_COMM' of 'ENDW_COMM'   
    56       244     no       no      SUBSET 22 'ENDWM_COMM' of 'DEMD_COMM'   
    57       244     no       no      SUBSET 23 'ENDWM_COMM' of 'NSAV_COMM'   
    58       247     no       no      SET 'ENDWC_COMM'                        
    59       252     no       no      SUBSET 24 'ENDWC_COMM' of 'ENDW_COMM'   
    60       252     no       no      SUBSET 25 'ENDWC_COMM' of 'DEMD_COMM'   
    61       252     no       no      SUBSET 26 'ENDWC_COMM' of 'NSAV_COMM'   
    62       272     no       no      SET 'DTRAD_COMM'                        
    63       279     no       no      MAPPING 'G2TRAD_COMM'                   
    64       280     no       no      READ into 'G2TRAD_COMM'                 
    65       283     no       no      SET 'DLAND_COMM'                        
    66       287     no       no      SUBSET 27 'DLAND_COMM' of 'DTRAD_COMM'  
    67       289     no       no      COEFFICIENT 'UNITVEC0'                  
    68       290     no       no      Formula for 'UNITVEC0'                  
    69       292     no       no      COEFFICIENT 'ISLAND'                    
    70       293     no       no      Formula for 'ISLAND'                    
    71       296     no       no      SET 'LAND_COMM'                         
    72       296     no       no      Formula for Set 'LAND_COMM'             
    73       296     no       no      SUBSET 28 'LAND_COMM' of 'TRAD_COMM'    
    74       296     no       no      SUBSET 29 'LAND_COMM' of 'PROD_COMM'    
    75       296     no       no      SUBSET 30 'LAND_COMM' of 'DEMD_COMM'    
    76       296     no       no      SUBSET 31 'LAND_COMM' of 'NSAV_COMM'    
    77       298     no       no      MAPPING 'G2LAND_COMM'                   
    78       299     no       no      Formula for 'G2LAND_COMM'               
    79       300     no       no      SUBSET 32 'LAND_COMM' of 'PROD_COMM'    
    80       304     no       no      SET 'NLNDP_COMM'                        
    81       304     no       no      SUBSET 33 'NLNDP_COMM' of 'PROD_COMM'   
    82       304     no       no      SUBSET 34 'NLNDP_COMM' of 'NSAV_COMM'   
    83       311     no       no      SET 'DCROP_COMM'                        
    84       313     no       no      SUBSET 35 'DCROP_COMM' of 'DTRAD_COMM'  
    85       314     no       no      SUBSET 36 'DCROP_COMM' of 'DLAND_COMM'  
    86       316     no       no      COEFFICIENT 'UNITVEC'                   
    87       317     no       no      Formula for 'UNITVEC'                   
    88       319     no       no      COEFFICIENT 'ISCROP'                    
    89       320     no       no      Formula for 'ISCROP'                    
    90       323     no       no      SET 'CROP_COMM'                         
    91       323     no       no      Formula for Set 'CROP_COMM'             
    92       323     no       no      SUBSET 37 'CROP_COMM' of 'TRAD_COMM'    
    93       323     no       no      SUBSET 38 'CROP_COMM' of 'PROD_COMM'    
    94       323     no       no      SUBSET 39 'CROP_COMM' of 'DEMD_COMM'    
    95       323     no       no      SUBSET 40 'CROP_COMM' of 'NSAV_COMM'    
    96       325     no       no      MAPPING 'G2CROP_COMM'                   
    97       326     no       no      Formula for 'G2CROP_COMM'               
    98       327     no       no      SUBSET 41 'CROP_COMM' of 'PROD_COMM'    
    99       329     no       no      SUBSET 42 'CROP_COMM' of 'LAND_COMM'    
   100       334     no       no      SET 'DFOREST_COMM'                      
   101       335     no       no      SUBSET 43 'DFOREST_COMM' of 'DTRAD_COMM'
   102       336     no       no      SUBSET 44 'DFOREST_COMM' of 'DLAND_COMM'
   103       338     no       no      COEFFICIENT 'ISFOR'                     
   104       339     no       no      Formula for 'ISFOR'                     
   105       342     no       no      SET 'FOREST_COMM'                       
   106       342     no       no      Formula for Set 'FOREST_COMM'           
   107       342     no       no      SUBSET 45 'FOREST_COMM' of 'TRAD_COMM'  
   108       342     no       no      SUBSET 46 'FOREST_COMM' of 'PROD_COMM'  
   109       342     no       no      SUBSET 47 'FOREST_COMM' of 'DEMD_COMM'  
   110       342     no       no      SUBSET 48 'FOREST_COMM' of 'NSAV_COMM'  
   111       344     no       no      MAPPING 'G2FOREST_COM'                  
   112       345     no       no      Formula for 'G2FOREST_COM'              
   113       346     no       no      SUBSET 49 'FOREST_COMM' of 'PROD_COMM'  
   114       348     no       no      SUBSET 50 'FOREST_COMM' of 'LAND_COMM'  
   115       354     no       no      SET 'DGRAZE_COMM'                       
   116       357     no       no      SUBSET 51 'DGRAZE_COMM' of 'DTRAD_COMM' 
   117       358     no       no      SUBSET 52 'DGRAZE_COMM' of 'DLAND_COMM' 
   118       360     no       no      COEFFICIENT 'ISGRAZE'                   
   119       361     no       no      Formula for 'ISGRAZE'                   
   120       364     no       no      SET 'GRAZE_COMM'                        
   121       364     no       no      Formula for Set 'GRAZE_COMM'            
   122       364     no       no      SUBSET 53 'GRAZE_COMM' of 'TRAD_COMM'   
   123       364     no       no      SUBSET 54 'GRAZE_COMM' of 'PROD_COMM'   
   124       364     no       no      SUBSET 55 'GRAZE_COMM' of 'DEMD_COMM'   
   125       364     no       no      SUBSET 56 'GRAZE_COMM' of 'NSAV_COMM'   
   126       366     no       no      MAPPING 'G2GRAZE_COMM'                  
   127       367     no       no      Formula for 'G2GRAZE_COMM'              
   128       368     no       no      SUBSET 57 'GRAZE_COMM' of 'PROD_COMM'   
   129       370     no       no      SUBSET 58 'GRAZE_COMM' of 'LAND_COMM'   
   130       374     no       no      SET 'AGRLAND_COMM'                      
   131       374     no       no      SUBSET 59 'AGRLAND_COMM' of 'LAND_COMM' 
   132       374     no       no      SUBSET 60 'AGRLAND_COMM' of 'TRAD_COMM' 
   133       374     no       no      SUBSET 61 'AGRLAND_COMM' of 'PROD_COMM' 
   134       374     no       no      SUBSET 62 'AGRLAND_COMM' of 'DEMD_COMM' 
   135       374     no       no      SUBSET 63 'AGRLAND_COMM' of 'NSAV_COMM' 
   136       377     no       no      SET 'NAGLAND_COMM'                      
   137       377     no       no      SUBSET 64 'NAGLAND_COMM' of 'PROD_COMM' 
   138       377     no       no      SUBSET 65 'NAGLAND_COMM' of 'NSAV_COMM' 
   139       384     no       no      SET 'AEZ_COMM'                          
   140       387     no       no      SUBSET 66 'AEZ_COMM' of 'ENDW_COMM'     
   141       387     no       no      SUBSET 67 'AEZ_COMM' of 'DEMD_COMM'     
   142       387     no       no      SUBSET 68 'AEZ_COMM' of 'NSAV_COMM'     
   143       389     no       no      SUBSET 69 'AEZ_COMM' of 'ENDWS_COMM'    
   144       391     no       no      SET 'NAEZ_COMM'                         
   145       391     no       no      SUBSET 70 'NAEZ_COMM' of 'ENDW_COMM'    
   146       391     no       no      SUBSET 71 'NAEZ_COMM' of 'DEMD_COMM'    
   147       391     no       no      SUBSET 72 'NAEZ_COMM' of 'NSAV_COMM'    
   148       395     no       no      SET 'SNAEZ_COMM'                        
   149       395     no       no      SUBSET 73 'SNAEZ_COMM' of 'ENDWS_COMM'  
   150       395     no       no      SUBSET 74 'SNAEZ_COMM' of 'ENDW_COMM'   
   151       395     no       no      SUBSET 75 'SNAEZ_COMM' of 'DEMD_COMM'   
   152       395     no       no      SUBSET 76 'SNAEZ_COMM' of 'NSAV_COMM'   
   153       397     no       no      SUBSET 77 'SNAEZ_COMM' of 'NAEZ_COMM'   
   154       400     no       no      SET 'NCROP_COMM'                        
   155       400     no       no      SUBSET 78 'NCROP_COMM' of 'PROD_COMM'   
   156       400     no       no      SUBSET 79 'NCROP_COMM' of 'NSAV_COMM'   
   157       449     no       no      VARIABLE 'psave'                        
   158       451     no       no      VARIABLE 'qsave'                        
   159       453     no       no      COEFFICIENT 'SAVE'                      
   160       455     no       no      UPDATE of 'SAVE'                        
   161       457     no       no      READ into 'SAVE'                        
   162       466     no       no      VARIABLE 'pgd'                          
   163       468     no       no      VARIABLE 'qgd'                          
   164       470     no       no      COEFFICIENT 'VDGA'                      
   165       472     no       no      UPDATE of 'VDGA'                        
   166       474     no       no      READ into 'VDGA'                        
   167       477     no       no      VARIABLE 'pm'                           
   168       479     no       no      COEFFICIENT 'VDGM'                      
   169       481     no       no      UPDATE of 'VDGM'                        
   170       483     no       no      READ into 'VDGM'                        
   171       486     no       no      VARIABLE 'pgm'                          
   172       488     no       no      VARIABLE 'qgm'                          
   173       490     no       no      COEFFICIENT 'VIGA'                      
   174       492     no       no      UPDATE of 'VIGA'                        
   175       494     no       no      READ into 'VIGA'                        
   176       497     no       no      VARIABLE 'pim'                          
   177       499     no       no      COEFFICIENT 'VIGM'                      
   178       501     no       no      UPDATE of 'VIGM'                        
   179       503     no       no      READ into 'VIGM'                        
   180       512     no       no      VARIABLE 'ppd'                          
   181       514     no       no      VARIABLE 'qpd'                          
   182       516     no       no      COEFFICIENT 'VDPA'                      
   183       518     no       no      UPDATE of 'VDPA'                        
   184       520     no       no      READ into 'VDPA'                        
   185       523     no       no      COEFFICIENT 'VDPM'                      
   186       525     no       no      UPDATE of 'VDPM'                        
   187       527     no       no      READ into 'VDPM'                        
   188       530     no       no      VARIABLE 'ppm'                          
   189       532     no       no      VARIABLE 'qpm'                          
   190       534     no       no      COEFFICIENT 'VIPA'                      
   191       536     no       no      UPDATE of 'VIPA'                        
   192       538     no       no      READ into 'VIPA'                        
   193       541     no       no      COEFFICIENT 'VIPM'                      
   194       543     no       no      UPDATE of 'VIPM'                        
   195       545     no       no      READ into 'VIPM'                        
   196       554     no       no      VARIABLE 'ps'                           
   197       556     no       no      VARIABLE 'qo'                           
   198       558     no       no      COEFFICIENT 'EVOA'                      
   199       560     no       no      UPDATE of 'EVOA'                        
   200       562     no       no      READ into 'EVOA'                        
   201       565     no       no      VARIABLE 'pfe'                          
   202       567     no       no      VARIABLE 'qfe'                          
   203       569     no       no      COEFFICIENT 'EVFA'                      
   204       571     no       no      UPDATE of 'EVFA'                        
   205       573     no       no      READ into 'EVFA'                        
   206       576     no       no      VARIABLE 'pfd'                          
   207       578     no       no      VARIABLE 'qfd'                          
   208       580     no       no      COEFFICIENT 'VDFA'                      
   209       582     no       no      UPDATE of 'VDFA'                        
   210       584     no       no      READ into 'VDFA'                        
   211       587     no       no      VARIABLE 'pfm'                          
   212       589     no       no      VARIABLE 'qfm'                          
   213       591     no       no      COEFFICIENT 'VIFA'                      
   214       593     no       no      UPDATE of 'VIFA'                        
   215       595     no       no      READ into 'VIFA'                        
   216       598     no       no      VARIABLE 'pmes'                         
   217       600     no       no      COEFFICIENT 'VFM'                       
   218       602     no       no      UPDATE of 'VFM'                         
   219       604     no       no      UPDATE of 'VFM'                         
   220       606     no       no      READ into 'VFM'                         
   221       609     no       no      COEFFICIENT 'VIFM'                      
   222       611     no       no      UPDATE of 'VIFM'                        
   223       613     no       no      READ into 'VIFM'                        
   224       616     no       no      COEFFICIENT 'VDFM'                      
   225       618     no       no      UPDATE of 'VDFM'                        
   226       620     no       no      READ into 'VDFM'                        
   227       629     no       no      VARIABLE 'kb'                           
   228       631     no       no      VARIABLE 'pcgds'                        
   229       633     no       no      COEFFICIENT 'VDEP'                      
   230       635     no       no      UPDATE of 'VDEP'                        
   231       637     no       no      READ into 'VDEP'                        
   232       650     no       no      VARIABLE 'pms'                          
   233       652     no       no      VARIABLE 'qxs'                          
   234       654     no       no      COEFFICIENT 'VIMS'                      
   235       656     no       no      UPDATE of 'VIMS'                        
   236       658     no       no      READ into 'VIMS'                        
   237       661     no       no      VARIABLE 'pcif'                         
   238       663     no       no      COEFFICIENT 'VIWS'                      
   239       665     no       no      UPDATE of 'VIWS'                        
   240       667     no       no      READ into 'VIWS'                        
   241       670     no       no      VARIABLE 'pfob'                         
   242       672     no       no      COEFFICIENT 'VXWD'                      
   243       674     no       no      UPDATE of 'VXWD'                        
   244       676     no       no      READ into 'VXWD'                        
   245       679     no       no      COEFFICIENT 'VXMD'                      
   246       682     no       no      UPDATE of 'VXMD'                        
   247       684     no       no      READ into 'VXMD'                        
   248       687     no       no      VARIABLE 'qst'                          
   249       689     no       no      COEFFICIENT 'VST'                       
   250       692     no       no      UPDATE of 'VST'                         
   251       694     no       no      READ into 'VST'                         
   252       710     no       no      VARIABLE 'y'                            
   253       712     no       no      VARIABLE 'pop'                          
   254       714     no       no      VARIABLE 'qoes'                         
   255       716     no       no      VARIABLE 'endwslack'                    
   256       723     no       no      VARIABLE 'pgov'                         
   257       725     no       no      VARIABLE 'yg'                           
   258       728     no       no      VARIABLE 'ug'                           
   259       730     no       no      VARIABLE 'ppriv'                        
   260       733     no       no      VARIABLE 'uepriv'                       
   261       736     no       no      VARIABLE 'yp'                           
   262       738     no       no      VARIABLE 'up'                           
   263       740     no       no      VARIABLE 'to'                           
   264       744     no       no      VARIABLE 'to_1'                         
   265       747     no       no      VARIABLE 'to_2'                         
   266       750     no       no                                              
   267       750     no       no                                              
   268       750     no       no      EQUATION 'E_to_1'                       
   269       761     no       no      VARIABLE 'qim'                          
   270       763     no       no      VARIABLE 'globalcgds'                   
   271       765     no       no      VARIABLE 'pcgdswld'                     
   272       787     no       no      VARIABLE 'del_taxrgc'                   
   273       789     no       no      VARIABLE 'del_taxrpc'                   
   274       791     no       no      VARIABLE 'del_taxriu'                   
   275       793     no       no      VARIABLE 'del_taxrfu'                   
   276       795     no       no      VARIABLE 'del_taxrout'                  
   277       797     no       no      VARIABLE 'del_taxrexp'                  
   278       799     no       no      VARIABLE 'del_taxrimp'                  
   279       801     no       no      VARIABLE 'del_taxrinc'                  
   280       826     no       no      COEFFICIENT 'VFA'                       
   281       828     no       no      Formula for 'VFA'                       
   282       830     no       no      Formula for 'VFA'                       
   283       833     no       no      COEFFICIENT 'VOA'                       
   284       835     no       no      Formula for 'VOA'                       
   285       837     no       no      Formula for 'VOA'                       
   286       840     no       no      COEFFICIENT 'VDM'                       
   287       842     no       no      Formula for 'VDM'                       
   288       845     no       no      COEFFICIENT 'VOM'                       
   289       847     no       no      Formula for 'VOM'                       
   290       849     no       no      Formula for 'VOM'                       
   291       851     no       no      Formula for 'VOM'                       
   292       853     no       no      Formula for 'VOM'                       
   293       889     no       no      COEFFICIENT 'VGA'                       
   294       891     no       no      Formula for 'VGA'                       
   295       893     no       no      COEFFICIENT 'GOVEXP'                    
   296       895     no       no      Formula for 'GOVEXP'                    
   297       899     no       no      COEFFICIENT 'VPA'                       
   298       901     no       no      Formula for 'VPA'                       
   299       903     no       no      COEFFICIENT 'PRIVEXP'                   
   300       905     no       no      Formula for 'PRIVEXP'                   
   301       909     no       no      COEFFICIENT 'INCOME'                    
   302       911     no       no      Formula for 'INCOME'                    
   303       915     no       no      VARIABLE 'p_INCOME_track'               
   304       915     no       no      COEFFICIENT 'INCOME_track'              
   305       917     no       no      Formula for 'INCOME_track'              
   306       918     no       no      EQUATION 'E_INCOME_track'               
   307       928     no       no      COEFFICIENT 'DGTAX'                     
   308       930     no       no      Formula for 'DGTAX'                     
   309       932     no       no      COEFFICIENT 'IGTAX'                     
   310       934     no       no      Formula for 'IGTAX'                     
   311       936     no       no      COEFFICIENT 'TGC'                       
   312       938     no       no      Formula for 'TGC'                       
   313       941     no       no      COEFFICIENT 'DPTAX'                     
   314       943     no       no      Formula for 'DPTAX'                     
   315       945     no       no      COEFFICIENT 'IPTAX'                     
   316       947     no       no      Formula for 'IPTAX'                     
   317       949     no       no      COEFFICIENT 'TPC'                       
   318       951     no       no      Formula for 'TPC'                       
   319       954     no       no      COEFFICIENT 'DFTAX'                     
   320       956     no       no      Formula for 'DFTAX'                     
   321       958     no       no      COEFFICIENT 'IFTAX'                     
   322       960     no       no      Formula for 'IFTAX'                     
   323       962     no       no      COEFFICIENT 'TIU'                       
   324       964     no       no      Formula for 'TIU'                       
   325       967     no       no      COEFFICIENT 'ETAX'                      
   326       969     no       no      Formula for 'ETAX'                      
   327       971     no       no      COEFFICIENT 'TFU'                       
   328       973     no       no      Formula for 'TFU'                       
   329       976     no       no      COEFFICIENT 'PTAX'                      
   330       978     no       no      Formula for 'PTAX'                      
   331       980     no       no      COEFFICIENT 'TOUT'                      
   332       982     no       no      Formula for 'TOUT'                      
   333       985     no       no      COEFFICIENT 'XTAXD'                     
   334       987     no       no      Formula for 'XTAXD'                     
   335       989     no       no      COEFFICIENT 'TEX'                       
   336       991     no       no      Formula for 'TEX'                       
   337       994     no       no      COEFFICIENT 'MTAX'                      
   338       996     no       no      Formula for 'MTAX'                      
   339       998     no       no      COEFFICIENT 'TIM'                       
   340      1000     no       no      Formula for 'TIM'                       
   341      1010     no       no      COEFFICIENT 'ESUBD'                     
   342      1013     no       no      READ into 'ESUBD'                       
   343      1017     no       no      COEFFICIENT 'REGINV'                    
   344      1019     no       no      Formula for 'REGINV'                    
   345      1021     no       no      COEFFICIENT 'NETINV'                    
   346      1023     no       no      Formula for 'NETINV'                    
   347      1025     no       no      COEFFICIENT 'GLOBINV'                   
   348      1027     no       no      Formula for 'GLOBINV'                   
   349      1031     no       no      COEFFICIENT 'CONSHR'                    
   350      1033     no       no      Formula for 'CONSHR'                    
   351      1035     no       no      COEFFICIENT 'INCPAR'                    
   352      1038     no       no      READ into 'INCPAR'                      
   353      1040     no       no      COEFFICIENT 'UELASPRIV'                 
   354      1043     no       no      Formula for 'UELASPRIV'                 
   355      1081     no       no      VARIABLE 'pg'                           
   356      1083     no       no      VARIABLE 'qg'                           
   357      1092     no       no      EQUATION 'GPRICEINDEX'                  
   358      1097     no       no      EQUATION 'GOVDMNDS'                     
   359      1102     no       no      EQUATION 'GOVU'                         
   360      1113     no       no      VARIABLE 'tgd'                          
   361      1116     no       no      VARIABLE 'tgm'                          
   362      1119     no       no      EQUATION 'GHHDPRICE'                    
   363      1124     no       no      EQUATION 'GHHIPRICES'                   
   364      1129     no       no      COEFFICIENT 'GMSHR'                     
   365      1131     no       no      Formula for 'GMSHR'                     
   366      1134     no       no      EQUATION 'GCOMPRICE'                    
   367      1139     no       no      EQUATION 'GHHLDAGRIMP'                  
   368      1144     no       no      EQUATION 'GHHLDDOM'                     
   369      1149     no       no      EQUATION 'TGCRATIO'                     
   370      1178     no       no      VARIABLE 'pp'                           
   371      1180     no       no      VARIABLE 'qp'                           
   372      1189     no       no      EQUATION 'PHHLDINDEX'                   
   373      1194     no       no      EQUATION 'PRIVATEU'                     
   374      1204     no       no      COEFFICIENT 'XWCONSHR'                  
   375      1207     no       no      Formula for 'XWCONSHR'                  
   376      1210     no       no      EQUATION 'UTILELASPRIV'                 
   377      1222     no       no      COEFFICIENT 'SUBPAR'                    
   378      1225     no       no      READ into 'SUBPAR'                      
   379      1231     no       no      COEFFICIENT 'ALPHA'                     
   380      1233     no       no      Formula for 'ALPHA'                     
   381      1236     no       no      COEFFICIENT 'APE'                       
   382      1238     no       no      Formula for 'APE'                       
   383      1241     no       no      Formula for 'APE'                       
   384      1247     no       no      COEFFICIENT 'EY'                        
   385      1249     no       no      Formula for 'EY'                        
   386      1256     no       no      COEFFICIENT 'EP'                        
   387      1259     no       no      Formula for 'EP'                        
   388      1261     no       no      Formula for 'EP'                        
   389      1264     no       no      EQUATION 'PRIVDMNDS'                    
   390      1281     no       no      VARIABLE 'tp'                           
   391      1289     no       no      VARIABLE 'tpd'                          
   392      1291     no       no      VARIABLE 'atpd'                         
   393      1293     no       no      EQUATION 'TPDSHIFT'                     
   394      1298     no       no      EQUATION 'PHHDPRICE'                    
   395      1303     no       no      VARIABLE 'tpm'                          
   396      1305     no       no      VARIABLE 'atpm'                         
   397      1307     no       no      EQUATION 'TPMSHIFT'                     
   398      1312     no       no      EQUATION 'PHHIPRICES'                   
   399      1317     no       no      EQUATION 'TPCRATIO'                     
   400      1326     no       no      COEFFICIENT 'PMSHR'                     
   401      1328     no       no      Formula for 'PMSHR'                     
   402      1331     no       no      EQUATION 'PCOMPRICE'                    
   403      1336     no       no      EQUATION 'PHHLDDOM'                     
   404      1341     no       no      EQUATION 'PHHLDAGRIMP'                  
   405      1393     no       no      VARIABLE 'pva'                          
   406      1395     no       no      VARIABLE 'qva'                          
   407      1397     no       no      VARIABLE 'pf'                           
   408      1399     no       no      VARIABLE 'qf'                           
   409      1401     no       no      VARIABLE 'ao'                           
   410      1403     no       no      VARIABLE 'ava'                          
   411      1405     no       no      VARIABLE 'af'                           
   412      1407     no       no      VARIABLE 'afe'                          
   413      1409     no       no      VARIABLE 'ams'                          
   414      1420     no       no      VARIABLE 'tfd'                          
   415      1422     no       no      EQUATION 'DMNDDPRICE'                   
   416      1432     no       no      VARIABLE 'tfm'                          
   417      1434     no       no      EQUATION 'DMNDIPRICES'                  
   418      1444     no       no      EQUATION 'TIURATIO'                     
   419      1453     no       no      COEFFICIENT 'FMSHR'                     
   420      1455     no       no      Formula for 'FMSHR'                     
   421      1457     no       no      EQUATION 'ICOMPRICE'                    
   422      1462     no       no      EQUATION 'INDIMP'                       
   423      1467     no       no      EQUATION 'INDDOM'                       
   424      1478     no       no      VARIABLE 'tf'                           
   425      1481     no       no      EQUATION 'MPFACTPRICE'                  
   426      1486     no       no      EQUATION 'SPFACTPRICE'                  
   427      1491     no       no      VARIABLE 'afecom'                       
   428      1493     no       no      VARIABLE 'afesec'                       
   429      1495     no       no      VARIABLE 'afereg'                       
   430      1497     no       no      VARIABLE 'afeall'                       
   431      1499     no       no      EQUATION 'AFEWORLD'                     
   432      1504     no       no      COEFFICIENT 'VVA'                       
   433      1506     no       no      Formula for 'VVA'                       
   434      1508     no       no      COEFFICIENT 'SVADEFAULT'                
   435      1510     no       no      Formula for 'SVADEFAULT'                
   436      1514     no       no      COEFFICIENT 'SVA'                       
   437      1516     no       no      Formula for 'SVA'                       
   438      1518     no       no      Formula for 'SVA'                       
   439      1520     no       no      EQUATION 'VAPRICE'                      
   440      1525     no       no      EQUATION 'TFURATIO'                     
   441      1543     no       no      ZERODIVIDE instruction                  
   442      1544     no       no      ZERODIVIDE instruction                  
   443      1546     no       no      COEFFICIENT 'TOTALC'                    
   444      1548     no       no      Formula for 'TOTALC'                    
   445      1551     no       no      COEFFICIENT 'LANDCOST'                  
   446      1553     no       no      Formula for 'LANDCOST'                  
   447      1557     no       no      COEFFICIENT 'THETAi'                    
   448      1559     no       no      Formula for 'THETAi'                    
   449      1562     no       no      COEFFICIENT 'YDONOFF'                   
   450      1564     no       no      READ into 'YDONOFF'                     
   451      1566     no       no      COEFFICIENT 'YDREGSCALE'                
   452      1568     no       no      READ into 'YDREGSCALE'                  
   453      1570     no       no      COEFFICIENT 'YDE_Target'                
   454      1572     no       no      READ into 'YDE_Target'                  
   455      1574     no       no      COEFFICIENT 'ESUBVA1'                   
   456      1577     no       no      READ into 'ESUBVA1'                     
   457      1580     no       no      COEFFICIENT 'ESUBVA'                    
   458      1583     no       no      Formula for 'ESUBVA'                    
   459      1594     no       no      EQUATION 'ENDWDEMAND'                   
   460      1601     no       no      COEFFICIENT 'SAEZLAND'                  
   461      1603     no       no      Formula for 'SAEZLAND'                  
   462      1607     no       no      VARIABLE 'pfeland'                      
   463      1609     no       no      VARIABLE 'qfeland'                      
   464      1612     no       no      COEFFICIENT 'ESUBAEZ'                   
   465      1615     no       no      READ into 'ESUBAEZ'                     
   466      1618     no       no      EQUATION 'LANDPRICE'                    
   467      1624     no       no      EQUATION 'LANDDEMAND'                   
   468      1631     no       no      EQUATION 'AEZDEMAND'                    
   469      1638     no       no      EQUATION 'NLANDDEMAND'                  
   470      1654     no       no      VARIABLE 'aosec'                        
   471      1656     no       no      VARIABLE 'aoreg'                        
   472      1658     no       no      VARIABLE 'aoall'                        
   473      1660     no       no      VARIABLE 'aoall2'                       
   474      1662     no       no      VARIABLE 'aoall3'                       
   475      1664     no       no      VARIABLE 'aoall4'                       
   476      1666     no       no      EQUATION 'AOWORLD'                      
   477      1672     no       no      VARIABLE 'avasec'                       
   478      1674     no       no      VARIABLE 'avareg'                       
   479      1676     no       no      VARIABLE 'avaall'                       
   480      1678     no       no      EQUATION 'AVAWORLD'                     
   481      1683     no       no      COEFFICIENT 'ESUBT1'                    
   482      1686     no       no      READ into 'ESUBT1'                      
   483      1689     no       no      COEFFICIENT 'ESUBT'                     
   484      1691     no       no      Formula for 'ESUBT'                     
   485      1696     no       no      EQUATION 'VADEMAND'                     
   486      1707     no       no      VARIABLE 'afcom'                        
   487      1709     no       no      VARIABLE 'afsec'                        
   488      1711     no       no      VARIABLE 'afreg'                        
   489      1713     no       no      VARIABLE 'afall'                        
   490      1715     no       no      EQUATION 'AFWORLD'                      
   491      1720     no       no      EQUATION 'INTDEMAND'                    
   492      1736     no       no      EQUATION 'OUTPUTPRICES'                 
   493      1746     no       no      EQUATION 'TOUTRATIO'                    
   494      1753     no       no      VARIABLE 'profitslack'                  
   495      1759     no       no      COEFFICIENT 'STC'                       
   496      1761     no       no      Formula for 'STC'                       
   497      1764     no       no      EQUATION 'ZEROPROFITS'                  
   498      1804     no       no      VARIABLE 'rental'                       
   499      1806     no       no      VARIABLE 'ke'                           
   500      1808     no       no      VARIABLE 'rore'                         
   501      1810     no       no      VARIABLE 'rorc'                         
   502      1812     no       no      VARIABLE 'qcgds'                        
   503      1821     no       no      VARIABLE 'ksvces'                       
   504      1823     no       no      EQUATION 'KAPSVCES'                     
   505      1833     no       no      EQUATION 'KAPRENTAL'                    
   506      1839     no       no      EQUATION 'CAPGOODS'                     
   507      1849     no       no      EQUATION 'PRCGOODS'                     
   508      1854     no       no      EQUATION 'KBEGINNING'                   
   509      1863     no       no      COEFFICIENT 'VKB'                       
   510      1865     no       no      UPDATE of 'VKB'                         
   511      1867     no       no      READ into 'VKB'                         
   512      1875     no       no      COEFFICIENT 'INVKERATIO'                
   513      1878     no       no      Formula for 'INVKERATIO'                
   514      1881     no       no      EQUATION 'KEND'                         
   515      1892     no       no      COEFFICIENT 'GRNETRATIO'                
   516      1894     no       no      Formula for 'GRNETRATIO'                
   517      1901     no       no      EQUATION 'RORCURRENT'                   
   518      1906     no       no      COEFFICIENT 'RORFLEX'                   
   519      1909     no       no      READ into 'RORFLEX'                     
   520      1920     no       no      EQUATION 'ROREXPECTED'                  
   521      1933     no       no      VARIABLE 'EXPAND'                       
   522      1935     no       no      EQUATION 'BALDWIN'                      
   523      1946     no       no      COEFFICIENT 'RORDELTA'                  
   524      1949     no       no      READ into 'RORDELTA'                    
   525      1960     no       no      VARIABLE 'rorg'                         
   526      1962     no       no      VARIABLE 'cgdslack'                     
   527      1969     no       no      EQUATION 'RORGLOBAL'                    
   528      1982     no       no      EQUATION 'GLOBALINV'                    
   529      2001     no       no      EQUATION 'PRICGDS'                      
   530      2011     no       no      VARIABLE 'psaveslack'                   
   531      2021     no       no      EQUATION 'SAVEPRICE'                    
   532      2051     no       no      VARIABLE 'tx'                           
   533      2053     no       no      VARIABLE 'txs'                          
   534      2063     no       no      EQUATION 'EXPRICES'                     
   535      2068     no       no      EQUATION 'TEXPRATIO'                    
   536      2084     no       no      VARIABLE 'tm'                           
   537      2086     no       no      VARIABLE 'tms'                          
   538      2097     no       no      EQUATION 'MKTPRICES'                    
   539      2102     no       no      COEFFICIENT 'MSHRS'                     
   540      2104     no       no      Formula for 'MSHRS'                     
   541      2106     no       no      EQUATION 'DPRICEIMP'                    
   542      2111     no       no      VARIABLE 'pr'                           
   543      2113     no       no      EQUATION 'PRICETGT'                     
   544      2129     no       no      COEFFICIENT 'ESUBM'                     
   545      2132     no       no      READ into 'ESUBM'                       
   546      2135     no       no      EQUATION 'IMPORTDEMAND'                 
   547      2142     no       no      EQUATION 'TIMPRATIO'                    
   548      2169     no       no      VARIABLE 'qtmfsd'                       
   549      2175     no       no      VARIABLE 'atmfsd'                       
   550      2182     no       no      VARIABLE 'atm'                          
   551      2184     no       no      VARIABLE 'atf'                          
   552      2186     no       no      VARIABLE 'ats'                          
   553      2188     no       no      VARIABLE 'atd'                          
   554      2190     no       no      VARIABLE 'atall'                        
   555      2192     no       no      VARIABLE 'ptrans'                       
   556      2197     no       no      VARIABLE 'qtm'                          
   557      2199     no       no      VARIABLE 'pt'                           
   558      2205     no       no      COEFFICIENT 'VTMFSD'                    
   559      2208     no       no      UPDATE of 'VTMFSD'                      
   560      2210     no       no      READ into 'VTMFSD'                      
   561      2213     no       no      COEFFICIENT 'VTFSD'                     
   562      2215     no       no      Formula for 'VTFSD'                     
   563      2222     no       no      COEFFICIENT 'VTMUSE'                    
   564      2224     no       no      Formula for 'VTMUSE'                    
   565      2227     no       no      COEFFICIENT 'VTMPROV'                   
   566      2229     no       no      Formula for 'VTMPROV'                   
   567      2235     no       no      COEFFICIENT 'VTRPROV'                   
   568      2237     no       no      Formula for 'VTRPROV'                   
   569      2240     no       no      COEFFICIENT 'VT'                        
   570      2242     no       no      Formula for 'VT'                        
   571      2251     no       no      EQUATION 'QTRANS_MFSD'                  
   572      2270     no       no      COEFFICIENT 'VTMUSESHR'                 
   573      2272     no       no      Formula for 'VTMUSESHR'                 
   574      2274     no       no      Formula for 'VTMUSESHR'                 
   575      2278     no       no      EQUATION 'TRANS_DEMAND'                 
   576      2291     no       no      COEFFICIENT 'VTSUPPSHR'                 
   577      2293     no       no      Formula for 'VTSUPPSHR'                 
   578      2295     no       no      Formula for 'VTSUPPSHR'                 
   579      2298     no       no      EQUATION 'PTRANSPORT'                   
   580      2313     no       no      COEFFICIENT 'VTUSE'                     
   581      2315     no       no      Formula for 'VTUSE'                     
   582      2320     no       no      COEFFICIENT 'VTFSD_MSH'                 
   583      2322     no       no      Formula for 'VTFSD_MSH'                 
   584      2325     no       no      Formula for 'VTFSD_MSH'                 
   585      2329     no       no      EQUATION 'TRANSCOSTINDEX'               
   586      2335     no       no      EQUATION 'TRANSTECHANGE'                
   587      2341     no       no      EQUATION 'TRANSVCES'                    
   588      2352     no       no      COEFFICIENT 'VIWSCOST'                  
   589      2354     no       no      Formula for 'VIWSCOST'                  
   590      2357     no       no      COEFFICIENT 'FOBSHR'                    
   591      2359     no       no      Formula for 'FOBSHR'                    
   592      2362     no       no      COEFFICIENT 'TRNSHR'                    
   593      2364     no       no      Formula for 'TRNSHR'                    
   594      2367     no       no      EQUATION 'FOBCIF'                       
   595      2401     no       no      COEFFICIENT 'XSHRPRIV'                  
   596      2403     no       no      Formula for 'XSHRPRIV'                  
   597      2406     no       no      COEFFICIENT 'XSHRGOV'                   
   598      2408     no       no      Formula for 'XSHRGOV'                   
   599      2411     no       no      COEFFICIENT 'XSHRSAVE'                  
   600      2413     no       no      Formula for 'XSHRSAVE'                  
   601      2416     no       no      VARIABLE 'uelas'                        
   602      2419     no       no      VARIABLE 'dppriv'                       
   603      2421     no       no      VARIABLE 'dpgov'                        
   604      2423     no       no      VARIABLE 'dpsave'                       
   605      2431     no       no      EQUATION 'FACTORINCPRICES'              
   606      2436     no       no      COEFFICIENT 'TINC'                      
   607      2438     no       no      Formula for 'TINC'                      
   608      2441     no       no      EQUATION 'TINCRATIO'                    
   609      2448     no       no      COEFFICIENT 'REVSHR'                    
   610      2450     no       no      Formula for 'REVSHR'                    
   611      2452     no       no      EQUATION 'ENDW_PRICE'                   
   612      2457     no       no      COEFFICIENT 'ETRAE'                     
   613      2460     no       no      READ into 'ETRAE'                       
   614      2473     no       no      EQUATION 'NAEZEND_SUPPLY'               
   615      2486     no       no      COEFFICIENT 'ETRAEL1'                   
   616      2489     no       no      READ into 'ETRAEL1'                     
   617      2492     no       no      COEFFICIENT 'SIZE_LAND'                 
   618      2494     no       no      Formula for 'SIZE_LAND'                 
   619      2497     no       no      VARIABLE 'pmland'                       
   620      2499     no       no      COEFFICIENT 'REVSHR1'                   
   621      2501     no       no      Formula for 'REVSHR1'                   
   622      2503     no       no      Formula for 'REVSHR1'                   
   623      2506     no       no      EQUATION 'LAND_PRICE'                   
   624      2511     no       no      COEFFICIENT 'CROPRENTS'                 
   625      2513     no       no      Formula for 'CROPRENTS'                 
   626      2516     no       no      COEFFICIENT 'SIZE_CROP'                 
   627      2518     no       no      Formula for 'SIZE_CROP'                 
   628      2521     no       no      VARIABLE 'qocropland'                   
   629      2523     no       no      VARIABLE 'pmcropland'                   
   630      2525     no       no      COEFFICIENT 'REVSHR2'                   
   631      2527     no       no      Formula for 'REVSHR2'                   
   632      2529     no       no      Formula for 'REVSHR2'                   
   633      2532     no       no      EQUATION 'CROPLAND_PRICE'               
   634      2537     no       no      EQUATION 'AGRLAND_SUPPLY'               
   635      2543     no       no      EQUATION 'OTHLAND_SUPPLY'               
   636      2553     no       no      COEFFICIENT 'ETRAEL2'                   
   637      2556     no       no      READ into 'ETRAEL2'                     
   638      2559     no       no      EQUATION 'INDCROPLAND_SUPPLY'           
   639      2570     no       no      COEFFICIENT 'FY'                        
   640      2572     no       no      Formula for 'FY'                        
   641      2574     no       no      VARIABLE 'fincome'                      
   642      2576     no       no      EQUATION 'FACTORINCOME'                 
   643      2583     no       no      VARIABLE 'del_indtaxr'                  
   644      2585     no       no      EQUATION 'DINDTAXRATIO'                 
   645      2592     no       no      VARIABLE 'del_ttaxr'                    
   646      2594     no       no      EQUATION 'DTAXRATIO'                    
   647      2606     no       no      VARIABLE 'incomeslack'                  
   648      2623     no       no      COEFFICIENT 'PESHR'                     
   649      2625     no       no      READ into 'PESHR'                       
   650      2627     no       no      COEFFICIENT 'PESha'                     
   651      2629     no       no      READ into 'PESha'                       
   652      2631     no       no      VARIABLE 'pes_inflow'                   
   653      2634     no       no      VARIABLE 'pes_outflow'                  
   654      2640     no       no      VARIABLE 'pes_outflow_wld'              
   655      2652     no       no      SET 'PESDONORS'                         
   656      2652     no       no      Formula for Set 'PESDONORS'             
   657      2652     no       no      SUBSET 80 'PESDONORS' of 'REG'          
   658      2654     no       no                                              
   659      2654     no       no                                              
   660      2654     no       no      Formula for 'PESHR'                     
   661      2656     no       no      WRITE of set 'PESDONORS'                
   662      2658     no       no      WRITE from 'PESHR'                      
   663      2659     no       no      WRITE from 'INCOME'                     
   664      2663     no       no      EQUATION 'E_pes_contribution'           
   665      2666     no       no      EQUATION 'E_pes_balance'                
   666      2669     no       no      COEFFICIENT 'INDTAX'                    
   667      2671     no       no      Formula for 'INDTAX'                    
   668      2683     no       no      EQUATION 'REGIONALINCOME'               
   669      2705     no       no      VARIABLE 'dpav'                         
   670      2707     no       no      EQUATION 'DPARAV'                       
   671      2715     no       no      EQUATION 'UTILITELASTIC'                
   672      2720     no       no      EQUATION 'PRIVCONSEXP'                  
   673      2725     no       no      EQUATION 'GOVCONSEXP'                   
   674      2730     no       no      EQUATION 'SAVING'                       
   675      2741     no       no      VARIABLE 'p'                            
   676      2743     no       no      EQUATION 'PRICEINDEXREG'                
   677      2751     no       no      VARIABLE 'au'                           
   678      2753     no       no      VARIABLE 'dpsum'                        
   679      2756     no       no      COEFFICIENT 'DPARSUM'                   
   680      2758     no       no      READ into 'DPARSUM'                     
   681      2760     no       no      UPDATE of 'DPARSUM'                     
   682      2763     no       no      COEFFICIENT 'UTILELAS'                  
   683      2765     no       no      Formula for 'UTILELAS'                  
   684      2769     no       no      COEFFICIENT 'DPARPRIV'                  
   685      2771     no       no      Formula for 'DPARPRIV'                  
   686      2774     no       no      COEFFICIENT 'DPARGOV'                   
   687      2776     no       no      Formula for 'DPARGOV'                   
   688      2779     no       no      COEFFICIENT 'DPARSAVE'                  
   689      2781     no       no      Formula for 'DPARSAVE'                  
   690      2784     no       no      COEFFICIENT 'UTILPRIV'                  
   691      2786     no       no      Formula for 'UTILPRIV'                  
   692      2788     no       no      UPDATE of 'UTILPRIV'                    
   693      2791     no       no      COEFFICIENT 'UTILGOV'                   
   694      2793     no       no      Formula for 'UTILGOV'                   
   695      2795     no       no      UPDATE of 'UTILGOV'                     
   696      2798     no       no      COEFFICIENT 'UTILSAVE'                  
   697      2800     no       no      Formula for 'UTILSAVE'                  
   698      2802     no       no      UPDATE of 'UTILSAVE'                    
   699      2807     no       no      VARIABLE 'u'                            
   700      2810     no       no      EQUATION 'UTILITY'                      
   701      2820     no       no      EQUATION 'DISTPARSUM'                   
   702      2844     no       no      COEFFICIENT 'SHRDFM'                    
   703      2846     no       no      Formula for 'SHRDFM'                    
   704      2849     no       no      COEFFICIENT 'SHRDPM'                    
   705      2851     no       no      Formula for 'SHRDPM'                    
   706      2854     no       no      COEFFICIENT 'SHRDGM'                    
   707      2856     no       no      Formula for 'SHRDGM'                    
   708      2859     no       no      VARIABLE 'qds'                          
   709      2861     no       no      EQUATION 'MKTCLDOM'                     
   710      2869     no       no      COEFFICIENT 'SHRDM'                     
   711      2871     no       no      Formula for 'SHRDM'                     
   712      2874     no       no      COEFFICIENT 'SHRST'                     
   713      2876     no       no      Formula for 'SHRST'                     
   714      2879     no       no      COEFFICIENT 'SHRXMD'                    
   715      2881     no       no      Formula for 'SHRXMD'                    
   716      2884     no       no      VARIABLE 'tradslack'                    
   717      2892     no       no      EQUATION 'MKTCLTRD_MARG'                
   718      2900     no       no      EQUATION 'MKTCLTRD_NMRG'                
   719      2908     no       no      COEFFICIENT 'VIM'                       
   720      2910     no       no      Formula for 'VIM'                       
   721      2913     no       no      COEFFICIENT 'SHRIFM'                    
   722      2915     no       no      Formula for 'SHRIFM'                    
   723      2918     no       no      COEFFICIENT 'SHRIPM'                    
   724      2920     no       no      Formula for 'SHRIPM'                    
   725      2923     no       no      COEFFICIENT 'SHRIGM'                    
   726      2925     no       no      Formula for 'SHRIGM'                    
   727      2928     no       no      EQUATION 'MKTCLIMP'                     
   728      2936     no       no      COEFFICIENT 'SHREM'                     
   729      2938     no       no      Formula for 'SHREM'                     
   730      2941     no       no      EQUATION 'MKTCLENDWM'                   
   731      2950     no       no      EQUATION 'MKTCLENDWS'                   
   732      2964     no       no      VARIABLE 'walras_sup'                   
   733      2966     no       no      EQUATION 'WALRAS_S'                     
   734      2975     no       no      VARIABLE 'walras_dem'                   
   735      2977     no       no      EQUATION 'WALRAS_D'                     
   736      2986     no       no      VARIABLE 'walraslack'                   
   737      2993     no       no      EQUATION 'WALRAS'                       
   738      3040     no       no      VARIABLE 'vxwfob'                       
   739      3042     no       no      VARIABLE 'viwcif'                       
   740      3044     no       no      VARIABLE 'vxwreg'                       
   741      3046     no       no      VARIABLE 'viwreg'                       
   742      3049     no       no      COEFFICIENT 'VXW'                       
   743      3051     no       no      Formula for 'VXW'                       
   744      3053     no       no      Formula for 'VXW'                       
   745      3056     no       no      COEFFICIENT 'VXWREGION'                 
   746      3058     no       no      Formula for 'VXWREGION'                 
   747      3061     no       no      COEFFICIENT 'VIW'                       
   748      3063     no       no      Formula for 'VIW'                       
   749      3065     no       no      COEFFICIENT 'VIWREGION'                 
   750      3067     no       no      Formula for 'VIWREGION'                 
   751      3076     no       no      VARIABLE 'pfactreal'                    
   752      3078     no       no      EQUATION 'REALRETURN'                   
   753      3087     no       no      COEFFICIENT 'VENDWREG'                  
   754      3089     no       no      Formula for 'VENDWREG'                  
   755      3092     no       no      VARIABLE 'pfactor'                      
   756      3094     no       no      EQUATION 'PRIMFACTPR'                   
   757      3099     no       no      COEFFICIENT 'VENDWWLD'                  
   758      3101     no       no      Formula for 'VENDWWLD'                  
   759      3103     no       no      VARIABLE 'pfactwld'                     
   760      3105     no       no      EQUATION 'PRIMFACTPRWLD'                
   761      3118     no       no      VARIABLE 'psw'                          
   762      3120     no       no      EQUATION 'REGSUPRICE'                   
   763      3132     no       no      VARIABLE 'pdw'                          
   764      3134     no       no      EQUATION 'REGDEMPRICE'                  
   765      3144     no       no      VARIABLE 'tot'                          
   766      3146     no       no      EQUATION 'TOTeq'                        
   767      3157     no       no      COEFFICIENT 'GDP'                       
   768      3159     no       no      Formula for 'GDP'                       
   769      3172     no       no      VARIABLE 'vgdp'                         
   770      3174     no       no      EQUATION 'VGDP_r'                       
   771      3186     no       no      VARIABLE 'pgdp'                         
   772      3188     no       no      EQUATION 'PGDP_r'                       
   773      3199     no       no      VARIABLE 'qgdp'                         
   774      3201     no       no      EQUATION 'QGDP_r'                       
   775      3215     no       no      VARIABLE 'compvalad'                    
   776      3217     no       no      EQUATION 'COMPVALADEQ'                  
   777      3244     no       no      VARIABLE 'pxw'                          
   778      3247     no       no      COEFFICIENT 'VXWCOMMOD'                 
   779      3249     no       no      Formula for 'VXWCOMMOD'                 
   780      3252     no       no      COEFFICIENT 'VXWLD'                     
   781      3254     no       no      Formula for 'VXWLD'                     
   782      3257     no       no      COEFFICIENT 'VIWCOMMOD'                 
   783      3259     no       no      Formula for 'VIWCOMMOD'                 
   784      3262     no       no      COEFFICIENT 'PW_PM'                     
   785      3264     no       no      Formula for 'PW_PM'                     
   786      3266     no       no      COEFFICIENT 'VOW'                       
   787      3268     no       no      Formula for 'VOW'                       
   788      3270     no       no      Formula for 'VOW'                       
   789      3273     no       no      COEFFICIENT 'VWOW'                      
   790      3275     no       no      Formula for 'VWOW'                      
   791      3278     no       no      COEFFICIENT 'VWOU'                      
   792      3280     no       no      Formula for 'VWOU'                      
   793      3289     no       no      EQUATION 'VREGEX_ir_MARG'               
   794      3295     no       no      EQUATION 'VREGEX_ir_NMRG'               
   795      3301     no       no      EQUATION 'VREGEX_r'                     
   796      3306     no       no      VARIABLE 'vxwcom'                       
   797      3308     no       no      EQUATION 'VWLDEX_i'                     
   798      3313     no       no      VARIABLE 'vxwwld'                       
   799      3315     no       no      EQUATION 'VWLDEX'                       
   800      3319     no       no      EQUATION 'VREGIM_is'                    
   801      3325     no       no      EQUATION 'VREGIM_s'                     
   802      3330     no       no      VARIABLE 'viwcom'                       
   803      3332     no       no      EQUATION 'VWLDIM_i'                     
   804      3337     no       no      VARIABLE 'valuew'                       
   805      3339     no       no      EQUATION 'VWLDOUT'                      
   806      3344     no       no      VARIABLE 'valuewu'                      
   807      3346     no       no      EQUATION 'VWLDOUTUSE'                   
   808      3360     no       no      EQUATION 'PREGEX_ir_MARG'               
   809      3366     no       no      EQUATION 'PREGEX_ir_NMRG'               
   810      3371     no       no      VARIABLE 'pxwreg'                       
   811      3373     no       no      EQUATION 'PREGEX_r'                     
   812      3378     no       no      VARIABLE 'pxwcom'                       
   813      3380     no       no      EQUATION 'PWLDEX_i'                     
   814      3385     no       no      VARIABLE 'pxwwld'                       
   815      3387     no       no      EQUATION 'PWLDEX'                       
   816      3391     no       no      VARIABLE 'piw'                          
   817      3393     no       no      EQUATION 'PREGIM_is'                    
   818      3398     no       no      VARIABLE 'piwreg'                       
   819      3400     no       no      EQUATION 'PREGIM_s'                     
   820      3405     no       no      VARIABLE 'piwcom'                       
   821      3407     no       no      EQUATION 'PWLDIM_i'                     
   822      3412     no       no      VARIABLE 'pw'                           
   823      3414     no       no      EQUATION 'PWLDOUT'                      
   824      3419     no       no      VARIABLE 'pwu'                          
   825      3421     no       no      EQUATION 'PWLDUSE'                      
   826      3435     no       no      VARIABLE 'qxw'                          
   827      3437     no       no      EQUATION 'QREGEX_ir_MARG'               
   828      3442     no       no      EQUATION 'QREGEX_ir_NMRG'               
   829      3450     no       no      VARIABLE 'qxwreg'                       
   830      3452     no       no      EQUATION 'QREGEX_r'                     
   831      3460     no       no      VARIABLE 'qxwcom'                       
   832      3462     no       no      EQUATION 'QWLDEX_i'                     
   833      3470     no       no      VARIABLE 'qxwwld'                       
   834      3472     no       no      EQUATION 'QWLDEX'                       
   835      3479     no       no      VARIABLE 'qiw'                          
   836      3481     no       no      EQUATION 'QREGIM_is'                    
   837      3489     no       no      VARIABLE 'qiwreg'                       
   838      3491     no       no      EQUATION 'QREGIM_s'                     
   839      3499     no       no      VARIABLE 'qiwcom'                       
   840      3501     no       no      EQUATION 'QWLDIM_i'                     
   841      3509     no       no      VARIABLE 'qow'                          
   842      3511     no       no      EQUATION 'QWLDOUT'                      
   843      3517     no       no      VARIABLE 'qo_crops'                     
   844      3519     no       no      EQUATION 'QCROPOUT'                     
   845      3524     no       no      VARIABLE 'qow_crops'                    
   846      3526     no       no      EQUATION 'QCROPWOUT'                    
   847      3531     no       no      VARIABLE 'qo_live'                      
   848      3533     no       no      SET 'S@ruminant'                        
   849      3533     no       no      SUBSET 81 'S@ruminant' of 'TRAD_COMM'   
   850      3533     no       no      SET 'S@nonruminan'                      
   851      3533     no       no      SUBSET 82 'S@nonruminan' of 'TRAD_COMM' 
   852      3533     no       no      SUBSET 83 'S@ruminant' of 'NSAV_COMM'   
   853      3533     no       no      SUBSET 84 'S@nonruminan' of 'NSAV_COMM' 
   854      3533     no       no      EQUATION 'QLIVEOUT'                     
   855      3533     no       no      SUBSET 85 'S@ruminant' of 'PROD_COMM'   
   856      3533     no       no      SUBSET 86 'S@ruminant' of 'DEMD_COMM'   
   857      3533     no       no      SUBSET 87 'S@nonruminan' of 'PROD_COMM' 
   858      3533     no       no      SUBSET 88 'S@nonruminan' of 'DEMD_COMM' 
   859      3540     no       no      VARIABLE 'qow_live'                     
   860      3542     no       no      EQUATION 'QLIVEWOUT'                    
   861      3561     no       no      VARIABLE 'qowu'                         
   862      3563     no       no      EQUATION 'QWLDOUTU'                     
   863      3577     no       no      VARIABLE 'DTBALi'                       
   864      3583     no       no      EQUATION 'TRADEBAL_i'                   
   865      3589     no       no      VARIABLE 'DTBAL'                        
   866      3591     no       no      EQUATION 'TRADEBALANCE'                 
   867      3605     no       no      COEFFICIENT 'TBAL'                      
   868      3607     no       no      Formula for 'TBAL'                      
   869      3610     no       no      VARIABLE 'DTBALR'                       
   870      3612     no       no      EQUATION 'DTBALRATIO'                   
   871      3651     no       no      VARIABLE 'uelasev'                      
   872      3654     no       no      VARIABLE 'ueprivev'                     
   873      3657     no       no      VARIABLE 'ugev'                         
   874      3659     no       no      VARIABLE 'upev'                         
   875      3661     no       no      VARIABLE 'qsaveev'                      
   876      3663     no       no      VARIABLE 'yev'                          
   877      3665     no       no      VARIABLE 'ypev'                         
   878      3668     no       no      VARIABLE 'ygev'                         
   879      3672     no       no      COEFFICIENT 'INCOMEEV'                  
   880      3674     no       no      Formula for 'INCOMEEV'                  
   881      3676     no       no      UPDATE of 'INCOMEEV'                    
   882      3679     no       no      COEFFICIENT 'UTILPRIVEV'                
   883      3681     no       no      Formula for 'UTILPRIVEV'                
   884      3683     no       no      UPDATE of 'UTILPRIVEV'                  
   885      3686     no       no      COEFFICIENT 'UTILGOVEV'                 
   886      3688     no       no      Formula for 'UTILGOVEV'                 
   887      3690     no       no      UPDATE of 'UTILGOVEV'                   
   888      3693     no       no      COEFFICIENT 'UTILSAVEEV'                
   889      3695     no       no      Formula for 'UTILSAVEEV'                
   890      3697     no       no      UPDATE of 'UTILSAVEEV'                  
   891      3706     no       no      EQUATION 'GOVUSHD'                      
   892      3717     no       no      VARIABLE 'qpev'                         
   893      3721     no       no      COEFFICIENT 'VPAEV'                     
   894      3724     no       no      Formula for 'VPAEV'                     
   895      3726     no       no      UPDATE of 'VPAEV'                       
   896      3729     no       no      COEFFICIENT 'VPAREGEV'                  
   897      3731     no       no      Formula for 'VPAREGEV'                  
   898      3737     no       no      COEFFICIENT 'CONSHREV'                  
   899      3740     no       no      Formula for 'CONSHREV'                  
   900      3742     no       no      COEFFICIENT 'EYEV'                      
   901      3745     no       no      Formula for 'EYEV'                      
   902      3753     no       no      EQUATION 'PRIVDMNDSEV'                  
   903      3761     no       no      COEFFICIENT 'UELASPRIVEV'               
   904      3764     no       no      Formula for 'UELASPRIVEV'               
   905      3767     no       no      EQUATION 'PRIVATEUEV'                   
   906      3772     no       no      COEFFICIENT 'XWCONSHREV'                
   907      3775     no       no      Formula for 'XWCONSHREV'                
   908      3778     no       no      EQUATION 'UTILELASPRIVEV'               
   909      3794     no       no      VARIABLE 'ysaveev'                      
   910      3797     no       no      COEFFICIENT 'PRIVEXPEV'                 
   911      3800     no       no      Formula for 'PRIVEXPEV'                 
   912      3802     no       no      UPDATE of 'PRIVEXPEV'                   
   913      3808     no       no      COEFFICIENT 'GOVEXPEV'                  
   914      3811     no       no      Formula for 'GOVEXPEV'                  
   915      3813     no       no      UPDATE of 'GOVEXPEV'                    
   916      3816     no       no      COEFFICIENT 'SAVEEV'                    
   917      3819     no       no      Formula for 'SAVEEV'                    
   918      3821     no       no      UPDATE of 'SAVEEV'                      
   919      3824     no       no      COEFFICIENT 'XSHRPRIVEV'                
   920      3827     no       no      Formula for 'XSHRPRIVEV'                
   921      3830     no       no      COEFFICIENT 'XSHRGOVEV'                 
   922      3833     no       no      Formula for 'XSHRGOVEV'                 
   923      3836     no       no      COEFFICIENT 'XSHRSAVEEV'                
   924      3838     no       no      Formula for 'XSHRSAVEEV'                
   925      3841     no       no      VARIABLE 'dpavev'                       
   926      3843     no       no      EQUATION 'DPARAVEV'                     
   927      3851     no       no      EQUATION 'UTILITELASTICEV'              
   928      3856     no       no      EQUATION 'PCONSEXPEV'                   
   929      3861     no       no      EQUATION 'GOVCONSEXPEV'                 
   930      3866     no       no      EQUATION 'SAVINGEV'                     
   931      3871     no       no      EQUATION 'SAVEUEV'                      
   932      3880     no       no      COEFFICIENT 'UTILELASEV'                
   933      3883     no       no      Formula for 'UTILELASEV'                
   934      3885     no       no      UPDATE of 'UTILELASEV'                  
   935      3888     no       no      EQUATION 'INCOME_EQUIV'                 
   936      3904     no       no      VARIABLE 'EV'                           
   937      3906     no       no      EQUATION 'EVREG'                        
   938      3911     no       no      VARIABLE 'WEV'                          
   939      3913     no       no      EQUATION 'EVWLD'                        
   940      3925     no       no      COEFFICIENT 'EVSCALFACT'                
   941      3927     no       no      Formula for 'EVSCALFACT'                
   942      3930     no       no      COEFFICIENT 'VTMD'                      
   943      3932     no       no      Formula for 'VTMD'                      
   944      3935     no       no      VARIABLE 'EV_ALT'                       
   945      3937     no       no      EQUATION 'EV_DECOMPOSITION'             
   946      3980     no       no      VARIABLE 'WEV_ALT'                      
   947      3982     no       no      EQUATION 'WORLDEV'                      
   948      3986     no       no      VARIABLE 'CNTdpar'                      
   949      3988     no       no      EQUATION 'CNT_WEV_dpar'                 
   950      3996     no       no      VARIABLE 'CNTpopr'                      
   951      3998     no       no      EQUATION 'CONT_EV_pop'                  
   952      4002     no       no      VARIABLE 'CNTqor'                       
   953      4004     no       no      EQUATION 'CONT_EV_qor'                  
   954      4010     no       no      VARIABLE 'CNTqoir'                      
   955      4013     no       no      EQUATION 'CONT_EV_qoir'                 
   956      4017     no       no      VARIABLE 'CNTqfer'                      
   957      4020     no       no      EQUATION 'CONT_EV_qfer'                 
   958      4026     no       no      VARIABLE 'CNTqfeir'                     
   959      4029     no       no      EQUATION 'CONT_EV_qfeir'                
   960      4035     no       no      VARIABLE 'CNTqfeijr'                    
   961      4038     no       no      EQUATION 'CONT_EV_qfeijr'               
   962      4043     no       no      VARIABLE 'CNTqfmr'                      
   963      4046     no       no      EQUATION 'CONT_EV_qfmr'                 
   964      4052     no       no      VARIABLE 'CNTqfmir'                     
   965      4055     no       no      EQUATION 'CONT_EV_qfmir'                
   966      4061     no       no      VARIABLE 'CNTqfmijr'                    
   967      4064     no       no      EQUATION 'CONT_EV_qfmijr'               
   968      4069     no       no      VARIABLE 'CNTqfdr'                      
   969      4072     no       no      EQUATION 'CONT_EV_qfdr'                 
   970      4078     no       no      VARIABLE 'CNTqfdir'                     
   971      4081     no       no      EQUATION 'CONT_EV_qfdir'                
   972      4087     no       no      VARIABLE 'CNTqfdijr'                    
   973      4090     no       no      EQUATION 'CONT_EV_qfdijr'               
   974      4095     no       no      VARIABLE 'CNTqpmr'                      
   975      4098     no       no      EQUATION 'CONT_EV_qpmr'                 
   976      4104     no       no      VARIABLE 'CNTqpmir'                     
   977      4107     no       no      EQUATION 'CONT_EV_qpmir'                
   978      4111     no       no      VARIABLE 'CNTqpdr'                      
   979      4114     no       no      EQUATION 'CONT_EV_qpdr'                 
   980      4120     no       no      VARIABLE 'CNTqpdir'                     
   981      4123     no       no      EQUATION 'CONT_EV_qpdir'                
   982      4127     no       no      VARIABLE 'CNTqgmr'                      
   983      4130     no       no      EQUATION 'CONT_EV_qgmr'                 
   984      4136     no       no      VARIABLE 'CNTqgmir'                     
   985      4139     no       no      EQUATION 'CONT_EV_qgmir'                
   986      4143     no       no      VARIABLE 'CNTqgdr'                      
   987      4146     no       no      EQUATION 'CONT_EV_qgdr'                 
   988      4152     no       no      VARIABLE 'CNTqgdir'                     
   989      4155     no       no      EQUATION 'CONT_EV_qgdir'                
   990      4159     no       no      VARIABLE 'CNTqxsr'                      
   991      4162     no       no      EQUATION 'CONT_EV_qxsr'                 
   992      4168     no       no      VARIABLE 'CNTqxsirs'                    
   993      4171     no       no      EQUATION 'CONT_EV_qxsirs'               
   994      4176     no       no      VARIABLE 'CNTqimr'                      
   995      4179     no       no      EQUATION 'CONT_EV_qimr'                 
   996      4185     no       no      VARIABLE 'CNTqimisr'                    
   997      4188     no       no      EQUATION 'CONT_EV_qimisr'               
   998      4193     no       no      VARIABLE 'CNTalleffr'                   
   999      4195     no       no      EQUATION 'CONT_EV_alleffr'              
  1000      4214     no       no      VARIABLE 'CNTalleffir'                  
  1001      4217     no       no      EQUATION 'CONT_EV_alleffir_E'           
  1002      4223     no       no      EQUATION 'CONT_EV_alleffir_T'           
  1003      4237     no       no      VARIABLE 'CNTtotr'                      
  1004      4240     no       no      EQUATION 'CONT_EV_totr'                 
  1005      4249     no       no      VARIABLE 'CNTcgdsr'                     
  1006      4251     no       no      EQUATION 'CNT_EV_cgdsr'                 
  1007      4257     no       no      VARIABLE 'CNTendwr'                     
  1008      4259     no       no      EQUATION 'CONT_EV_endwr'                
  1009      4266     no       no      VARIABLE 'CNTendwir'                    
  1010      4268     no       no      EQUATION 'CONT_EV_endwir'               
  1011      4272     no       no      VARIABLE 'CNTtechr'                     
  1012      4274     no       no      EQUATION 'CONT_EV_techr'                
  1013      4287     no       no      VARIABLE 'CNTtech_aor'                  
  1014      4290     no       no      EQUATION 'CONT_EV_tech_aor'             
  1015      4295     no       no      VARIABLE 'CNTtech_aoir'                 
  1016      4298     no       no      EQUATION 'CONT_EV_tech_aoir'            
  1017      4302     no       no      VARIABLE 'CNTtech_afer'                 
  1018      4305     no       no      EQUATION 'CONT_EV_tech_afer'            
  1019      4311     no       no      VARIABLE 'CNTtech_afeijr'               
  1020      4314     no       no      EQUATION 'CONT_EV_tech_afeijr'          
  1021      4318     no       no      VARIABLE 'CNTtech_avar'                 
  1022      4321     no       no      EQUATION 'CONT_EV_tech_avar'            
  1023      4326     no       no      VARIABLE 'CNTtech_avajr'                
  1024      4329     no       no      EQUATION 'CONT_EV_tech_avajr'           
  1025      4333     no       no      VARIABLE 'CNTtech_afr'                  
  1026      4336     no       no      EQUATION 'CONT_EV_tech_afr'             
  1027      4343     no       no      VARIABLE 'CNTtech_afijr'                
  1028      4346     no       no      EQUATION 'CONT_EV_tech_afijr'           
  1029      4351     no       no      VARIABLE 'CNTtech_atrr'                 
  1030      4354     no       no      EQUATION 'CONT_EV_tech_atrr'            
  1031      4361     no       no      VARIABLE 'CNTtech_afmfdsd'              
  1032      4364     no       no      EQUATION 'CONT_EV_tech_afmfdsd'         
  1033      4369     no       no      VARIABLE 'CNTtech_amsr'                 
  1034      4371     no       no      EQUATION 'CONT_EV_tech_amsr'            
  1035      4377     no       no      VARIABLE 'CNTtech_amsirs'               
  1036      4380     no       no      EQUATION 'CONT_EV_tech_amsirs'          
  1037      4384     no       no      VARIABLE 'CNTkbr'                       
  1038      4387     no       no      EQUATION 'CONT_EV_kbr'                  
  1039      4401     no       no      COEFFICIENT 'SX_IR'                     
  1040      4403     no       no      Formula for 'SX_IR'                     
  1041      4408     no       no      Formula for 'SX_IR'                     
  1042      4414     no       no      COEFFICIENT 'VTICOMM'                   
  1043      4416     no       no      Formula for 'VTICOMM'                   
  1044      4419     no       no      COEFFICIENT 'VIWDIRALL'                 
  1045      4421     no       no      Formula for 'VIWDIRALL'                 
  1046      4423     no       no      Formula for 'VIWDIRALL'                 
  1047      4426     no       no      COEFFICIENT 'VIWDATOT'                  
  1048      4428     no       no      Formula for 'VIWDATOT'                  
  1049      4431     no       no      COEFFICIENT 'SM_IR'                     
  1050      4433     no       no      Formula for 'SM_IR'                     
  1051      4436     no       no      ZERODIVIDE instruction                  
  1052      4437     no       no      COEFFICIENT 'SX_IRS'                    
  1053      4439     no       no      Formula for 'SX_IRS'                    
  1054      4441     no       no      Formula for 'SX_IRS'                    
  1055      4443     no       no      ZERODIVIDE instruction                  
  1056      4445     no       no      COEFFICIENT 'SXT_IR'                    
  1057      4447     no       no      Formula for 'SXT_IR'                    
  1058      4450     no       no      VARIABLE 'px_ir'                        
  1059      4452     no       no      EQUATION 'EXPPRICE_MARG'                
  1060      4457     no       no      EQUATION 'EXPPRICE_NMRG'                
  1061      4462     no       no      COEFFICIENT 'SM_IRS'                    
  1062      4464     no       no      Formula for 'SM_IRS'                    
  1063      4467     no       no      COEFFICIENT 'SMT_IR'                    
  1064      4469     no       no      Formula for 'SMT_IR'                    
  1065      4472     no       no      VARIABLE 'pm_ir'                        
  1066      4474     no       no      EQUATION 'IMPPRICE1_MARG'               
  1067      4479     no       no      EQUATION 'IMPPRICE1_NMRG'               
  1068      4484     no       no      COEFFICIENT 'SW_IR'                     
  1069      4486     no       no      Formula for 'SW_IR'                     
  1070      4490     no       no      Formula for 'SW_IR'                     
  1071      4494     no       no      VARIABLE 'px_i'                         
  1072      4496     no       no      EQUATION 'WRLDPRICEi'                   
  1073      4501     no       no      COEFFICIENT 'SW_I'                      
  1074      4503     no       no      Formula for 'SW_I'                      
  1075      4508     no       no      Formula for 'SW_I'                      
  1076      4514     no       no      VARIABLE 'px_'                          
  1077      4516     no       no      EQUATION 'WRLDPRICE'                    
  1078      4520     no       no      VARIABLE 'c1_ir'                        
  1079      4522     no       no      EQUATION 'c1_irEQ'                      
  1080      4527     no       no      VARIABLE 'c2_ir'                        
  1081      4529     no       no      EQUATION 'c2_irEQ'                      
  1082      4534     no       no      VARIABLE 'c3_ir'                        
  1083      4536     no       no      EQUATION 'c3_irEQ'                      
  1084      4541     no       no      VARIABLE 'c1_r'                         
  1085      4543     no       no      EQUATION 'c1_rEQ'                       
  1086      4548     no       no      VARIABLE 'c2_r'                         
  1087      4550     no       no      EQUATION 'c2_rEQ'                       
  1088      4555     no       no      VARIABLE 'c3_r'                         
  1089      4557     no       no      EQUATION 'c3_rEQ'                       
  1090      4562     no       no      VARIABLE 'tot2'                         
  1091      4564     no       no      EQUATION 'TOT2eq'                       
  1092      4585     no       no      SET 'LAND_COVER'                        
  1093      4587     no       no      SET 'UNMNGLAND'                         
  1094      4589     no       no      SUBSET 89 'UNMNGLAND' of 'LAND_COVER'   
  1095      4591     no       no      SUBSET 90 'UNMNGLAND' of 'LAND_COVER'   
  1096      4592     no       no      SET 'PROD_COVER'                        
  1097      4592     no       no      SUBSET 91 'PROD_COVER' of 'LAND_COVER'  
  1098      4595     no       no      SET 'PROD2_COVER'                       
  1099      4595     no       no      SUBSET 92 'FOREST_COMM' of 'PROD2_COVER'
  1100      4595     no       no      SUBSET 93 'GRAZE_COMM' of 'PROD2_COVER' 
  1101      4598     no       no      SUBSET 94 'PROD2_COVER' of 'PROD_COVER' 
  1102      4598     no       no      SUBSET 95 'PROD2_COVER' of 'LAND_COVER' 
  1103      4598     no       no      SUBSET 96 'FOREST_COMM' of 'PROD_COVER' 
  1104      4598     no       no      SUBSET 97 'GRAZE_COMM' of 'PROD_COVER'  
  1105      4598     no       no      SUBSET 98 'FOREST_COMM' of 'LAND_COVER' 
  1106      4598     no       no      SUBSET 99 'GRAZE_COMM' of 'LAND_COVER'  
  1107      4599     no       no      SUBSET 100 'PROD2_COVER' of 'LAND_COMM' 
  1108      4599     no       no      SUBSET 101 'PROD2_COVER' of 'TRAD_COMM' 
  1109      4599     no       no      SUBSET 102 'PROD2_COVER' of 'PROD_COMM' 
  1110      4599     no       no      SUBSET 103 'PROD2_COVER' of 'DEMD_COMM' 
  1111      4599     no       no      SUBSET 104 'PROD2_COVER' of 'NSAV_COMM' 
  1112      4601     no       no      SET 'ACROP_COMM'                        
  1113      4601     no       no      SUBSET 105 'ACROP_COMM' of 'PROD_COVER' 
  1114      4601     no       no      SUBSET 106 'ACROP_COMM' of 'LAND_COVER' 
  1115      4603     no       no      VARIABLE 'lcoveraez'                    
  1116      4610     no       no      VARIABLE 'p_LANDCOVER_L'                
  1117      4610     no       no      COEFFICIENT 'LANDCOVER_L'               
  1118      4613     no       no      READ into 'LANDCOVER_L'                 
  1119      4616     no       no      COEFFICIENT 'LANDCOVER'                 
  1120      4619     no       no      Formula for 'LANDCOVER'                 
  1121      4622     no       no      VARIABLE 'p_LANDCOVER_R'                
  1122      4622     no       no      COEFFICIENT 'LANDCOVER_R'               
  1123      4624     no       no      Formula for 'LANDCOVER_R'               
  1124      4624     no       no      EQUATION 'E_LANDCOVER_R'                
  1125      4627     no       no      VARIABLE 'p_LANDCOVER_W'                
  1126      4627     no       no      COEFFICIENT 'LANDCOVER_W'               
  1127      4629     no       no      Formula for 'LANDCOVER_W'               
  1128      4629     no       no      EQUATION 'E_LANDCOVER_W'                
  1129      4632     no       no      ZERODIVIDE instruction                  
  1130      4633     no       no      ZERODIVIDE instruction                  
  1131      4635     no       no      COEFFICIENT 'NVFM'                      
  1132      4638     no       no      Formula for 'NVFM'                      
  1133      4642     no       no      VARIABLE 'p_RENTCOVER'                  
  1134      4642     no       no      COEFFICIENT 'RENTCOVER'                 
  1135      4645     no       no      Formula for 'RENTCOVER'                 
  1136      4648     no       no      Formula for 'RENTCOVER'                 
  1137      4656     no       no      EQUATION 'E_RENTCOVER1'                 
  1138      4659     no       no      EQUATION 'E_RENTCOVER2'                 
  1139      4664     no       no      VARIABLE 'p_RENTCOVERAV'                
  1140      4664     no       no      COEFFICIENT 'RENTCOVERAV'               
  1141      4667     no       no      Formula for 'RENTCOVERAV'               
  1142      4671     no       no      EQUATION 'E_RENTCOVERAV'                
  1143      4675     no       no      VARIABLE 'p_HARVSTAREA_L'               
  1144      4675     no       no      COEFFICIENT 'HARVSTAREA_L'              
  1145      4678     no       no      READ into 'HARVSTAREA_L'                
  1146      4681     no       no      COEFFICIENT 'HARVSTAREA'                
  1147      4684     no       no      Formula for 'HARVSTAREA'                
  1148      4695     no       no      COEFFICIENT 'HA_LCSHR'                  
  1149      4698     no       no      Formula for 'HA_LCSHR'                  
  1150      4752     no       no      COEFFICIENT 'ETA'                       
  1151      4755     no       no      READ into 'ETA'                         
  1152      4763     no       no      VARIABLE 'harvstaez'                    
  1153      4766     no       no      VARIABLE 'harvstslack'                  
  1154      4769     no       no      VARIABLE 'harvstcom'                    
  1155      4773     no       no      EQUATION 'E_HARVSTAEZ'                  
  1156      4780     no       no      VARIABLE 'areaadjust'                   
  1157      4784     no       no      EQUATION 'E_NONCROPCOV'                 
  1158      4788     no       no      COEFFICIENT 'LCOVERSHR'                 
  1159      4791     no       no      Formula for 'LCOVERSHR'                 
  1160      4796     no       no      EQUATION 'FIXCOVER'                     
  1161      4802     no       no      EQUATION 'E_AREAADJUST'                 
  1162      4809     no       no      VARIABLE 'lcovercom'                    
  1163      4813     no       no      COEFFICIENT 'COMLCOVERSHR'              
  1164      4816     no       no      Formula for 'COMLCOVERSHR'              
  1165      4821     no       no      EQUATION 'COMCOVER'                     
  1166      4827     no       no      VARIABLE 'p_RENTCROP'                   
  1167      4827     no       no      COEFFICIENT 'RENTCROP'                  
  1168      4830     no       no      Formula for 'RENTCROP'                  
  1169      4833     no       no      EQUATION 'E_RENTCROP1'                  
  1170      4837     no       no      VARIABLE 'p_RENTCROPAV'                 
  1171      4837     no       no      COEFFICIENT 'RENTCROPAV'                
  1172      4840     no       no      Formula for 'RENTCROPAV'                
  1173      4844     no       no      EQUATION 'E_RENTCROPAV'                 
  1174      4848     no       no      EQUATION 'E_HARVSTAREA'                 
  1175      4854     no       no      COEFFICIENT 'HAREASHR'                  
  1176      4857     no       no      Formula for 'HAREASHR'                  
  1177      4862     no       no      EQUATION 'FIXAREA'                      
  1178      4868     no       no      EQUATION 'CROPCOVER'                    
  1179      4873     no       no      COEFFICIENT 'AEZHAREASHR'               
  1180      4876     no       no      Formula for 'AEZHAREASHR'               
  1181      4881     no       no      EQUATION 'COMHARVEST'                   
  1182      4890     no       no      VARIABLE 'hareaslackreg'                
  1183      4894     no       no      COEFFICIENT 'AEZHREGSHR'                
  1184      4897     no       no      Formula for 'AEZHREGSHR'                
  1185      4903     no       no      EQUATION 'HARVCOVERSLACK'               
  1186      4912     no       no      VARIABLE 'xlcoveraez'                   
  1187      4915     no       no      EQUATION 'E_XLCOVERAEZ'                 
  1188      4923     no       no      VARIABLE 'LUC'                          
  1189      4925     no       no      EQUATION 'E_LUC'                        
  1190      4931     no       no      VARIABLE 'cHARVSTAREA'                  
  1191      4933     no       no      EQUATION 'E_cHARVSTAREA'                
  1192      4966     no       no      COEFFICIENT 'PARM_C'                    
  1193      4968     no       no      READ into 'PARM_C'                      
  1194      4970     no       no      VARIABLE 'p_ECONLAND'                   
  1195      4970     no       no      COEFFICIENT 'ECONLAND'                  
  1196      4972     no       no      Formula for 'ECONLAND'                  
  1197      4975     no       no      VARIABLE 'p_ECONLANDW'                  
  1198      4975     no       no      COEFFICIENT 'ECONLANDW'                 
  1199      4977     no       no      Formula for 'ECONLANDW'                 
  1200      4977     no       no      EQUATION 'E_ECONLANDW'                  
  1201      4980     no       no      VARIABLE 'p_slackland'                  
  1202      4983     no       no      VARIABLE 'p_slacklandr'                 
  1203      4987     no       no      VARIABLE 'c_MAX_LAND'                   
  1204      4987     no       no      COEFFICIENT 'MAX_LAND'                  
  1205      4989     no       no      READ into 'MAX_LAND'                    
  1206      4992     no       no      COEFFICIENT 'MAX_LAND_INT'              
  1207      4994     no       no      Formula for 'MAX_LAND_INT'              
  1208      4997     no       no      COEFFICIENT 'ELAND'                     
  1209      4999     no       no      Formula for 'ELAND'                     
  1210      5002     no       no      ZERODIVIDE instruction                  
  1211      5004     no       no      COEFFICIENT 'MAXRATIO'                  
  1212      5006     no       no      Formula for 'MAXRATIO'                  
  1213      5009     no       no      ZERODIVIDE instruction                  
  1214      5019     no       no      EQUATION 'E_LAND_SUPPLY'                
  1215      5026     no       no      COEFFICIENT 'ID_PES'                    
  1216      5028     no       no      READ into 'ID_PES'                      
  1217      5030     no       no      EQUATION 'E_PES_COST'                   
  1218      5039     no       no      EQUATION 'E_LAND_ENDW'                  
  1219      5053     no       no      VARIABLE 'p_PRODUCTION'                 
  1220      5053     no       no      COEFFICIENT 'PRODUCTION'                
  1221      5056     no       no      READ into 'PRODUCTION'                  
  1222      5059     no       no      SUBSET 107 'CROP_COMM' of 'NSAV_COMM'   
  1223      5062     no       no      EQUATION 'E_PRODUCTION'                 
  1224      5068     no       no      ZERODIVIDE instruction                  
  1225      5069     no       no      ZERODIVIDE instruction                  
  1226      5073     no       no      COEFFICIENT 'YIELD'                     
  1227      5076     no       no      VARIABLE 'p_YIELD'                      
  1228      5079     no       no      Formula for 'YIELD'                     
  1229      5083     no       no      UPDATE of 'YIELD'                       
  1230      5086     no       no      EQUATION 'E_YIELD'                      
  1231      5091     no       no      ZERODIVIDE instruction                  
  1232      5092     no       no      ZERODIVIDE instruction                  
  1233      5096     no       no      VARIABLE 'p_YIELDGL'                    
  1234      5096     no       no      COEFFICIENT 'YIELDGL'                   
  1235      5099     no       no      Formula for 'YIELDGL'                   
  1236      5099     no       no      EQUATION 'E_YIELDGL'                    
  1237      5103     no       no      COEFFICIENT 'PRODUCTSHR'                
  1238      5106     no       no      Formula for 'PRODUCTSHR'                
  1239      5111     no       no      VARIABLE 'globalouput'                  
  1240      5114     no       no      EQUATION 'E_GLOBALOUTPUT'               
  1241      5119     no       no      VARIABLE 'cnt_yield'                    
  1242      5122     no       no      EQUATION 'E_CNT_YIELD'                  
  1243      5128     no       no      VARIABLE 'cnt_yieldint'                 
  1244      5131     no       no      EQUATION 'E_CNT_YIELDI'                 
  1245      5137     no       no      VARIABLE 'cnt_yieldext'                 
  1246      5140     no       no      EQUATION 'E_CNT_YIELDE'                 
  1247      5146     no       no      VARIABLE 'cnt_area'                     
  1248      5149     no       no      EQUATION 'E_CNT_AREA'                   
  1249      5158     no       no      ZERODIVIDE instruction                  
  1250      5159     no       no      ZERODIVIDE instruction                  
  1251      5161     no       no      COEFFICIENT 'YIELDREG'                  
  1252      5164     no       no      Formula for 'YIELDREG'                  
  1253      5168     no       no      COEFFICIENT 'PRODUCTSHREG'              
  1254      5171     no       no      Formula for 'PRODUCTSHREG'              
  1255      5176     no       no      ZERODIVIDE instruction                  
  1256      5177     no       no      ZERODIVIDE instruction                  
  1257      5179     no       no      VARIABLE 'regouput'                     
  1258      5182     no       no      EQUATION 'E_REGOUTPUT'                  
  1259      5187     no       no      VARIABLE 'cnt_yieldreg'                 
  1260      5190     no       no      EQUATION 'E_CNT_YIELDREG'               
  1261      5196     no       no      VARIABLE 'cnt_yieldintreg'              
  1262      5199     no       no      EQUATION 'E_CNT_YIELDIREG'              
  1263      5205     no       no      VARIABLE 'cnt_yieldextreg'              
  1264      5208     no       no      EQUATION 'E_CNT_YIELDEREG'              
  1265      5214     no       no      VARIABLE 'cnt_areareg'                  
  1266      5217     no       no      EQUATION 'E_CNT_AREAREG'                
  1267      5381     no       no      SET 'GDPEX'                             
  1268      5385     no       no      COEFFICIENT 'VEXPORTS'                  
  1269      5388     no       no      Formula for 'VEXPORTS'                  
  1270      5394     no       no      COEFFICIENT 'VIMPORTS'                  
  1271      5397     no       no      Formula for 'VIMPORTS'                  
  1272      5401     no       no      COEFFICIENT 'GDPEXP'                    
  1273      5403     no       no      Formula for 'GDPEXP'                    
  1274      5405     no       no      Formula for 'GDPEXP'                    
  1275      5406     no       no      Formula for 'GDPEXP'                    
  1276      5407     no       no      Formula for 'GDPEXP'                    
  1277      5408     no       no      Formula for 'GDPEXP'                    
  1278      5409     no       no      Formula for 'GDPEXP'                    
  1279      5416     no       no      VARIABLE 'qp_ind'                       
  1280      5418     no       no      VARIABLE 'qg_ind'                       
  1281      5420     no       no      VARIABLE 'qfobxw_ind'                   
  1282      5422     no       no      VARIABLE 'qstxw_ind'                    
  1283      5424     no       no      COEFFICIENT 'VP_ind'                    
  1284      5426     no       no      COEFFICIENT 'VG_ind'                    
  1285      5428     no       no      COEFFICIENT 'VFOBXW_ind'                
  1286      5430     no       no      COEFFICIENT 'VSTXW_ind'                 
  1287      5432     no       no      Formula for 'VP_ind'                    
  1288      5434     no       no      Formula for 'VG_ind'                    
  1289      5436     no       no      Formula for 'VFOBXW_ind'                
  1290      5438     no       no      Formula for 'VSTXW_ind'                 
  1291      5441     no       no      EQUATION 'E_qp'                         
  1292      5446     no       no      EQUATION 'E_qg'                         
  1293      5451     no       no      EQUATION 'E_qfobxw'                     
  1294      5456     no       no      EQUATION 'E_qstxw'                      
  1295      5461     no       no      VARIABLE 'pfobxw_ind'                   
  1296      5463     no       no      VARIABLE 'pstxw_ind'                    
  1297      5465     no       no      VARIABLE 'pgdpexp_ind'                  
  1298      5467     no       no      VARIABLE 'qgdpexp_ind'                  
  1299      5469     no       no      VARIABLE 'vgdpexp_ind'                  
  1300      5472     no       no      EQUATION 'E_pfobxw'                     
  1301      5477     no       no      EQUATION 'E_pstxw'                      
  1302      5482     no       no      EQUATION 'E_pgdpexp_ind'                
  1303      5489     no       no      EQUATION 'E_qgdpexp'                    
  1304      5496     no       no      EQUATION 'E_vgdpexp'                    
  1305      5501     no       no      VARIABLE 'pgdplaspeyres'                
  1306      5503     no       no      VARIABLE 'qgdplaspeyres'                
  1307      5505     no       no      VARIABLE 'pgdppaasche'                  
  1308      5507     no       no      VARIABLE 'qgdppaasche'                  
  1309      5509     no       no      VARIABLE 'pgdpfisher'                   
  1310      5511     no       no      VARIABLE 'qgdpfisher'                   
  1311      5513     no       no      VARIABLE 'vgdpfisher'                   
  1312      5515     no       no      COEFFICIENT 'GDPEXP_FPIQ'               
  1313      5517     no       no      COEFFICIENT 'GDPEXP_IPFQ'               
  1314      5519     no       no      Formula for 'GDPEXP_FPIQ'               
  1315      5521     no       no      Formula for 'GDPEXP_IPFQ'               
  1316      5523     no       no      UPDATE of 'GDPEXP_FPIQ'                 
  1317      5525     no       no      UPDATE of 'GDPEXP_IPFQ'                 
  1318      5528     no       no      EQUATION 'E_pgdplaspeyres'              
  1319      5533     no       no      EQUATION 'E_qgdplaspeyres'              
  1320      5538     no       no      EQUATION 'E_pgdppaasche'                
  1321      5543     no       no      EQUATION 'E_qgdppaasche'                
  1322      5548     no       no      EQUATION 'E_pgdpfisher'                 
  1323      5552     no       no      EQUATION 'E_qgdpfisher'                 
  1324      5556     no       no      EQUATION 'E_vgdpfisher'                 
  1325      5561     no       no      VARIABLE 'preg'                         
  1326      5563     no       no      EQUATION 'PHOUSEHOLD'                   
  1327      5569     no       no      VARIABLE 'pfacthouse'                   
  1328      5572     no       no      EQUATION 'HOUSERETURN'                  
  1329      5577     no       no      VARIABLE 'pfacthouse_l'                 
  1330      5579     no       no      EQUATION 'E_HOUSERETURN_LAND'           
  1331      5583     no       no      VARIABLE 'pfactreal_l'                  
  1332      5585     no       no      EQUATION 'E_REALRETURN_LAND'            
  1333      5602     no       no      SET 'REGINC'                            
  1334      5605     no       no      MAPPING 'MREGINC'                       
  1335      5607     no       no      READ into 'MREGINC'                     
  1336      5609     no       no      COEFFICIENT 'POPR'                      
  1337      5611     no       no      READ into 'POPR'                        
  1338      5613     no       no      UPDATE of 'POPR'                        
  1339      5616     no       no      VARIABLE 'delQGDP'                      
  1340      5618     no       no      EQUATION 'E_delQGDP'                    
  1341      5623     no       no      VARIABLE 'qgdpreginc'                   
  1342      5625     no       no      EQUATION 'E_qgdpreginc'                 
  1343      5630     no       no      COEFFICIENT 'INITGDP'                   
  1344      5632     no       no      Formula for 'INITGDP'                   
  1345      5634     no       no      POSTSIM                                 
  1346      5635     no       no      COEFFICIENT 'REALGDP'                   
  1347      5637     no       no      Formula for 'REALGDP'                   
  1348      5639     no       no      COEFFICIENT 'VALRGDP'                   
  1349      5641     no       no      Formula for 'VALRGDP'                   
  1350      5643     no       no      WRITE from 'REALGDP'                    
  1351      5645     no       no      WRITE from 'VALRGDP'                    
  1352      5646     no       no      POSTSIM                                 
  1353      5648     no       no      WRITE from 'GDP'                        
  1354      5650     no       no      WRITE from 'GDP'                        
  1355      5659     no       no      VARIABLE 'contGDPEXP'                   
  1356      5661     no       no      COEFFICIENT 'BGDP'                      
  1357      5663     no       no      Formula for 'BGDP'                      
  1358      5665     no       no      UPDATE of 'BGDP'                        
  1359      5667     no       no      EQUATION 'E_contGDPEXP'                 
  1360      5678     no       no      VARIABLE 'qgdpexp'                      
  1361      5680     no       no      EQUATION 'E_qgdpexp2'                   
  1362      5686     no       no      SET 'GDPIN'                             
  1363      5686     no       no      SUBSET 108 'ENDW_COMM' of 'GDPIN'       
  1364      5686     no       no      SUBSET 109 'ENDWS_COMM' of 'GDPIN'      
  1365      5686     no       no      SUBSET 110 'ENDWM_COMM' of 'GDPIN'      
  1366      5686     no       no      SUBSET 111 'ENDWC_COMM' of 'GDPIN'      
  1367      5686     no       no      SUBSET 112 'AEZ_COMM' of 'GDPIN'        
  1368      5686     no       no      SUBSET 113 'NAEZ_COMM' of 'GDPIN'       
  1369      5686     no       no      SUBSET 114 'SNAEZ_COMM' of 'GDPIN'      
  1370      5688     no       no      SET 'CONTGDPIN'                         
  1371      5688     no       no      SUBSET 115 'GDPIN' of 'CONTGDPIN'       
  1372      5688     no       no      SUBSET 116 'ENDW_COMM' of 'CONTGDPIN'   
  1373      5688     no       no      SUBSET 117 'ENDWS_COMM' of 'CONTGDPIN'  
  1374      5688     no       no      SUBSET 118 'ENDWM_COMM' of 'CONTGDPIN'  
  1375      5688     no       no      SUBSET 119 'ENDWC_COMM' of 'CONTGDPIN'  
  1376      5688     no       no      SUBSET 120 'AEZ_COMM' of 'CONTGDPIN'    
  1377      5688     no       no      SUBSET 121 'NAEZ_COMM' of 'CONTGDPIN'   
  1378      5688     no       no      SUBSET 122 'SNAEZ_COMM' of 'CONTGDPIN'  
  1379      5690     no       no      SET 'CONTGDPIN2'                        
  1380      5690     no       no      SUBSET 123 'NAEZ_COMM' of 'CONTGDPIN2'  
  1381      5690     no       no      SUBSET 124 'SNAEZ_COMM' of 'CONTGDPIN2' 
  1382      5694     no       no      VARIABLE 'contGDPINC'                   
  1383      5696     no       no                                              
  1384      5696     no       no                                              
  1385      5696     no       no      SET 'S@IndTaxes'                        
  1386      5696     no       no      SUBSET 125 'S@IndTaxes' of 'CONTGDPIN'  
  1387      5696     no       no      SET 'S@TechChange'                      
  1388      5696     no       no      SUBSET 126 'S@TechChange' of 'CONTGDPIN'
  1389      5696     no       no      EQUATION 'E_contGDPINC'                 
  1390      5721     no       no      VARIABLE 'contGDPINC2'                  
  1391      5723     no       no      SET 'S@land'                            
  1392      5723     no       no      SUBSET 127 'S@land' of 'CONTGDPIN2'     
  1393      5723     no       no                                              
  1394      5723     no       no                                              
  1395      5723     no       no      SUBSET 128 'S@IndTaxes' of 'CONTGDPIN2' 
  1396      5723     no       no      SUBSET 129 'S@TechChange' of 'CONTGDPIN2
  1397      5723     no       no      EQUATION 'E_contGDPINC2'                
  1398      5749     no       no      VARIABLE 'qgdpinc'                      
  1399      5751     no       no      EQUATION 'E_qgdpinc'                    
  1400      5756     no       no      VARIABLE 'qgdpdiff'                     
  1401      5758     no       no      EQUATION 'E_qgdpdiff'                   
  1402      5764     no       no      SET 'ACTS'                              
  1403      5764     no       no      SUBSET 130 'ACTS' of 'PROD_COMM'        
  1404      5764     no       no      SUBSET 131 'ACTS' of 'NSAV_COMM'        
  1405      5766     no       no      SET 'GDPVA'                             
  1406      5766     no       no      SUBSET 132 'ACTS' of 'GDPVA'            
  1407      5768     no       no      SET 'CONTGVA'                           
  1408      5768     no       no      SUBSET 133 'GDPVA' of 'CONTGVA'         
  1409      5768     no       no      SUBSET 134 'ACTS' of 'CONTGVA'          
  1410      5771     no       no      VARIABLE 'contGDPGVA'                   
  1411      5773     no       no                                              
  1412      5773     no       no                                              
  1413      5773     no       no      SUBSET 135 'S@IndTaxes' of 'CONTGVA'    
  1414      5773     no       no      SUBSET 136 'S@TechChange' of 'CONTGVA'  
  1415      5773     no       no      EQUATION 'E_contGDPGVA'                 
  1416      5798     no       no      VARIABLE 'qgdpind'                      
  1417      5800     no       no      EQUATION 'E_qgdpind'                    
  1418      5805     no       no      SET 'GDPREP'                            
  1419      5806     no       no      VARIABLE 'qgdprep'                      
  1420      5808     no       no      EQUATION 'E_qgdprep'                    
  1421      5815     no       no      SET 'BACT'                              
  1422      5818     no       no      MAPPING 'MACT'                          
  1423      5820     no       no      READ into 'MACT'                        
  1424      5821     no       no      MAPPING 'MCOM'                          
  1425      5823     no       no      READ into 'MCOM'                        
  1426      5824     no       no      SET 'CONTGVABACT'                       
  1427      5824     no       no      SUBSET 137 'BACT' of 'CONTGVABACT'      
  1428      5827     no       no      VARIABLE 'contGDPBACT'                  
  1429      5829     no       no                                              
  1430      5829     no       no                                              
  1431      5829     no       no      SUBSET 138 'S@IndTaxes' of 'CONTGVABACT'
  1432      5829     no       no      SUBSET 139 'S@TechChange' of 'CONTGVABAC
  1433      5829     no       no      EQUATION 'E_contGDPBACT'                
  1434      5836     no       no      VARIABLE 'qobactreg'                    
  1435      5838     no       no      EQUATION 'E_qoreg'                      
  1436      5843     no       no      VARIABLE 'qobactwld'                    
  1437      5845     no       no      EQUATION 'E_qobactwld'                  
  1438      5857     no       no      SET 'AEZ_REVN'                          
  1439      5860     no       no      SUBSET 140 'AEZ_REVN' of 'AEZ_COMM'     
  1440      5860     no       no      SUBSET 141 'AEZ_REVN' of 'ENDW_COMM'    
  1441      5860     no       no      SUBSET 142 'AEZ_REVN' of 'DEMD_COMM'    
  1442      5860     no       no      SUBSET 143 'AEZ_REVN' of 'NSAV_COMM'    
  1443      5860     no       no      SUBSET 144 'AEZ_REVN' of 'ENDWS_COMM'   
  1444      5860     no       no      SUBSET 145 'AEZ_REVN' of 'GDPIN'        
  1445      5860     no       no      SUBSET 146 'AEZ_REVN' of 'CONTGDPIN'    
  1446      5862     no       no      SET 'PROD_REVN'                         
  1447      5865     no       no      SUBSET 147 'PROD_REVN' of 'PROD_COMM'   
  1448      5865     no       no      SUBSET 148 'PROD_REVN' of 'NSAV_COMM'   
  1449      5867     no       no      SET 'ENDW_X_REVN'                       
  1450      5867     no       no      SUBSET 149 'ENDW_X_REVN' of 'ENDW_COMM' 
  1451      5867     no       no      SUBSET 150 'ENDW_X_REVN' of 'DEMD_COMM' 
  1452      5867     no       no      SUBSET 151 'ENDW_X_REVN' of 'NSAV_COMM' 
  1453      5867     no       no      SUBSET 152 'ENDW_X_REVN' of 'GDPIN'     
  1454      5867     no       no      SUBSET 153 'ENDW_X_REVN' of 'CONTGDPIN' 
  1455      5870     no       no      SET 'PROD_X_REVN'                       
  1456      5870     no       no      SUBSET 154 'PROD_X_REVN' of 'PROD_COMM' 
  1457      5870     no       no      SUBSET 155 'PROD_X_REVN' of 'NSAV_COMM' 
  1458      5874     no       no      VARIABLE 'tfijr'                        
  1459      5876     no       no      VARIABLE 'tfreg'                        
  1460      5878     no       no                                              
  1461      5878     no       no                                              
  1462      5878     no       no                                              
  1463      5878     no       no                                              
  1464      5878     no       no                                              
  1465      5878     no       no                                              
  1466      5878     no       no                                              
  1467      5878     no       no                                              
  1468      5878     no       no      EQUATION 'E_tf'                         
  1469      5884     no       no      ZERODIVIDE instruction                  
  1470      5885     no       no      COEFFICIENT 'rTO'                       
  1471      5887     no       no      COEFFICIENT 'rTFD'                      
  1472      5889     no       no      COEFFICIENT 'rTFM'                      
  1473      5891     no       no      COEFFICIENT 'rTF'                       
  1474      5894     no       no      COEFFICIENT 'dTO'                       
  1475      5896     no       no      COEFFICIENT 'dTFD'                      
  1476      5898     no       no      COEFFICIENT 'dTFM'                      
  1477      5900     no       no      COEFFICIENT 'dTF'                       
  1478      5903     no       no      Formula for 'rTO'                       
  1479      5905     no       no      Formula for 'rTFD'                      
  1480      5907     no       no      Formula for 'rTFM'                      
  1481      5909     no       no      Formula for 'rTF'                       
  1482      5912     no       no      Formula for 'dTO'                       
  1483      5914     no       no      Formula for 'dTF'                       
  1484      5916     no       no      Formula for 'dTFD'                      
  1485      5918     no       no      Formula for 'dTFM'                      
  1486      5922     no       no      WRITE from 'VDFA'                       
  1487      5924     no       no      WRITE from 'VDFA'                       
  1488      5925     no       no      WRITE from 'VDFM'                       
  1489      5926     no       no      WRITE from 'VDFM'                       
  1490      5927     no       no      WRITE from 'VIFA'                       
  1491      5928     no       no      WRITE from 'VIFA'                       
  1492      5929     no       no      WRITE from 'VIFM'                       
  1493      5930     no       no      WRITE from 'VIFM'                       
  1494      5931     no       no      WRITE from 'VOA'                        
  1495      5932     no       no      WRITE from 'VOA'                        
  1496      5933     no       no      WRITE from 'VOM'                        
  1497      5934     no       no      WRITE from 'VOM'                        
  1498      5935     no       no      WRITE from 'rTO'                        
  1499      5936     no       no      WRITE from 'rTO'                        
  1500      5937     no       no      WRITE from 'rTF'                        
  1501      5938     no       no      WRITE from 'rTF'                        
  1502      5939     no       no      WRITE from 'rTFD'                       
  1503      5940     no       no      WRITE from 'rTFD'                       
  1504      5941     no       no      WRITE from 'rTFM'                       
  1505      5942     no       no      WRITE from 'rTFM'                       
  1506      5943     no       no      WRITE from 'dTO'                        
  1507      5944     no       no      WRITE from 'dTO'                        
  1508      5945     no       no      WRITE from 'dTF'                        
  1509      5946     no       no      WRITE from 'dTF'                        
  1510      5947     no       no      WRITE from 'dTFD'                       
  1511      5948     no       no      WRITE from 'dTFD'                       
  1512      5949     no       no      WRITE from 'dTFM'                       
  1513      5950     no       no      WRITE from 'dTFM'                       
  1514      5951     no       no      WRITE from 'INCOME'                     
  1515      5952     no       no      WRITE from 'INCOME'                     
  1516      5953     no       no      WRITE from variable 'to'                
  1517      5954     no       no      WRITE from variable 'tfd'               
  1518      5955     no       no      WRITE from variable 'tfm'               
  1519      5956     no       no      WRITE from variable 'tf'                
  1520      5972     no       no      VARIABLE 'p_qow_r'                      
  1521      5972     no       no      COEFFICIENT 'qow_r'                     
  1522      5974     no       no      Formula for 'qow_r'                     
  1523      5976     no       no      EQUATION 'E_qow_r'                      
  1524      5979     no       no      VARIABLE 'p_qow_cropout'                
  1525      5979     no       no      COEFFICIENT 'qow_cropout'               
  1526      5981     no       no      SET 'S@paddyrice'                       
  1527      5981     no       no      SUBSET 156 'S@paddyrice' of 'TRAD_COMM' 
  1528      5981     no       no      SET 'S@wheat'                           
  1529      5981     no       no      SUBSET 157 'S@wheat' of 'TRAD_COMM'     
  1530      5981     no       no      SET 'S@crsgrns'                         
  1531      5981     no       no      SUBSET 158 'S@crsgrns' of 'TRAD_COMM'   
  1532      5981     no       no      SET 'S@fruitveg'                        
  1533      5981     no       no      SUBSET 159 'S@fruitveg' of 'TRAD_COMM'  
  1534      5981     no       no      SET 'S@oilsds'                          
  1535      5981     no       no      SUBSET 160 'S@oilsds' of 'TRAD_COMM'    
  1536      5981     no       no      SET 'S@sugarcrps'                       
  1537      5981     no       no      SUBSET 161 'S@sugarcrps' of 'TRAD_COMM' 
  1538      5981     no       no      SET 'S@cotton'                          
  1539      5981     no       no      SUBSET 162 'S@cotton' of 'TRAD_COMM'    
  1540      5981     no       no      SET 'S@othercrps'                       
  1541      5981     no       no      SUBSET 163 'S@othercrps' of 'TRAD_COMM' 
  1542      5981     no       no      Formula for 'qow_cropout'               
  1543      5981     no       no      EQUATION 'E_qow_crops'                  
  1544      5981     no       no      SUBSET 164 'S@paddyrice' of 'PROD_COMM' 
  1545      5981     no       no      SUBSET 165 'S@paddyrice' of 'DEMD_COMM' 
  1546      5981     no       no      SUBSET 166 'S@paddyrice' of 'NSAV_COMM' 
  1547      5981     no       no      SUBSET 167 'S@wheat' of 'PROD_COMM'     
  1548      5981     no       no      SUBSET 168 'S@wheat' of 'DEMD_COMM'     
  1549      5981     no       no      SUBSET 169 'S@wheat' of 'NSAV_COMM'     
  1550      5981     no       no      SUBSET 170 'S@crsgrns' of 'PROD_COMM'   
  1551      5981     no       no      SUBSET 171 'S@crsgrns' of 'DEMD_COMM'   
  1552      5981     no       no      SUBSET 172 'S@crsgrns' of 'NSAV_COMM'   
  1553      5981     no       no      SUBSET 173 'S@fruitveg' of 'PROD_COMM'  
  1554      5981     no       no      SUBSET 174 'S@fruitveg' of 'DEMD_COMM'  
  1555      5981     no       no      SUBSET 175 'S@fruitveg' of 'NSAV_COMM'  
  1556      5981     no       no      SUBSET 176 'S@oilsds' of 'PROD_COMM'    
  1557      5981     no       no      SUBSET 177 'S@oilsds' of 'DEMD_COMM'    
  1558      5981     no       no      SUBSET 178 'S@oilsds' of 'NSAV_COMM'    
  1559      5981     no       no      SUBSET 179 'S@sugarcrps' of 'PROD_COMM' 
  1560      5981     no       no      SUBSET 180 'S@sugarcrps' of 'DEMD_COMM' 
  1561      5981     no       no      SUBSET 181 'S@sugarcrps' of 'NSAV_COMM' 
  1562      5981     no       no      SUBSET 182 'S@cotton' of 'PROD_COMM'    
  1563      5981     no       no      SUBSET 183 'S@cotton' of 'DEMD_COMM'    
  1564      5981     no       no      SUBSET 184 'S@cotton' of 'NSAV_COMM'    
  1565      5981     no       no      SUBSET 185 'S@othercrps' of 'PROD_COMM' 
  1566      5981     no       no      SUBSET 186 'S@othercrps' of 'DEMD_COMM' 
  1567      5981     no       no      SUBSET 187 'S@othercrps' of 'NSAV_COMM' 
  1568      5986     no       no      VARIABLE 'p_qow_pdyrice'                
  1569      5986     no       no      COEFFICIENT 'qow_pdyrice'               
  1570      5988     no       no      Formula for 'qow_pdyrice'               
  1571      5988     no       no      EQUATION 'E_qow_paddyrice'              
  1572      5991     no       no      VARIABLE 'p_qow_wheat'                  
  1573      5991     no       no      COEFFICIENT 'qow_wheat'                 
  1574      5993     no       no      Formula for 'qow_wheat'                 
  1575      5993     no       no      EQUATION 'E_qow_wheat'                  
  1576      5996     no       no      VARIABLE 'p_qow_crsgrns'                
  1577      5996     no       no      COEFFICIENT 'qow_crsgrns'               
  1578      5998     no       no      Formula for 'qow_crsgrns'               
  1579      5998     no       no      EQUATION 'E_qow_crsgrns'                
  1580      6001     no       no      VARIABLE 'p_qow_fruitveg'               
  1581      6001     no       no      COEFFICIENT 'qow_fruitveg'              
  1582      6003     no       no      Formula for 'qow_fruitveg'              
  1583      6003     no       no      EQUATION 'E_qow_fruitveg'               
  1584      6006     no       no      VARIABLE 'p_qow_oilsds'                 
  1585      6006     no       no      COEFFICIENT 'qow_oilsds'                
  1586      6008     no       no      Formula for 'qow_oilsds'                
  1587      6008     no       no      EQUATION 'E_qow_oilsds'                 
  1588      6011     no       no      VARIABLE 'p_qow_sugarcrp'               
  1589      6011     no       no      COEFFICIENT 'qow_sugarcrp'              
  1590      6013     no       no      Formula for 'qow_sugarcrp'              
  1591      6013     no       no      EQUATION 'E_qow_sugarcrps'              
  1592      6016     no       no      VARIABLE 'p_qow_cotton'                 
  1593      6016     no       no      COEFFICIENT 'qow_cotton'                
  1594      6018     no       no      Formula for 'qow_cotton'                
  1595      6018     no       no      EQUATION 'E_qow_cotton'                 
  1596      6021     no       no      VARIABLE 'p_qow_liveout'                
  1597      6021     no       no      COEFFICIENT 'qow_liveout'               
  1598      6023     no       no      Formula for 'qow_liveout'               
  1599      6023     no       no      EQUATION 'E_qow_liveout'                
  1600      6026     no       no      VARIABLE 'p_qow_fishout'                
  1601      6026     no       no      COEFFICIENT 'qow_fishout'               
  1602      6028     no       no      SET 'S@fishery'                         
  1603      6028     no       no      SUBSET 188 'S@fishery' of 'TRAD_COMM'   
  1604      6028     no       no      Formula for 'qow_fishout'               
  1605      6028     no       no      EQUATION 'E_qow_fishout'                
  1606      6028     no       no      SUBSET 189 'S@fishery' of 'PROD_COMM'   
  1607      6028     no       no      SUBSET 190 'S@fishery' of 'DEMD_COMM'   
  1608      6028     no       no      SUBSET 191 'S@fishery' of 'NSAV_COMM'   
  1609      6031     no       no      VARIABLE 'p_qow_forsout'                
  1610      6031     no       no      COEFFICIENT 'qow_forsout'               
  1611      6033     no       no      SET 'S@forestsec'                       
  1612      6033     no       no      SUBSET 192 'S@forestsec' of 'TRAD_COMM' 
  1613      6033     no       no      Formula for 'qow_forsout'               
  1614      6033     no       no      EQUATION 'E_qow_forsout'                
  1615      6033     no       no      SUBSET 193 'S@forestsec' of 'PROD_COMM' 
  1616      6033     no       no      SUBSET 194 'S@forestsec' of 'DEMD_COMM' 
  1617      6033     no       no      SUBSET 195 'S@forestsec' of 'NSAV_COMM' 
  1618      6036     no       no      VARIABLE 'p_qow_agforout'               
  1619      6036     no       no      COEFFICIENT 'qow_agforout'              
  1620      6038     no       no      Formula for 'qow_agforout'              
  1621      6038     no       no      EQUATION 'E_qow_agforout'               
  1622      6041     no       no      VARIABLE 'p_qow_mnfc'                   
  1623      6041     no       no      COEFFICIENT 'qow_mnfc'                  
  1624      6043     no       no      SET 'S@NRes'                            
  1625      6043     no       no      SUBSET 196 'S@NRes' of 'TRAD_COMM'      
  1626      6043     no       no      SET 'S@Mnfcing'                         
  1627      6043     no       no      SUBSET 197 'S@Mnfcing' of 'TRAD_COMM'   
  1628      6043     no       no      SET 'S@PrFood'                          
  1629      6043     no       no      SUBSET 198 'S@PrFood' of 'TRAD_COMM'    
  1630      6043     no       no      SET 'S@PrLstk'                          
  1631      6043     no       no      SUBSET 199 'S@PrLstk' of 'TRAD_COMM'    
  1632      6043     no       no      Formula for 'qow_mnfc'                  
  1633      6043     no       no      EQUATION 'E_qow_mnfc'                   
  1634      6043     no       no      SUBSET 200 'S@NRes' of 'PROD_COMM'      
  1635      6043     no       no      SUBSET 201 'S@NRes' of 'DEMD_COMM'      
  1636      6043     no       no      SUBSET 202 'S@NRes' of 'NSAV_COMM'      
  1637      6043     no       no      SUBSET 203 'S@Mnfcing' of 'PROD_COMM'   
  1638      6043     no       no      SUBSET 204 'S@Mnfcing' of 'DEMD_COMM'   
  1639      6043     no       no      SUBSET 205 'S@Mnfcing' of 'NSAV_COMM'   
  1640      6043     no       no      SUBSET 206 'S@PrFood' of 'PROD_COMM'    
  1641      6043     no       no      SUBSET 207 'S@PrFood' of 'DEMD_COMM'    
  1642      6043     no       no      SUBSET 208 'S@PrFood' of 'NSAV_COMM'    
  1643      6043     no       no      SUBSET 209 'S@PrLstk' of 'PROD_COMM'    
  1644      6043     no       no      SUBSET 210 'S@PrLstk' of 'DEMD_COMM'    
  1645      6043     no       no      SUBSET 211 'S@PrLstk' of 'NSAV_COMM'    
  1646      6046     no       no      VARIABLE 'p_qow_serv'                   
  1647      6046     no       no      COEFFICIENT 'qow_serv'                  
  1648      6048     no       no      SET 'S@Services'                        
  1649      6048     no       no      SUBSET 212 'S@Services' of 'TRAD_COMM'  
  1650      6048     no       no      Formula for 'qow_serv'                  
  1651      6048     no       no      EQUATION 'E_qow_serv'                   
  1652      6048     no       no      SUBSET 213 'S@Services' of 'PROD_COMM'  
  1653      6048     no       no      SUBSET 214 'S@Services' of 'DEMD_COMM'  
  1654      6048     no       no      SUBSET 215 'S@Services' of 'NSAV_COMM'  
  1655      6053     no       no      VARIABLE 'p_qxw_r'                      
  1656      6053     no       no      COEFFICIENT 'qxw_r'                     
  1657      6055     no       no      Formula for 'qxw_r'                     
  1658      6057     no       no      EQUATION 'E_qxw_r'                      
  1659      6060     no       no      VARIABLE 'p_qxw_cropout'                
  1660      6060     no       no      COEFFICIENT 'qxw_cropout'               
  1661      6062     no       no      Formula for 'qxw_cropout'               
  1662      6062     no       no      EQUATION 'E_qxw_crops'                  
  1663      6067     no       no      VARIABLE 'p_qxw_pdyrice'                
  1664      6067     no       no      COEFFICIENT 'qxw_pdyrice'               
  1665      6069     no       no      Formula for 'qxw_pdyrice'               
  1666      6069     no       no      EQUATION 'E_qxw_paddyrice'              
  1667      6072     no       no      VARIABLE 'p_qxw_wheat'                  
  1668      6072     no       no      COEFFICIENT 'qxw_wheat'                 
  1669      6074     no       no      Formula for 'qxw_wheat'                 
  1670      6074     no       no      EQUATION 'E_qxw_wheat'                  
  1671      6077     no       no      VARIABLE 'p_qxw_crsgrns'                
  1672      6077     no       no      COEFFICIENT 'qxw_crsgrns'               
  1673      6079     no       no      Formula for 'qxw_crsgrns'               
  1674      6079     no       no      EQUATION 'E_qxw_crsgrns'                
  1675      6082     no       no      VARIABLE 'p_qxw_fruitveg'               
  1676      6082     no       no      COEFFICIENT 'qxw_fruitveg'              
  1677      6084     no       no      Formula for 'qxw_fruitveg'              
  1678      6084     no       no      EQUATION 'E_qxw_fruitveg'               
  1679      6087     no       no      VARIABLE 'p_qxw_oilsds'                 
  1680      6087     no       no      COEFFICIENT 'qxw_oilsds'                
  1681      6089     no       no      Formula for 'qxw_oilsds'                
  1682      6089     no       no      EQUATION 'E_qxw_oilsds'                 
  1683      6092     no       no      VARIABLE 'p_qxw_sugarcrp'               
  1684      6092     no       no      COEFFICIENT 'qxw_sugarcrp'              
  1685      6094     no       no      Formula for 'qxw_sugarcrp'              
  1686      6094     no       no      EQUATION 'E_qxw_sugarcrps'              
  1687      6097     no       no      VARIABLE 'p_qxw_cotton'                 
  1688      6097     no       no      COEFFICIENT 'qxw_cotton'                
  1689      6099     no       no      Formula for 'qxw_cotton'                
  1690      6099     no       no      EQUATION 'E_qxw_cotton'                 
  1691      6102     no       no      VARIABLE 'p_qxw_liveout'                
  1692      6102     no       no      COEFFICIENT 'qxw_liveout'               
  1693      6104     no       no      Formula for 'qxw_liveout'               
  1694      6104     no       no      EQUATION 'E_qxw_liveout'                
  1695      6107     no       no      VARIABLE 'p_qxw_fishout'                
  1696      6107     no       no      COEFFICIENT 'qxw_fishout'               
  1697      6109     no       no      Formula for 'qxw_fishout'               
  1698      6109     no       no      EQUATION 'E_qxw_fishout'                
  1699      6112     no       no      VARIABLE 'p_qxw_forsout'                
  1700      6112     no       no      COEFFICIENT 'qxw_forsout'               
  1701      6114     no       no      Formula for 'qxw_forsout'               
  1702      6114     no       no      EQUATION 'E_qxw_forsout'                
  1703      6117     no       no      VARIABLE 'p_qxw_agforout'               
  1704      6117     no       no      COEFFICIENT 'qxw_agforout'              
  1705      6119     no       no      Formula for 'qxw_agforout'              
  1706      6119     no       no      EQUATION 'E_qxw_agforout'               
  1707      6122     no       no      VARIABLE 'p_qxw_mnfc'                   
  1708      6122     no       no      COEFFICIENT 'qxw_mnfc'                  
  1709      6124     no       no      Formula for 'qxw_mnfc'                  
  1710      6124     no       no      EQUATION 'E_qxw_mnfc'                   
  1711      6127     no       no      VARIABLE 'p_qxw_serv'                   
  1712      6127     no       no      COEFFICIENT 'qxw_serv'                  
  1713      6129     no       no      Formula for 'qxw_serv'                  
  1714      6129     no       no      EQUATION 'E_qxw_serv'                   
  1715      6134     no       no      VARIABLE 'p_qmt_pdyrice'                
  1716      6134     no       no      COEFFICIENT 'qmt_pdyrice'               
  1717      6136     no       no      SUBSET 216 'S@paddyrice' of 'CROP_COMM' 
  1718      6136     no       no      Formula for 'qmt_pdyrice'               
  1719      6136     no       no      EQUATION 'E_qmt_paddyrice'              
  1720      6136     no       no      SUBSET 217 'S@paddyrice' of 'LAND_COMM' 
  1721      6139     no       no      VARIABLE 'p_qmt_wheat'                  
  1722      6139     no       no      COEFFICIENT 'qmt_wheat'                 
  1723      6141     no       no      SUBSET 218 'S@wheat' of 'CROP_COMM'     
  1724      6141     no       no      Formula for 'qmt_wheat'                 
  1725      6141     no       no      EQUATION 'E_qmt_wheat'                  
  1726      6141     no       no      SUBSET 219 'S@wheat' of 'LAND_COMM'     
  1727      6144     no       no      VARIABLE 'p_qmt_crsgrns'                
  1728      6144     no       no      COEFFICIENT 'qmt_crsgrns'               
  1729      6146     no       no      SUBSET 220 'S@crsgrns' of 'CROP_COMM'   
  1730      6146     no       no      Formula for 'qmt_crsgrns'               
  1731      6146     no       no      EQUATION 'E_qmt_crsgrns'                
  1732      6146     no       no      SUBSET 221 'S@crsgrns' of 'LAND_COMM'   
  1733      6149     no       no      VARIABLE 'p_qmt_fruitveg'               
  1734      6149     no       no      COEFFICIENT 'qmt_fruitveg'              
  1735      6151     no       no      SUBSET 222 'S@fruitveg' of 'CROP_COMM'  
  1736      6151     no       no      Formula for 'qmt_fruitveg'              
  1737      6151     no       no      EQUATION 'E_qmt_fruitveg'               
  1738      6151     no       no      SUBSET 223 'S@fruitveg' of 'LAND_COMM'  
  1739      6154     no       no      VARIABLE 'p_qmt_oilsds'                 
  1740      6154     no       no      COEFFICIENT 'qmt_oilsds'                
  1741      6156     no       no      SUBSET 224 'S@oilsds' of 'CROP_COMM'    
  1742      6156     no       no      Formula for 'qmt_oilsds'                
  1743      6156     no       no      EQUATION 'E_qmt_oilsds'                 
  1744      6156     no       no      SUBSET 225 'S@oilsds' of 'LAND_COMM'    
  1745      6159     no       no      VARIABLE 'p_qmt_sugarcrp'               
  1746      6159     no       no      COEFFICIENT 'qmt_sugarcrp'              
  1747      6161     no       no      SUBSET 226 'S@sugarcrps' of 'CROP_COMM' 
  1748      6161     no       no      Formula for 'qmt_sugarcrp'              
  1749      6161     no       no      EQUATION 'E_qmt_sugarcrps'              
  1750      6161     no       no      SUBSET 227 'S@sugarcrps' of 'LAND_COMM' 
  1751      6164     no       no      VARIABLE 'p_qmt_cotton'                 
  1752      6164     no       no      COEFFICIENT 'qmt_cotton'                
  1753      6166     no       no      SUBSET 228 'S@cotton' of 'CROP_COMM'    
  1754      6166     no       no      Formula for 'qmt_cotton'                
  1755      6166     no       no      EQUATION 'E_qmt_cotton'                 
  1756      6166     no       no      SUBSET 229 'S@cotton' of 'LAND_COMM'    
  1757      6171     no       no      VARIABLE 'pfactrl_land'                 
  1758      6173     no       no      EQUATION 'E_REALRETURN_LND'             
  1759      6177     no       no      VARIABLE 'pfactrl_sklab'                
  1760      6179     no       no      SET 'S@SkLab'                           
  1761      6179     no       no      SUBSET 230 'S@SkLab' of 'ENDW_COMM'     
  1762      6179     no       no      EQUATION 'E_REALRETURN_SKLAB'           
  1763      6179     no       no      SUBSET 231 'S@SkLab' of 'DEMD_COMM'     
  1764      6179     no       no      SUBSET 232 'S@SkLab' of 'NSAV_COMM'     
  1765      6179     no       no      SUBSET 233 'S@SkLab' of 'GDPIN'         
  1766      6179     no       no      SUBSET 234 'S@SkLab' of 'CONTGDPIN'     
  1767      6182     no       no      VARIABLE 'pfactrl_usklab'               
  1768      6184     no       no      SET 'S@UnSkLab'                         
  1769      6184     no       no      SUBSET 235 'S@UnSkLab' of 'ENDW_COMM'   
  1770      6184     no       no      EQUATION 'E_REALRETURN_USKLAB'          
  1771      6184     no       no      SUBSET 236 'S@UnSkLab' of 'DEMD_COMM'   
  1772      6184     no       no      SUBSET 237 'S@UnSkLab' of 'NSAV_COMM'   
  1773      6184     no       no      SUBSET 238 'S@UnSkLab' of 'GDPIN'       
  1774      6184     no       no      SUBSET 239 'S@UnSkLab' of 'CONTGDPIN'   
  1775      6187     no       no      VARIABLE 'pfactrl_cap'                  
  1776      6189     no       no      EQUATION 'E_REALRETURN_CAP'             
  1777      6192     no       no      VARIABLE 'p_lc_cropland'                
  1778      6192     no       no      COEFFICIENT 'lc_cropland'               
  1779      6194     no       no      SET 'S@CROPLAND'                        
  1780      6194     no       no      SUBSET 240 'S@CROPLAND' of 'PROD_COVER' 
  1781      6194     no       no      Formula for 'lc_cropland'               
  1782      6194     no       no      EQUATION 'E_LC_CROPLAND'                
  1783      6194     no       no      SUBSET 241 'S@CROPLAND' of 'LAND_COVER' 
  1784      6197     no       no      VARIABLE 'p_lc_mngforest'               
  1785      6197     no       no      COEFFICIENT 'lc_mngforest'              
  1786      6199     no       no      SUBSET 242 'S@forestsec' of 'PROD_COVER'
  1787      6199     no       no      Formula for 'lc_mngforest'              
  1788      6199     no       no      EQUATION 'E_LC_MNGD_FOREST'             
  1789      6199     no       no      SUBSET 243 'S@forestsec' of 'LAND_COVER'
  1790      6202     no       no      VARIABLE 'p_lc_pasture'                 
  1791      6202     no       no      COEFFICIENT 'lc_pasture'                
  1792      6204     no       no      SUBSET 244 'S@ruminant' of 'PROD_COVER' 
  1793      6204     no       no      Formula for 'lc_pasture'                
  1794      6204     no       no      EQUATION 'E_LC_PASTURE'                 
  1795      6204     no       no      SUBSET 245 'S@ruminant' of 'LAND_COVER' 
  1796      6207     no       no      VARIABLE 'lc_ntl_land'                  
  1797      6209     no       no      EQUATION 'E_LC_NTL_LAND'                
  1798      6212     no       no      VARIABLE 'pmallland'                    
  1799      6214     no       no      COEFFICIENT 'VFM_AEZ'                   
  1800      6216     no       no      Formula for 'VFM_AEZ'                   
  1801      6219     no       no      EQUATION 'E_pmallland'                  
  1802      6239     no       no      VARIABLE 'p_VDFA_alt'                   
  1803      6239     no       no      COEFFICIENT 'VDFA_alt'                  
  1804      6241     no       no      Formula for 'VDFA_alt'                  
  1805      6242     no       no      EQUATION 'E_VDFA_alt'                   
  1806      6244     no       no      VARIABLE 'p_VIFA_alt'                   
  1807      6244     no       no      COEFFICIENT 'VIFA_alt'                  
  1808      6246     no       no      Formula for 'VIFA_alt'                  
  1809      6247     no       no      EQUATION 'E_VIFA_alt'                   
  1810      6249     no       no      VARIABLE 'p_EVFA_alt'                   
  1811      6249     no       no      COEFFICIENT 'EVFA_alt'                  
  1812      6251     no       no      Formula for 'EVFA_alt'                  
  1813      6252     no       no      EQUATION 'E_EVFA_alt'                   
  1814      6255     no       no      VARIABLE 'p_VFA_alt'                    
  1815      6255     no       no      COEFFICIENT 'VFA_alt'                   
  1816      6257     no       no      Formula for 'VFA_alt'                   
  1817      6257     no       no      EQUATION 'E_VFA_alt_endw'               
  1818      6258     no       no      Formula for 'VFA_alt'                   
  1819      6258     no       no      EQUATION 'E_VFA_alt_trad'               
  1820      6260     no       no      VARIABLE 'p_VOA_alt'                    
  1821      6260     no       no      COEFFICIENT 'VOA_alt'                   
  1822      6262     no       no      Formula for 'VOA_alt'                   
  1823      6263     no       no      EQUATION 'E_VOA_alt_endw'               
  1824      6265     no       no      Formula for 'VOA_alt'                   
  1825      6265     no       no      EQUATION 'E_VOA_alt_prod'               
  1826      6269     no       no      VARIABLE 'p_VFM_alt'                    
  1827      6269     no       no      COEFFICIENT 'VFM_alt'                   
  1828      6271     no       no      Formula for 'VFM_alt'                   
  1829      6273     no       no      EQUATION 'E_VFM_alt_endwm'              
  1830      6275     no       no      EQUATION 'E_VFM_alt_endws'              
  1831      6278     no       no      VARIABLE 'p_VDPM_alt'                   
  1832      6278     no       no      COEFFICIENT 'VDPM_alt'                  
  1833      6280     no       no      Formula for 'VDPM_alt'                  
  1834      6282     no       no      EQUATION 'E_VDPM_alt'                   
  1835      6285     no       no      VARIABLE 'p_VDGM_alt'                   
  1836      6285     no       no      COEFFICIENT 'VDGM_alt'                  
  1837      6287     no       no      Formula for 'VDGM_alt'                  
  1838      6289     no       no      EQUATION 'E_VDGM_alt'                   
  1839      6292     no       no      VARIABLE 'p_VDFM_alt'                   
  1840      6292     no       no      COEFFICIENT 'VDFM_alt'                  
  1841      6294     no       no      Formula for 'VDFM_alt'                  
  1842      6296     no       no      EQUATION 'E_VDFM_alt'                   
  1843      6299     no       no      VARIABLE 'p_VIFM_alt'                   
  1844      6299     no       no      COEFFICIENT 'VIFM_alt'                  
  1845      6301     no       no      Formula for 'VIFM_alt'                  
  1846      6303     no       no      EQUATION 'E_VIFM_alt'                   
  1847      6307     no       no      VARIABLE 'p_VDM_alt'                    
  1848      6307     no       no      COEFFICIENT 'VDM_alt'                   
  1849      6309     no       no      Formula for 'VDM_alt'                   
  1850      6309     no       no      EQUATION 'E_VDM_alt'                    
  1851      6312     no       no      VARIABLE 'p_VXMD_alt'                   
  1852      6312     no       no      COEFFICIENT 'VXMD_alt'                  
  1853      6315     no       no      Formula for 'VXMD_alt'                  
  1854      6317     no       no      EQUATION 'E_VXMD_alt'                   
  1855      6320     no       no      VARIABLE 'p_VST_alt'                    
  1856      6320     no       no      COEFFICIENT 'VST_alt'                   
  1857      6322     no       no      EQUATION 'E_VST_alt'                    
  1858      6324     no       no      Formula for 'VST_alt'                   
  1859      6327     no       no      VARIABLE 'p_VOM_alt'                    
  1860      6327     no       no      COEFFICIENT 'VOM_alt'                   
  1861      6330     no       no      Formula for 'VOM_alt'                   
  1862      6330     no       no      EQUATION 'E_VOM_alt_endw'               
  1863      6333     no       no      Formula for 'VOM_alt'                   
  1864      6333     no       no      EQUATION 'E_VOM_alt_marg'               
  1865      6336     no       no      Formula for 'VOM_alt'                   
  1866      6336     no       no      EQUATION 'E_VOM_alt_nmrg'               
  1867      6339     no       no      Formula for 'VOM_alt'                   
  1868      6339     no       no      EQUATION 'E_VOM_alt_cgds'               
  1869      6342     no       no      VARIABLE 'c_dTO_alt'                    
  1870      6342     no       no      COEFFICIENT 'dTO_alt'                   
  1871      6344     no       no      Formula for 'dTO_alt'                   
  1872      6344     no       no      EQUATION 'E_dTO_alt'                    
  1873      6347     no       no      COEFFICIENT 'TO_dTO_ID'                 
  1874      6349     no       no      READ into 'TO_dTO_ID'                   
  1875      6351     no       no      COEFFICIENT 'TO_AEZ_ID'                 
  1876      6353     no       no      READ into 'TO_AEZ_ID'                   
  1877      6355     no       no      COEFFICIENT 'WGHT_AEZ_ID'               
  1878      6357     no       no      Formula for 'WGHT_AEZ_ID'               
  1879      6360     no       no      VARIABLE 'c_dTFD_alt'                   
  1880      6360     no       no      COEFFICIENT 'dTFD_alt'                  
  1881      6362     no       no      Formula for 'dTFD_alt'                  
  1882      6362     no       no      EQUATION 'E_dTFD_alt'                   
  1883      6365     no       no      COEFFICIENT 'TO_dTFD_ID'                
  1884      6367     no       no      READ into 'TO_dTFD_ID'                  
  1885      6369     no       no      VARIABLE 'c_dTFM_alt'                   
  1886      6369     no       no      COEFFICIENT 'dTFM_alt'                  
  1887      6371     no       no      Formula for 'dTFM_alt'                  
  1888      6371     no       no      EQUATION 'E_dTFM_alt'                   
  1889      6374     no       no      COEFFICIENT 'TO_dTFM_ID'                
  1890      6376     no       no      READ into 'TO_dTFM_ID'                  
  1891      6378     no       no      VARIABLE 'c_dTO_slack'                  
  1892      6381     no       no      VARIABLE 'c_dTO_AEZ'                    
  1893      6383     no       no      EQUATION 'E_c_dTO_AEZ'                  
  1894      6386     no       no      VARIABLE 'c_dTO_AEZR'                   
  1895      6388     no       no      EQUATION 'E_c_dTO_AEZR'                 
  1896      6391     no       no      EQUATION 'E_dTO_revnue'                 
  1897      6398     no       no      VARIABLE 'CNTpesgrin'                   
  1898      6400     no       no      EQUATION 'E_CNTpesgin'                  
  1899      6405     no       no      VARIABLE 'CNTpesgrout'                  
  1900      6407     no       no      EQUATION 'E_CNTpesgrgout'               
  1901      6412     no       no      VARIABLE 'CNTpesgr'                     
  1902      6414     no       no      EQUATION 'E_CNTpesgr'                   
  1903      6421     no       no      COEFFICIENT 'AGGINCOMEEV'               
  1904      6423     no       no      Formula for 'AGGINCOMEEV'               
  1905      6426     no       no      VARIABLE 'ureginc'                      
  1906      6428     no       no      EQUATION 'E_ureginc'                    
  1907      6434     no       no      WRITE from 'INCOMEEV'                   
  1908      6436     no       no      WRITE from 'INCOMEEV'                   
  1909      6439     no       no      VARIABLE 'pgdpexreginc'                 
  1910      6441     no       no      EQUATION 'E_pgdpexreginc'               
  1911      6446     no       no      VARIABLE 'qgdpexreginc'                 
  1912      6448     no       no      EQUATION 'E_qgdpexreginc'               
  1913      6453     no       no      COEFFICIENT 'GDPEXP_a'                  
  1914      6455     no       no      Formula for 'GDPEXP_a'                  
  1915      6457     no       no      COEFFICIENT 'BGDPEXP_a'                 
  1916      6459     no       no      Formula for 'BGDPEXP_a'                 
  1917      6461     no       no      UPDATE of 'BGDPEXP_a'                   
  1918      6463     no       no      VARIABLE 'pgdpreginc'                   
  1919      6465     no       no      EQUATION 'E_pgdpreginc'                 
  1920      6470     no       no      COEFFICIENT 'BGDP_a'                    
  1921      6472     no       no      Formula for 'BGDP_a'                    
  1922      6474     no       no      UPDATE of 'BGDP_a'                      
  1923      6476     no       no      VARIABLE 'contGDPEXP_a'                 
  1924      6478     no       no      EQUATION 'E_contGDPEXP_a'               
  1925      6484     no       no      VARIABLE 'contGDPINC_a'                 
  1926      6486     no       no      EQUATION 'E_contGDPINC_a'               
  1927      6514     no       no      VARIABLE 'pgdpwld'                      
  1928      6516     no       no      EQUATION 'E_pgdpwld'                    
  1929      6519     no       no      VARIABLE 'qgdpwld'                      
  1930      6521     no       no      EQUATION 'E_qgdpwld'                    
  1931      6525     no       no      VARIABLE 'qgdpewld'                     
  1932      6527     no       no      EQUATION 'E_qgdpewld'                   
  1933      6531     no       no      VARIABLE 'pgdpewld'                     
  1934      6533     no       no      EQUATION 'E_pgdpewld'                   
  1935      6538     no       no      COEFFICIENT 'GDPEXPWLD'                 
  1936      6540     no       no      Formula for 'GDPEXPWLD'                 
  1937      6542     no       no      COEFFICIENT 'BGDPEXPWLD'                
  1938      6544     no       no      Formula for 'BGDPEXPWLD'                
  1939      6546     no       no      UPDATE of 'BGDPEXPWLD'                  
  1940      6549     no       no      COEFFICIENT 'BGDPWLD'                   
  1941      6551     no       no      Formula for 'BGDPWLD'                   
  1942      6553     no       no      UPDATE of 'BGDPWLD'                     
  1943      6555     no       no      VARIABLE 'contGDPEXP_w'                 
  1944      6557     no       no      EQUATION 'E_contGDPEXP_w'               
  1945      6562     no       no      VARIABLE 'contGDPINC_w'                 
  1946      6564     no       no      EQUATION 'E_contGDPINC_w'               
  1947      6593     no       no      VARIABLE 'qoar'                         
  1948      6595     no       no      EQUATION 'E_qoar'                       
  1949      6601     no       no      VARIABLE 'poar'                         
  1950      6603     no       no      EQUATION 'E_poreg'                      
  1951      6609     no       no      VARIABLE 'pobactwld'                    
  1952      6611     no       no      EQUATION 'E_pobactwld'                  
  1953      6616     no       no      VARIABLE 'qear'                         
  1954      6618     no       no      EQUATION 'E_qear'                       
  1955      6623     no       no      VARIABLE 'pear'                         
  1956      6625     no       no      EQUATION 'E_pear'                       
  1957      6630     no       no      VARIABLE 'qewld'                        
  1958      6632     no       no      EQUATION 'E_qewld'                      
  1959      6637     no       no      VARIABLE 'pewld'                        
  1960      6639     no       no      EQUATION 'E_pewld'                      
  1961      6644     no       no      VARIABLE 'qfear'                        
  1962      6646     no       no      EQUATION 'E_qfear'                      
  1963      6652     no       no      VARIABLE 'pfear'                        
  1964      6654     no       no      EQUATION 'E_pfear'                      
  1965      6660     no       no      VARIABLE 'qfeawld'                      
  1966      6662     no       no      EQUATION 'E_qfeawld'                    
  1967      6668     no       no      VARIABLE 'pfeawld'                      
  1968      6670     no       no      EQUATION 'E_pfeawld'                    
  1969      6676     no       no      VARIABLE 'qxwacomreg'                   
  1970      6678     no       no      EQUATION 'E_qxwacomreg'                 
  1971      6684     no       no      VARIABLE 'qxsareg'                      
  1972      6686     no       no      EQUATION 'E_qxsareg'                    
  1973      6692     no       no      VARIABLE 'pfobareg'                     
  1974      6694     no       no      EQUATION 'E_pfobareg'                   
  1975         0     no       no      UPDATE of 'INCOME_track'                
  1976         0     no       no      UPDATE of 'LANDCOVER_L'                 
  1977         0     no       no      UPDATE of 'LANDCOVER_R'                 
  1978         0     no       no      UPDATE of 'LANDCOVER_W'                 
  1979         0     no       no      UPDATE of 'RENTCOVER'                   
  1980         0     no       no      UPDATE of 'RENTCOVERAV'                 
  1981         0     no       no      UPDATE of 'HARVSTAREA_L'                
  1982         0     no       no      UPDATE of 'RENTCROP'                    
  1983         0     no       no      UPDATE of 'RENTCROPAV'                  
  1984         0     no       no      UPDATE of 'ECONLAND'                    
  1985         0     no       no      UPDATE of 'ECONLANDW'                   
  1986         0     no       no      UPDATE of 'MAX_LAND'                    
  1987         0     no       no      UPDATE of 'PRODUCTION'                  
  1988         0     no       no      UPDATE of 'YIELDGL'                     
  1989         0     no       no      UPDATE of 'qow_r'                       
  1990         0     no       no      UPDATE of 'qow_cropout'                 
  1991         0     no       no      UPDATE of 'qow_pdyrice'                 
  1992         0     no       no      UPDATE of 'qow_wheat'                   
  1993         0     no       no      UPDATE of 'qow_crsgrns'                 
  1994         0     no       no      UPDATE of 'qow_fruitveg'                
  1995         0     no       no      UPDATE of 'qow_oilsds'                  
  1996         0     no       no      UPDATE of 'qow_sugarcrp'                
  1997         0     no       no      UPDATE of 'qow_cotton'                  
  1998         0     no       no      UPDATE of 'qow_liveout'                 
  1999         0     no       no      UPDATE of 'qow_fishout'                 
  2000         0     no       no      UPDATE of 'qow_forsout'                 
  2001         0     no       no      UPDATE of 'qow_agforout'                
  2002         0     no       no      UPDATE of 'qow_mnfc'                    
  2003         0     no       no      UPDATE of 'qow_serv'                    
  2004         0     no       no      UPDATE of 'qxw_r'                       
  2005         0     no       no      UPDATE of 'qxw_cropout'                 
  2006         0     no       no      UPDATE of 'qxw_pdyrice'                 
  2007         0     no       no      UPDATE of 'qxw_wheat'                   
  2008         0     no       no      UPDATE of 'qxw_crsgrns'                 
  2009         0     no       no      UPDATE of 'qxw_fruitveg'                
  2010         0     no       no      UPDATE of 'qxw_oilsds'                  
  2011         0     no       no      UPDATE of 'qxw_sugarcrp'                
  2012         0     no       no      UPDATE of 'qxw_cotton'                  
  2013         0     no       no      UPDATE of 'qxw_liveout'                 
  2014         0     no       no      UPDATE of 'qxw_fishout'                 
  2015         0     no       no      UPDATE of 'qxw_forsout'                 
  2016         0     no       no      UPDATE of 'qxw_agforout'                
  2017         0     no       no      UPDATE of 'qxw_mnfc'                    
  2018         0     no       no      UPDATE of 'qxw_serv'                    
  2019         0     no       no      UPDATE of 'qmt_pdyrice'                 
  2020         0     no       no      UPDATE of 'qmt_wheat'                   
  2021         0     no       no      UPDATE of 'qmt_crsgrns'                 
  2022         0     no       no      UPDATE of 'qmt_fruitveg'                
  2023         0     no       no      UPDATE of 'qmt_oilsds'                  
  2024         0     no       no      UPDATE of 'qmt_sugarcrp'                
  2025         0     no       no      UPDATE of 'qmt_cotton'                  
  2026         0     no       no      UPDATE of 'lc_cropland'                 
  2027         0     no       no      UPDATE of 'lc_mngforest'                
  2028         0     no       no      UPDATE of 'lc_pasture'                  
  2029         0     no       no      UPDATE of 'VDFA_alt'                    
  2030         0     no       no      UPDATE of 'VIFA_alt'                    
  2031         0     no       no      UPDATE of 'EVFA_alt'                    
  2032         0     no       no      UPDATE of 'VFA_alt'                     
  2033         0     no       no      UPDATE of 'VOA_alt'                     
  2034         0     no       no      UPDATE of 'VFM_alt'                     
  2035         0     no       no      UPDATE of 'VDPM_alt'                    
  2036         0     no       no      UPDATE of 'VDGM_alt'                    
  2037         0     no       no      UPDATE of 'VDFM_alt'                    
  2038         0     no       no      UPDATE of 'VIFM_alt'                    
  2039         0     no       no      UPDATE of 'VDM_alt'                     
  2040         0     no       no      UPDATE of 'VXMD_alt'                    
  2041         0     no       no      UPDATE of 'VST_alt'                     
  2042         0     no       no      UPDATE of 'VOM_alt'                     
  2043         0     no       no      UPDATE of 'dTO_alt'                     
  2044         0     no       no      UPDATE of 'dTFD_alt'                    
  2045         0     no       no      UPDATE of 'dTFM_alt'                    




 ============
 ++ SET TABLE
 ============

                    Defined   [Max] Inter             Set numbers this
  Number    Name    at line    Size temp? Elements    is subset of
  ---------------------------------------------------------------------
     1  REG           169 [      10]  no   read 
     2  TRAD_COMM     172 [      10]  no   read      7     8     9
     3  MARG_COMM     177 [      10]  no   read      2     7     8     9

     4  NMRG_COMM     182 [       0]  no   other     2     7     8     9

     5  CGDS_COMM     184 [       1]  no   read      7     9
     6  ENDW_COMM     187 [       5]  no   read      8     9    39    40

     7  PROD_COMM     190 [       0]  no   other     9
     8  DEMD_COMM     192 [       0]  no   other     9
     9  NSAV_COMM     194 [       0]  no   other
    10  ENDWS_COMM    241 [       5]  no   other     6     8     9    39
                                                     40
    11  ENDWM_COMM    244 [       0]  no   other     6     8     9    39
                                                     40
    12  ENDWC_COMM    247         1   no   fixed     6     8     9    39
                                                     40
    13  DTRAD_COMM    272 [      10]  no   read 
    14  DLAND_COMM    283        12   no   fixed    13
    15  LAND_COMM     296 [      10]  no   other     2     7     8     9
                                                      7
    16  NLNDP_COMM    304 [       0]  no   other     7     9
    17  DCROP_COMM    311         8   no   fixed    13    14
    18  CROP_COMM     323 [      10]  no   other     2     7     8     9
                                                      7    15     9
    19  DFOREST_COMM  334         1   no   fixed    13    14
    20  FOREST_COMM   342 [      10]  no   other     2     7     8     9
                                                      7    15    35    34
                                                     32
    21  DGRAZE_COMM   354         3   no   fixed    13    14
    22  GRAZE_COMM    364 [      10]  no   other     2     7     8     9
                                                      7    15    35    34
                                                     32
    23  AGRLAND_COMM  374 [       0]  no   other    15     2     7     8
                                                      9
    24  NAGLAND_COMM  377 [       0]  no   other     7     9
    25  AEZ_COMM      384 [      18]  no   read      6     8     9    10
                                                     39    40
    26  NAEZ_COMM     391 [       0]  no   other     6     8     9    39
                                                     40    41
    27  SNAEZ_COMM    395 [       0]  no   other    10     6     8     9
                                                     26    39    40    41

    28  NCROP_COMM    400 [       0]  no   other     7     9
    29  PESDONORS    2652 [      10]  no   other     1
    30  S@ruminant   3533         1   no   fixed     2     9     7     8
                                                     34    32
    31  S@nonruminan 3533         1   no   fixed     2     9     7     8

    32  LAND_COVER   4585 [       0]  no   read 
    33  UNMNGLAND    4587         1   no   fixed    32    32
    34  PROD_COVER   4592 [       0]  no   other    32
    35  PROD2_COVER  4595 [       0]  no   other    34    32    15     2
                                                      7     8     9
    36  ACROP_COMM   4601 [       0]  no   other    34    32
    37  GDPEX        5381         6   no   fixed
    38  REGINC       5602 [       0]  no   read 
    39  GDPIN        5686 [       0]  no   other    40
    40  CONTGDPIN    5688 [       0]  no   other
    41  CONTGDPIN2   5690 [       0]  no   other
    42  S@IndTaxes   5696         1   no   fixed    40    41    47    50

    43  S@TechChange 5696         1   no   fixed    40    41    47    50

    44  S@land       5723         1   no   fixed    41
    45  ACTS         5764 [       0]  no   other     7     9    46    47

    46  GDPVA        5766 [       0]  no   other    47
    47  CONTGVA      5768 [       0]  no   other
    48  GDPREP       5805         3   no   fixed
    49  BACT         5815 [       0]  no   read     50
    50  CONTGVABACT  5824 [       0]  no   other
    51  AEZ_REVN     5857 [       0]  no   read     25     6     8     9
                                                     10    39    40
    52  PROD_REVN    5862 [       0]  no   read      7     9
    53  ENDW_X_REVN  5867 [       0]  no   other     6     8     9    39
                                                     40
    54  PROD_X_REVN  5870 [       0]  no   other     7     9
    55  S@paddyrice  5981         1   no   fixed     2     7     8     9
                                                     18    15
    56  S@wheat      5981         1   no   fixed     2     7     8     9
                                                     18    15
    57  S@crsgrns    5981         1   no   fixed     2     7     8     9
                                                     18    15
    58  S@fruitveg   5981         1   no   fixed     2     7     8     9
                                                     18    15
    59  S@oilsds     5981         1   no   fixed     2     7     8     9
                                                     18    15
    60  S@sugarcrps  5981         1   no   fixed     2     7     8     9
                                                     18    15
    61  S@cotton     5981         1   no   fixed     2     7     8     9
                                                     18    15
    62  S@othercrps  5981         1   no   fixed     2     7     8     9

    63  S@fishery    6028         1   no   fixed     2     7     8     9

    64  S@forestsec  6033         1   no   fixed     2     7     8     9
                                                     34    32
    65  S@NRes       6043         1   no   fixed     2     7     8     9

    66  S@Mnfcing    6043         1   no   fixed     2     7     8     9

    67  S@PrFood     6043         1   no   fixed     2     7     8     9

    68  S@PrLstk     6043         1   no   fixed     2     7     8     9

    69  S@Services   6048         1   no   fixed     2     7     8     9

    70  S@SkLab      6179         1   no   fixed     6     8     9    39
                                                     40
    71  S@UnSkLab    6184         1   no   fixed     6     8     9    39
                                                     40
    72  S@CROPLAND   6194         1   no   fixed    34    32




 ===============
 ++ SUBSET TABLE
 ===============

  Number  Lt Set  Lt Set        Big set  Big set
          number  name          number   name   
  ---------------------------------------------------
       1       3  MARG_COMM           2  TRAD_COMM   
       2       4  NMRG_COMM           2  TRAD_COMM   
       3       2  TRAD_COMM           7  PROD_COMM   
       4       5  CGDS_COMM           7  PROD_COMM   
       5       3  MARG_COMM           7  PROD_COMM   
       6       4  NMRG_COMM           7  PROD_COMM   
       7       6  ENDW_COMM           8  DEMD_COMM   
       8       2  TRAD_COMM           8  DEMD_COMM   
       9       3  MARG_COMM           8  DEMD_COMM   
      10       4  NMRG_COMM           8  DEMD_COMM   
      11       8  DEMD_COMM           9  NSAV_COMM   
      12       5  CGDS_COMM           9  NSAV_COMM   
      13       2  TRAD_COMM           9  NSAV_COMM   
      14       3  MARG_COMM           9  NSAV_COMM   
      15       4  NMRG_COMM           9  NSAV_COMM   
      16       6  ENDW_COMM           9  NSAV_COMM   
      17       7  PROD_COMM           9  NSAV_COMM   
      18      10  ENDWS_COMM          6  ENDW_COMM   
      19      10  ENDWS_COMM          8  DEMD_COMM   
      20      10  ENDWS_COMM          9  NSAV_COMM   
      21      11  ENDWM_COMM          6  ENDW_COMM   
      22      11  ENDWM_COMM          8  DEMD_COMM   
      23      11  ENDWM_COMM          9  NSAV_COMM   
      24      12  ENDWC_COMM          6  ENDW_COMM   
      25      12  ENDWC_COMM          8  DEMD_COMM   
      26      12  ENDWC_COMM          9  NSAV_COMM   
      27      14  DLAND_COMM         13  DTRAD_COMM  
      28      15  LAND_COMM           2  TRAD_COMM   
      29      15  LAND_COMM           7  PROD_COMM   
      30      15  LAND_COMM           8  DEMD_COMM   
      31      15  LAND_COMM           9  NSAV_COMM   
      32      15  LAND_COMM           7  PROD_COMM   
      33      16  NLNDP_COMM          7  PROD_COMM   
      34      16  NLNDP_COMM          9  NSAV_COMM   
      35      17  DCROP_COMM         13  DTRAD_COMM  
      36      17  DCROP_COMM         14  DLAND_COMM  
      37      18  CROP_COMM           2  TRAD_COMM   
      38      18  CROP_COMM           7  PROD_COMM   
      39      18  CROP_COMM           8  DEMD_COMM   
      40      18  CROP_COMM           9  NSAV_COMM   
      41      18  CROP_COMM           7  PROD_COMM   
      42      18  CROP_COMM          15  LAND_COMM   
      43      19  DFOREST_COMM       13  DTRAD_COMM  
      44      19  DFOREST_COMM       14  DLAND_COMM  
      45      20  FOREST_COMM         2  TRAD_COMM   
      46      20  FOREST_COMM         7  PROD_COMM   
      47      20  FOREST_COMM         8  DEMD_COMM   
      48      20  FOREST_COMM         9  NSAV_COMM   
      49      20  FOREST_COMM         7  PROD_COMM   
      50      20  FOREST_COMM        15  LAND_COMM   
      51      21  DGRAZE_COMM        13  DTRAD_COMM  
      52      21  DGRAZE_COMM        14  DLAND_COMM  
      53      22  GRAZE_COMM          2  TRAD_COMM   
      54      22  GRAZE_COMM          7  PROD_COMM   
      55      22  GRAZE_COMM          8  DEMD_COMM   
      56      22  GRAZE_COMM          9  NSAV_COMM   
      57      22  GRAZE_COMM          7  PROD_COMM   
      58      22  GRAZE_COMM         15  LAND_COMM   
      59      23  AGRLAND_COMM       15  LAND_COMM   
      60      23  AGRLAND_COMM        2  TRAD_COMM   
      61      23  AGRLAND_COMM        7  PROD_COMM   
      62      23  AGRLAND_COMM        8  DEMD_COMM   
      63      23  AGRLAND_COMM        9  NSAV_COMM   
      64      24  NAGLAND_COMM        7  PROD_COMM   
      65      24  NAGLAND_COMM        9  NSAV_COMM   
      66      25  AEZ_COMM            6  ENDW_COMM   
      67      25  AEZ_COMM            8  DEMD_COMM   
      68      25  AEZ_COMM            9  NSAV_COMM   
      69      25  AEZ_COMM           10  ENDWS_COMM  
      70      26  NAEZ_COMM           6  ENDW_COMM   
      71      26  NAEZ_COMM           8  DEMD_COMM   
      72      26  NAEZ_COMM           9  NSAV_COMM   
      73      27  SNAEZ_COMM         10  ENDWS_COMM  
      74      27  SNAEZ_COMM          6  ENDW_COMM   
      75      27  SNAEZ_COMM          8  DEMD_COMM   
      76      27  SNAEZ_COMM          9  NSAV_COMM   
      77      27  SNAEZ_COMM         26  NAEZ_COMM   
      78      28  NCROP_COMM          7  PROD_COMM   
      79      28  NCROP_COMM          9  NSAV_COMM   
      80      29  PESDONORS           1  REG         
      81      30  S@ruminant          2  TRAD_COMM   
      82      31  S@nonruminan        2  TRAD_COMM   
      83      30  S@ruminant          9  NSAV_COMM   
      84      31  S@nonruminan        9  NSAV_COMM   
      85      30  S@ruminant          7  PROD_COMM   
      86      30  S@ruminant          8  DEMD_COMM   
      87      31  S@nonruminan        7  PROD_COMM   
      88      31  S@nonruminan        8  DEMD_COMM   
      89      33  UNMNGLAND          32  LAND_COVER  
      90      33  UNMNGLAND          32  LAND_COVER  
      91      34  PROD_COVER         32  LAND_COVER  
      92      20  FOREST_COMM        35  PROD2_COVER 
      93      22  GRAZE_COMM         35  PROD2_COVER 
      94      35  PROD2_COVER        34  PROD_COVER  
      95      35  PROD2_COVER        32  LAND_COVER  
      96      20  FOREST_COMM        34  PROD_COVER  
      97      22  GRAZE_COMM         34  PROD_COVER  
      98      20  FOREST_COMM        32  LAND_COVER  
      99      22  GRAZE_COMM         32  LAND_COVER  
     100      35  PROD2_COVER        15  LAND_COMM   
     101      35  PROD2_COVER         2  TRAD_COMM   
     102      35  PROD2_COVER         7  PROD_COMM   
     103      35  PROD2_COVER         8  DEMD_COMM   
     104      35  PROD2_COVER         9  NSAV_COMM   
     105      36  ACROP_COMM         34  PROD_COVER  
     106      36  ACROP_COMM         32  LAND_COVER  
     107      18  CROP_COMM           9  NSAV_COMM   
     108       6  ENDW_COMM          39  GDPIN       
     109      10  ENDWS_COMM         39  GDPIN       
     110      11  ENDWM_COMM         39  GDPIN       
     111      12  ENDWC_COMM         39  GDPIN       
     112      25  AEZ_COMM           39  GDPIN       
     113      26  NAEZ_COMM          39  GDPIN       
     114      27  SNAEZ_COMM         39  GDPIN       
     115      39  GDPIN              40  CONTGDPIN   
     116       6  ENDW_COMM          40  CONTGDPIN   
     117      10  ENDWS_COMM         40  CONTGDPIN   
     118      11  ENDWM_COMM         40  CONTGDPIN   
     119      12  ENDWC_COMM         40  CONTGDPIN   
     120      25  AEZ_COMM           40  CONTGDPIN   
     121      26  NAEZ_COMM          40  CONTGDPIN   
     122      27  SNAEZ_COMM         40  CONTGDPIN   
     123      26  NAEZ_COMM          41  CONTGDPIN2  
     124      27  SNAEZ_COMM         41  CONTGDPIN2  
     125      42  S@IndTaxes         40  CONTGDPIN   
     126      43  S@TechChange       40  CONTGDPIN   
     127      44  S@land             41  CONTGDPIN2  
     128      42  S@IndTaxes         41  CONTGDPIN2  
     129      43  S@TechChange       41  CONTGDPIN2  
     130      45  ACTS                7  PROD_COMM   
     131      45  ACTS                9  NSAV_COMM   
     132      45  ACTS               46  GDPVA       
     133      46  GDPVA              47  CONTGVA     
     134      45  ACTS               47  CONTGVA     
     135      42  S@IndTaxes         47  CONTGVA     
     136      43  S@TechChange       47  CONTGVA     
     137      49  BACT               50  CONTGVABACT 
     138      42  S@IndTaxes         50  CONTGVABACT 
     139      43  S@TechChange       50  CONTGVABACT 
     140      51  AEZ_REVN           25  AEZ_COMM    
     141      51  AEZ_REVN            6  ENDW_COMM   
     142      51  AEZ_REVN            8  DEMD_COMM   
     143      51  AEZ_REVN            9  NSAV_COMM   
     144      51  AEZ_REVN           10  ENDWS_COMM  
     145      51  AEZ_REVN           39  GDPIN       
     146      51  AEZ_REVN           40  CONTGDPIN   
     147      52  PROD_REVN           7  PROD_COMM   
     148      52  PROD_REVN           9  NSAV_COMM   
     149      53  ENDW_X_REVN         6  ENDW_COMM   
     150      53  ENDW_X_REVN         8  DEMD_COMM   
     151      53  ENDW_X_REVN         9  NSAV_COMM   
     152      53  ENDW_X_REVN        39  GDPIN       
     153      53  ENDW_X_REVN        40  CONTGDPIN   
     154      54  PROD_X_REVN         7  PROD_COMM   
     155      54  PROD_X_REVN         9  NSAV_COMM   
     156      55  S@paddyrice         2  TRAD_COMM   
     157      56  S@wheat             2  TRAD_COMM   
     158      57  S@crsgrns           2  TRAD_COMM   
     159      58  S@fruitveg          2  TRAD_COMM   
     160      59  S@oilsds            2  TRAD_COMM   
     161      60  S@sugarcrps         2  TRAD_COMM   
     162      61  S@cotton            2  TRAD_COMM   
     163      62  S@othercrps         2  TRAD_COMM   
     164      55  S@paddyrice         7  PROD_COMM   
     165      55  S@paddyrice         8  DEMD_COMM   
     166      55  S@paddyrice         9  NSAV_COMM   
     167      56  S@wheat             7  PROD_COMM   
     168      56  S@wheat             8  DEMD_COMM   
     169      56  S@wheat             9  NSAV_COMM   
     170      57  S@crsgrns           7  PROD_COMM   
     171      57  S@crsgrns           8  DEMD_COMM   
     172      57  S@crsgrns           9  NSAV_COMM   
     173      58  S@fruitveg          7  PROD_COMM   
     174      58  S@fruitveg          8  DEMD_COMM   
     175      58  S@fruitveg          9  NSAV_COMM   
     176      59  S@oilsds            7  PROD_COMM   
     177      59  S@oilsds            8  DEMD_COMM   
     178      59  S@oilsds            9  NSAV_COMM   
     179      60  S@sugarcrps         7  PROD_COMM   
     180      60  S@sugarcrps         8  DEMD_COMM   
     181      60  S@sugarcrps         9  NSAV_COMM   
     182      61  S@cotton            7  PROD_COMM   
     183      61  S@cotton            8  DEMD_COMM   
     184      61  S@cotton            9  NSAV_COMM   
     185      62  S@othercrps         7  PROD_COMM   
     186      62  S@othercrps         8  DEMD_COMM   
     187      62  S@othercrps         9  NSAV_COMM   
     188      63  S@fishery           2  TRAD_COMM   
     189      63  S@fishery           7  PROD_COMM   
     190      63  S@fishery           8  DEMD_COMM   
     191      63  S@fishery           9  NSAV_COMM   
     192      64  S@forestsec         2  TRAD_COMM   
     193      64  S@forestsec         7  PROD_COMM   
     194      64  S@forestsec         8  DEMD_COMM   
     195      64  S@forestsec         9  NSAV_COMM   
     196      65  S@NRes              2  TRAD_COMM   
     197      66  S@Mnfcing           2  TRAD_COMM   
     198      67  S@PrFood            2  TRAD_COMM   
     199      68  S@PrLstk            2  TRAD_COMM   
     200      65  S@NRes              7  PROD_COMM   
     201      65  S@NRes              8  DEMD_COMM   
     202      65  S@NRes              9  NSAV_COMM   
     203      66  S@Mnfcing           7  PROD_COMM   
     204      66  S@Mnfcing           8  DEMD_COMM   
     205      66  S@Mnfcing           9  NSAV_COMM   
     206      67  S@PrFood            7  PROD_COMM   
     207      67  S@PrFood            8  DEMD_COMM   
     208      67  S@PrFood            9  NSAV_COMM   
     209      68  S@PrLstk            7  PROD_COMM   
     210      68  S@PrLstk            8  DEMD_COMM   
     211      68  S@PrLstk            9  NSAV_COMM   
     212      69  S@Services          2  TRAD_COMM   
     213      69  S@Services          7  PROD_COMM   
     214      69  S@Services          8  DEMD_COMM   
     215      69  S@Services          9  NSAV_COMM   
     216      55  S@paddyrice        18  CROP_COMM   
     217      55  S@paddyrice        15  LAND_COMM   
     218      56  S@wheat            18  CROP_COMM   
     219      56  S@wheat            15  LAND_COMM   
     220      57  S@crsgrns          18  CROP_COMM   
     221      57  S@crsgrns          15  LAND_COMM   
     222      58  S@fruitveg         18  CROP_COMM   
     223      58  S@fruitveg         15  LAND_COMM   
     224      59  S@oilsds           18  CROP_COMM   
     225      59  S@oilsds           15  LAND_COMM   
     226      60  S@sugarcrps        18  CROP_COMM   
     227      60  S@sugarcrps        15  LAND_COMM   
     228      61  S@cotton           18  CROP_COMM   
     229      61  S@cotton           15  LAND_COMM   
     230      70  S@SkLab             6  ENDW_COMM   
     231      70  S@SkLab             8  DEMD_COMM   
     232      70  S@SkLab             9  NSAV_COMM   
     233      70  S@SkLab            39  GDPIN       
     234      70  S@SkLab            40  CONTGDPIN   
     235      71  S@UnSkLab           6  ENDW_COMM   
     236      71  S@UnSkLab           8  DEMD_COMM   
     237      71  S@UnSkLab           9  NSAV_COMM   
     238      71  S@UnSkLab          39  GDPIN       
     239      71  S@UnSkLab          40  CONTGDPIN   
     240      72  S@CROPLAND         34  PROD_COVER  
     241      72  S@CROPLAND         32  LAND_COVER  
     242      64  S@forestsec        34  PROD_COVER  
     243      64  S@forestsec        32  LAND_COVER  
     244      30  S@ruminant         34  PROD_COVER  
     245      30  S@ruminant         32  LAND_COVER  




 =============
 ++ FILE TABLE
 =============

         Logical            Defined  File  File
  Number  Name              at line  Type  Form  Actual name (if given)
  --------------------------------------------------------------------
     1  GTAPSETS               111    old  head
     2  GTAPDATA               113    old  head
     3  GTAPPARM               115    old  head
     4  GTAPSUPP               119    old  head
     5  GTAPSUM                121    new  head




 =================
 ++ VARIABLE TABLE
 =================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1   psave             449     1  perc       1
     2   qsave             451     1  perc       1
     3   pgd               466     2  perc       2     1
     4   qgd               468     2  perc       2     1
     5   pm                477     2  perc       9     1
     6   pgm               486     2  perc       2     1
     7   qgm               488     2  perc       2     1
     8   pim               497     2  perc       2     1
     9   ppd               512     2  perc       2     1
    10   qpd               514     2  perc       2     1
    11   ppm               530     2  perc       2     1
    12   qpm               532     2  perc       2     1
    13   ps                554     2  perc       9     1
    14   qo                556     2  perc       9     1
    15   pfe               565     3  perc       6     7     1
    16   qfe               567     3  perc       6     7     1
    17   pfd               576     3  perc       2     7     1
    18   qfd               578     3  perc       2     7     1
    19   pfm               587     3  perc       2     7     1
    20   qfm               589     3  perc       2     7     1
    21   pmes              598     3  perc      10     7     1
    22   kb                629     1  perc       1
    23   pcgds             631     1  perc       1
    24   pms               650     3  perc       2     1     1
    25   qxs               652     3  perc       2     1     1
    26   pcif              661     3  perc       2     1     1
    27   pfob              670     3  perc       2     1     1
    28   qst               687     2  perc       3     1
    29   y                 710     1  perc       1
    30   pop               712     1  perc       1
    31   qoes              714     3  perc      10     7     1
    32   endwslack         716     2  perc       6     1
    33   pgov              723     1  perc       1
    34   yg                725     1  perc       1
    35   ug                728     1  perc       1
    36   ppriv             730     1  perc       1
    37   uepriv            733     1  perc       1
    38   yp                736     1  perc       1
    39   up                738     1  perc       1
    40   to                740     2  perc       9     1
    41   to_1              744     2  perc       9     1
    42   to_2              747     1  perc       1
    43   qim               761     2  perc       2     1
    44   globalcgds        763     0  perc
    45   pcgdswld          765     0  perc
    46   del_taxrgc        787     1  chng       1
    47   del_taxrpc        789     1  chng       1
    48   del_taxriu        791     1  chng       1
    49   del_taxrfu        793     1  chng       1
    50   del_taxrout       795     1  chng       1
    51   del_taxrexp       797     1  chng       1
    52   del_taxrimp       799     1  chng       1
    53   del_taxrinc       801     1  chng       1
    54   p_INCOME_track    915     1  perc       1
    55   pg               1081     2  perc       2     1
    56   qg               1083     2  perc       2     1
    57   tgd              1113     2  perc       2     1
    58   tgm              1116     2  perc       2     1
    59   pp               1178     2  perc       2     1
    60   qp               1180     2  perc       2     1
    61   tp               1281     1  perc       1
    62   tpd              1289     2  perc       2     1
    63   atpd             1291     2  perc       2     1
    64   tpm              1303     2  perc       2     1
    65   atpm             1305     2  perc       2     1
    66   pva              1393     2  perc       7     1
    67   qva              1395     2  perc       7     1
    68   pf               1397     3  perc       2     7     1
    69   qf               1399     3  perc       2     7     1
    70   ao               1401     2  perc       7     1
    71   ava              1403     2  perc       7     1
    72   af               1405     3  perc       2     7     1
    73   afe              1407     3  perc       6     7     1
    74   ams              1409     3  perc       2     1     1
    75   tfd              1420     3  perc       2     7     1
    76   tfm              1432     3  perc       2     7     1
    77   tf               1478     3  perc       6     7     1
    78   afecom           1491     1  perc       6
    79   afesec           1493     1  perc       7
    80   afereg           1495     1  perc       1
    81   afeall           1497     3  perc       6     7     1
    82   pfeland          1607     2  perc      15     1
    83   qfeland          1609     2  perc      15     1
    84   aosec            1654     1  perc       7
    85   aoreg            1656     1  perc       1
    86   aoall            1658     2  perc       7     1
    87   aoall2           1660     2  perc       7     1
    88   aoall3           1662     2  perc       7     1
    89   aoall4           1664     2  perc       7     1
    90   avasec           1672     1  perc       7
    91   avareg           1674     1  perc       1
    92   avaall           1676     2  perc       7     1
    93   afcom            1707     1  perc       2
    94   afsec            1709     1  perc       7
    95   afreg            1711     1  perc       1
    96   afall            1713     3  perc       2     7     1
    97   profitslack      1753     2  perc       7     1
    98   rental           1804     1  perc       1
    99   ke               1806     1  perc       1
   100   rore             1808     1  perc       1
   101   rorc             1810     1  perc       1
   102   qcgds            1812     1  perc       1
   103   ksvces           1821     1  perc       1
   104   EXPAND           1933     2  perc      12     1
   105   rorg             1960     0  perc
   106   cgdslack         1962     1  perc       1
   107   psaveslack       2011     1  perc       1
   108   tx               2051     2  perc       2     1
   109   txs              2053     3  perc       2     1     1
   110   tm               2084     2  perc       2     1
   111   tms              2086     3  perc       2     1     1
   112   pr               2111     2  perc       2     1
   113   qtmfsd           2169     4  perc       3     2     1     1
   114   atmfsd           2175     4  perc       3     2     1     1
   115   atm              2182     1  perc       2
   116   atf              2184     1  perc       2
   117   ats              2186     1  perc       1
   118   atd              2188     1  perc       1
   119   atall            2190     4  perc       3     2     1     1
   120   ptrans           2192     3  perc       2     1     1
   121   qtm              2197     1  perc       3
   122   pt               2199     1  perc       3
   123   uelas            2416     1  perc       1
   124   dppriv           2419     1  perc       1
   125   dpgov            2421     1  perc       1
   126   dpsave           2423     1  perc       1
   127   pmland           2497     2  perc      25     1
   128   qocropland       2521     2  perc      25     1
   129   pmcropland       2523     2  perc      25     1
   130   fincome          2574     1  perc       1
   131   del_indtaxr      2583     1  chng       1
   132   del_ttaxr        2592     1  chng       1
   133   incomeslack      2606     1  perc       1
   134   pes_inflow       2631     1  chng       1
   135   pes_outflow      2634     1  chng       1
   136   pes_outflow_wld  2640     0  chng
   137   dpav             2705     1  perc       1
   138   p                2741     1  perc       1
   139   au               2751     1  perc       1
   140   dpsum            2753     1  perc       1
   141   u                2807     1  perc       1
   142   qds              2859     2  perc       2     1
   143   tradslack        2884     2  perc       2     1
   144   walras_sup       2964     0  perc
   145   walras_dem       2975     0  perc
   146   walraslack       2986     0  perc
   147   vxwfob           3040     2  perc       2     1
   148   viwcif           3042     2  perc       2     1
   149   vxwreg           3044     1  perc       1
   150   viwreg           3046     1  perc       1
   151   pfactreal        3076     2  perc       6     1
   152   pfactor          3092     1  perc       1
   153   pfactwld         3103     0  perc
   154   psw              3118     1  perc       1
   155   pdw              3132     1  perc       1
   156   tot              3144     1  perc       1
   157   vgdp             3172     1  perc       1
   158   pgdp             3186     1  perc       1
   159   qgdp             3199     1  perc       1
   160   compvalad        3215     2  perc       7     1
   161   pxw              3244     2  perc       2     1
   162   vxwcom           3306     1  perc       2
   163   vxwwld           3313     0  perc
   164   viwcom           3330     1  perc       2
   165   valuew           3337     1  perc       2
   166   valuewu          3344     1  perc       2
   167   pxwreg           3371     1  perc       1
   168   pxwcom           3378     1  perc       2
   169   pxwwld           3385     0  perc
   170   piw              3391     2  perc       2     1
   171   piwreg           3398     1  perc       1
   172   piwcom           3405     1  perc       2
   173   pw               3412     1  perc       2
   174   pwu              3419     1  perc       2
   175   qxw              3435     2  perc       2     1
   176   qxwreg           3450     1  perc       1
   177   qxwcom           3460     1  perc       2
   178   qxwwld           3470     0  perc
   179   qiw              3479     2  perc       2     1
   180   qiwreg           3489     1  perc       1
   181   qiwcom           3499     1  perc       2
   182   qow              3509     1  perc       2
   183   qo_crops         3517     1  perc       1
   184   qow_crops        3524     0  perc
   185   qo_live          3531     1  perc       1
   186   qow_live         3540     0  perc
   187   qowu             3561     1  perc       2
   188   DTBALi           3577     2  chng       2     1
   189   DTBAL            3589     1  chng       1
   190   DTBALR           3610     1  chng       1
   191   uelasev          3651     1  perc       1
   192   ueprivev         3654     1  perc       1
   193   ugev             3657     1  perc       1
   194   upev             3659     1  perc       1
   195   qsaveev          3661     1  perc       1
   196   yev              3663     1  perc       1
   197   ypev             3665     1  perc       1
   198   ygev             3668     1  perc       1
   199   qpev             3717     2  perc       2     1
   200   ysaveev          3794     1  perc       1
   201   dpavev           3841     1  perc       1
   202   EV               3904     1  chng       1
   203   WEV              3911     0  chng
   204   EV_ALT           3935     1  chng       1
   205   WEV_ALT          3980     0  chng
   206   CNTdpar          3986     1  chng       1
   207   CNTpopr          3996     1  chng       1
   208   CNTqor           4002     1  chng       1
   209   CNTqoir          4010     2  chng       9     1
   210   CNTqfer          4017     1  chng       1
   211   CNTqfeir         4026     2  chng       6     1
   212   CNTqfeijr        4035     3  chng       6     7     1
   213   CNTqfmr          4043     1  chng       1
   214   CNTqfmir         4052     2  chng       2     1
   215   CNTqfmijr        4061     3  chng       2     7     1
   216   CNTqfdr          4069     1  chng       1
   217   CNTqfdir         4078     2  chng       2     1
   218   CNTqfdijr        4087     3  chng       2     7     1
   219   CNTqpmr          4095     1  chng       1
   220   CNTqpmir         4104     2  chng       2     1
   221   CNTqpdr          4111     1  chng       1
   222   CNTqpdir         4120     2  chng       2     1
   223   CNTqgmr          4127     1  chng       1
   224   CNTqgmir         4136     2  chng       2     1
   225   CNTqgdr          4143     1  chng       1
   226   CNTqgdir         4152     2  chng       2     1
   227   CNTqxsr          4159     1  chng       1
   228   CNTqxsirs        4168     3  chng       2     1     1
   229   CNTqimr          4176     1  chng       1
   230   CNTqimisr        4185     3  chng       2     1     1
   231   CNTalleffr       4193     1  chng       1
   232   CNTalleffir      4214     2  chng       8     1
   233   CNTtotr          4237     1  chng       1
   234   CNTcgdsr         4249     1  chng       1
   235   CNTendwr         4257     1  chng       1
   236   CNTendwir        4266     2  chng       6     1
   237   CNTtechr         4272     1  chng       1
   238   CNTtech_aor      4287     1  chng       1
   239   CNTtech_aoir     4295     2  chng       7     1
   240   CNTtech_afer     4302     1  chng       1
   241   CNTtech_afeijr   4311     3  chng       6     7     1
   242   CNTtech_avar     4318     1  chng       1
   243   CNTtech_avajr    4326     2  chng       7     1
   244   CNTtech_afr      4333     1  chng       1
   245   CNTtech_afijr    4343     3  chng       2     7     1
   246   CNTtech_atrr     4351     1  chng       1
   247   CNTtech_afmfdsd  4361     4  chng       3     2     1     1
   248   CNTtech_amsr     4369     1  chng       1
   249   CNTtech_amsirs   4377     3  chng       2     1     1
   250   CNTkbr           4384     1  chng       1
   251   px_ir            4450     2  perc       2     1
   252   pm_ir            4472     2  perc       2     1
   253   px_i             4494     1  perc       2
   254   px_              4514     0  perc
   255   c1_ir            4520     2  perc       2     1
   256   c2_ir            4527     2  perc       2     1
   257   c3_ir            4534     2  perc       2     1
   258   c1_r             4541     1  perc       1
   259   c2_r             4548     1  perc       1
   260   c3_r             4555     1  perc       1
   261   tot2             4562     1  perc       1
   262   lcoveraez        4603     2  perc      25     1
   263   p_LANDCOVER_L    4610     3  perc      25    32     1
   264   p_LANDCOVER_R    4622     2  perc      34     1
   265   p_LANDCOVER_W    4627     1  perc      34
   266   p_RENTCOVER      4642     3  perc      25    34     1
   267   p_RENTCOVERAV    4664     2  perc      25     1
   268   p_HARVSTAREA_L   4675     3  perc      25    18     1
   269   harvstaez        4763     2  perc      25     1
   270   harvstslack      4766     2  perc      25     1
   271   harvstcom        4769     2  perc      18     1
   272   areaadjust       4780     2  perc      25     1
   273   lcovercom        4809     2  perc      34     1
   274   p_RENTCROP       4827     3  perc      25    18     1
   275   p_RENTCROPAV     4837     2  perc      25     1
   276   hareaslackreg    4890     1  perc       1
   277   xlcoveraez       4912     2  perc      25     1
   278   LUC              4923     3  chng      25    32     1
   279   cHARVSTAREA      4931     3  chng      25    18     1
   280   p_ECONLAND       4970     2  perc      25     1
   281   p_ECONLANDW      4975     1  perc       1
   282   p_slackland      4980     2  perc      25     1
   283   p_slacklandr     4983     1  perc       1
   284   c_MAX_LAND       4987     2  chng      25     1
   285   p_PRODUCTION     5053     3  perc      25    18     1
   286   p_YIELD          5076     2  perc      18     1
   287   p_YIELDGL        5096     1  perc      18
   288   globalouput      5111     1  perc      18
   289   cnt_yield        5119     1  perc      18
   290   cnt_yieldint     5128     1  perc      18
   291   cnt_yieldext     5137     1  perc      18
   292   cnt_area         5146     1  perc      18
   293   regouput         5179     2  perc      18     1
   294   cnt_yieldreg     5187     2  perc      18     1
   295   cnt_yieldintreg  5196     2  perc      18     1
   296   cnt_yieldextreg  5205     2  perc      18     1
   297   cnt_areareg      5214     2  perc      18     1
   298   qp_ind           5416     1  perc       1
   299   qg_ind           5418     1  perc       1
   300   qfobxw_ind       5420     1  perc       1
   301   qstxw_ind        5422     1  perc       1
   302   pfobxw_ind       5461     1  perc       1
   303   pstxw_ind        5463     1  perc       1
   304   pgdpexp_ind      5465     2  perc       1    37
   305   qgdpexp_ind      5467     2  perc       1    37
   306   vgdpexp_ind      5469     2  perc       1    37
   307   pgdplaspeyres    5501     1  perc       1
   308   qgdplaspeyres    5503     1  perc       1
   309   pgdppaasche      5505     1  perc       1
   310   qgdppaasche      5507     1  perc       1
   311   pgdpfisher       5509     1  perc       1
   312   qgdpfisher       5511     1  perc       1
   313   vgdpfisher       5513     1  perc       1
   314   preg             5561     1  perc       1
   315   pfacthouse       5569     2  perc       6     1
   316   pfacthouse_l     5577     1  perc       1
   317   pfactreal_l      5583     1  perc       1
   318   delQGDP          5616     1  chng       1
   319   qgdpreginc       5623     1  perc      38
   320   contGDPEXP       5659     2  chng       1    37
   321   qgdpexp          5678     1  chng       1
   322   contGDPINC       5694     2  chng       1    40
   323   contGDPINC2      5721     2  chng       1    41
   324   qgdpinc          5749     1  chng       1
   325   qgdpdiff         5756     1  perc       1
   326   contGDPGVA       5771     2  chng       1    47
   327   qgdpind          5798     1  chng       1
   328   qgdprep          5806     2  chng       1    48
   329   contGDPBACT      5827     2  chng       1    50
   330   qobactreg        5836     2  perc      49     1
   331   qobactwld        5843     1  perc      49
   332   tfijr            5874     3  perc       6     7     1
   333   tfreg            5876     1  perc       1
   334   p_qow_r          5972     2  perc       2     1
   335   p_qow_cropout    5979     1  perc       1
   336   p_qow_pdyrice    5986     1  perc       1
   337   p_qow_wheat      5991     1  perc       1
   338   p_qow_crsgrns    5996     1  perc       1
   339   p_qow_fruitveg   6001     1  perc       1
   340   p_qow_oilsds     6006     1  perc       1
   341   p_qow_sugarcrp   6011     1  perc       1
   342   p_qow_cotton     6016     1  perc       1
   343   p_qow_liveout    6021     1  perc       1
   344   p_qow_fishout    6026     1  perc       1
   345   p_qow_forsout    6031     1  perc       1
   346   p_qow_agforout   6036     1  perc       1
   347   p_qow_mnfc       6041     1  perc       1
   348   p_qow_serv       6046     1  perc       1
   349   p_qxw_r          6053     2  perc       2     1
   350   p_qxw_cropout    6060     1  perc       1
   351   p_qxw_pdyrice    6067     1  perc       1
   352   p_qxw_wheat      6072     1  perc       1
   353   p_qxw_crsgrns    6077     1  perc       1
   354   p_qxw_fruitveg   6082     1  perc       1
   355   p_qxw_oilsds     6087     1  perc       1
   356   p_qxw_sugarcrp   6092     1  perc       1
   357   p_qxw_cotton     6097     1  perc       1
   358   p_qxw_liveout    6102     1  perc       1
   359   p_qxw_fishout    6107     1  perc       1
   360   p_qxw_forsout    6112     1  perc       1
   361   p_qxw_agforout   6117     1  perc       1
   362   p_qxw_mnfc       6122     1  perc       1
   363   p_qxw_serv       6127     1  perc       1
   364   p_qmt_pdyrice    6134     1  perc       1
   365   p_qmt_wheat      6139     1  perc       1
   366   p_qmt_crsgrns    6144     1  perc       1
   367   p_qmt_fruitveg   6149     1  perc       1
   368   p_qmt_oilsds     6154     1  perc       1
   369   p_qmt_sugarcrp   6159     1  perc       1
   370   p_qmt_cotton     6164     1  perc       1
   371   pfactrl_land     6171     1  perc       1
   372   pfactrl_sklab    6177     1  perc       1
   373   pfactrl_usklab   6182     1  perc       1
   374   pfactrl_cap      6187     1  perc       1
   375   p_lc_cropland    6192     1  perc       1
   376   p_lc_mngforest   6197     1  perc       1
   377   p_lc_pasture     6202     1  perc       1
   378   lc_ntl_land      6207     1  chng       1
   379   pmallland        6212     1  perc       1
   380   p_VDFA_alt       6239     3  perc       2     7     1
   381   p_VIFA_alt       6244     3  perc       2     7     1
   382   p_EVFA_alt       6249     3  perc       6     7     1
   383   p_VFA_alt        6255     3  perc       8     7     1
   384   p_VOA_alt        6260     2  perc       9     1
   385   p_VFM_alt        6269     3  perc       6     7     1
   386   p_VDPM_alt       6278     2  perc       2     1
   387   p_VDGM_alt       6285     2  perc       2     1
   388   p_VDFM_alt       6292     3  perc       2     7     1
   389   p_VIFM_alt       6299     3  perc       2     7     1
   390   p_VDM_alt        6307     2  perc       2     1
   391   p_VXMD_alt       6312     3  perc       2     1     1
   392   p_VST_alt        6320     2  perc       3     1
   393   p_VOM_alt        6327     2  perc       9     1
   394   c_dTO_alt        6342     2  chng       9     1
   395   c_dTFD_alt       6360     3  chng       2     7     1
   396   c_dTFM_alt       6369     3  chng       2     7     1
   397   c_dTO_slack      6378     1  chng       1
   398   c_dTO_AEZ        6381     2  chng      25     1
   399   c_dTO_AEZR       6386     1  chng       1
   400   CNTpesgrin       6398     1  chng       1
   401   CNTpesgrout      6405     1  chng       1
   402   CNTpesgr         6412     1  chng       1
   403   ureginc          6426     1  perc      38
   404   pgdpexreginc     6439     2  perc      38    37
   405   qgdpexreginc     6446     2  perc      38    37
   406   pgdpreginc       6463     1  perc      38
   407   contGDPEXP_a     6476     2  chng      38    37
   408   contGDPINC_a     6484     2  chng      38    41
   409   pgdpwld          6514     0  perc
   410   qgdpwld          6519     0  perc
   411   qgdpewld         6525     1  perc      37
   412   pgdpewld         6531     1  perc      37
   413   contGDPEXP_w     6555     1  chng      37
   414   contGDPINC_w     6562     1  chng      41
   415   qoar             6593     2  perc      49    38
   416   poar             6601     2  perc      49    38
   417   pobactwld        6609     1  perc      49
   418   qear             6616     2  perc       6    38
   419   pear             6623     2  perc       6    38
   420   qewld            6630     1  perc       6
   421   pewld            6637     1  perc       6
   422   qfear            6644     3  perc       6    49    38
   423   pfear            6652     3  perc       6    49    38
   424   qfeawld          6660     2  perc       6    49
   425   pfeawld          6668     2  perc       6    49
   426   qxwacomreg       6676     2  perc      49    38
   427   qxsareg          6684     3  perc      49    38    38
   428   pfobareg         6692     3  perc      49    38    38




 ====================
 ++ COEFFICIENT TABLE
 ====================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1    VERNUM           162     0  real
     2    SIZE_TRAD        204     0  real
     3    SIZE_ENDW        208     0  real
     4    SIZE_DEMD        212     0  real
     5    SIZE_CGDS        219     0  real
     6    SIZE_PROD        223     0  real
     7    SLUG             236     1  int        6
     8    G2TRAD_COMM      279     1  int       13
     9    UNITVEC0         289     1  real      13
    10    ISLAND           292     1  real       2
    11    G2LAND_COMM      298     1  int       14
    12    UNITVEC          316     1  real      13
    13    ISCROP           319     1  real       2
    14    G2CROP_COMM      325     1  int       17
    15    ISFOR            338     1  real       2
    16    G2FOREST_COM     344     1  int       19
    17    ISGRAZE          360     1  real       2
    18    G2GRAZE_COMM     366     1  int       21
    19    SAVE             453     1  real       1
    20    VDGA             470     2  real       2     1
    21    VDGM             479     2  real       2     1
    22    VIGA             490     2  real       2     1
    23    VIGM             499     2  real       2     1
    24    VDPA             516     2  real       2     1
    25    VDPM             523     2  real       2     1
    26    VIPA             534     2  real       2     1
    27    VIPM             541     2  real       2     1
    28    EVOA             558     2  real       6     1
    29    EVFA             569     3  real       6     7     1
    30    VDFA             580     3  real       2     7     1
    31    VIFA             591     3  real       2     7     1
    32    VFM              600     3  real       6     7     1
    33    VIFM             609     3  real       2     7     1
    34    VDFM             616     3  real       2     7     1
    35    VDEP             633     1  real       1
    36    VIMS             654     3  real       2     1     1
    37    VIWS             663     3  real       2     1     1
    38    VXWD             672     3  real       2     1     1
    39    VXMD             679     3  real       2     1     1
    40    VST              689     2  real       3     1
    41    VFA              826     3  real       8     7     1
    42    VOA              833     2  real       9     1
    43    VDM              840     2  real       2     1
    44    VOM              845     2  real       9     1
    45    VGA              889     2  real       2     1
    46    GOVEXP           893     1  real       1
    47    VPA              899     2  real       2     1
    48    PRIVEXP          903     1  real       1
    49    INCOME           909     1  real       1
    50    INCOME_track     915     1  real       1
    51    DGTAX            928     2  real       2     1
    52    IGTAX            932     2  real       2     1
    53    TGC              936     1  real       1
    54    DPTAX            941     2  real       2     1
    55    IPTAX            945     2  real       2     1
    56    TPC              949     1  real       1
    57    DFTAX            954     3  real       2     7     1
    58    IFTAX            958     3  real       2     7     1
    59    TIU              962     1  real       1
    60    ETAX             967     3  real       6     7     1
    61    TFU              971     1  real       1
    62    PTAX             976     2  real       9     1
    63    TOUT             980     1  real       1
    64    XTAXD            985     3  real       2     1     1
    65    TEX              989     1  real       1
    66    MTAX             994     3  real       2     1     1
    67    TIM              998     1  real       1
    68    ESUBD           1010     2  real       2     1
    69    REGINV          1017     1  real       1
    70    NETINV          1021     1  real       1
    71    GLOBINV         1025     0  real
    72    CONSHR          1031     2  real       2     1
    73    INCPAR          1035     2  real       2     1
    74    UELASPRIV       1040     1  real       1
    75    GMSHR           1129     2  real       2     1
    76    XWCONSHR        1204     2  real       2     1
    77    SUBPAR          1222     2  real       2     1
    78    ALPHA           1231     2  real       2     1
    79    APE             1236     3  real       2     2     1
    80    EY              1247     2  real       2     1
    81    EP              1256     3  real       2     2     1
    82    PMSHR           1326     2  real       2     1
    83    FMSHR           1453     3  real       2     7     1
    84    VVA             1504     2  real       7     1
    85    SVADEFAULT      1508     1  real       6
    86    SVA             1514     3  real       6     7     1
    87    TOTALC          1546     2  real       7     1
    88    LANDCOST        1551     2  real       7     1
    89    THETAi          1557     2  real       7     1
    90    YDONOFF         1562     2  real       7     1
    91    YDREGSCALE      1566     1  real       1
    92    YDE_Target      1570     0  real
    93    ESUBVA1         1574     2  real       7     1
    94    ESUBVA          1580     2  real       7     1
    95    SAEZLAND        1601     3  real      25    15     1
    96    ESUBAEZ         1612     2  real       7     1
    97    ESUBT1          1683     1  real       7
    98    ESUBT           1689     2  real       7     1
    99    STC             1759     3  real       8     7     1
   100    VKB             1863     1  real       1
   101    INVKERATIO      1875     1  real       1
   102    GRNETRATIO      1892     1  real       1
   103    RORFLEX         1906     1  real       1
   104    RORDELTA        1946     0  int 
   105    MSHRS           2102     3  real       2     1     1
   106    ESUBM           2129     2  real       2     1
   107    VTMFSD          2205     4  real       3     2     1     1
   108    VTFSD           2213     3  real       2     1     1
   109    VTMUSE          2222     1  real       3
   110    VTMPROV         2227     1  real       3
   111    VTRPROV         2235     1  real       1
   112    VT              2240     0  real
   113    VTMUSESHR       2270     4  real       3     2     1     1
   114    VTSUPPSHR       2291     2  real       3     1
   115    VTUSE           2313     0  real
   116    VTFSD_MSH       2320     4  real       3     2     1     1
   117    VIWSCOST        2352     3  real       2     1     1
   118    FOBSHR          2357     3  real       2     1     1
   119    TRNSHR          2362     3  real       2     1     1
   120    XSHRPRIV        2401     1  real       1
   121    XSHRGOV         2406     1  real       1
   122    XSHRSAVE        2411     1  real       1
   123    TINC            2436     1  real       1
   124    REVSHR          2448     3  real       6     7     1
   125    ETRAE           2457     2  real       6     1
   126    ETRAEL1         2486     2  real      25     1
   127    SIZE_LAND       2492     0  real
   128    REVSHR1         2499     3  real      25    15     1
   129    CROPRENTS       2511     2  real      25     1
   130    SIZE_CROP       2516     0  real
   131    REVSHR2         2525     3  real      25    18     1
   132    ETRAEL2         2553     2  real      25     1
   133    FY              2570     1  real       1
   134    PESHR           2623     1  real       1
   135    PESha           2627     2  real      25     1
   136    INDTAX          2669     1  real       1
   137    DPARSUM         2756     1  real       1
   138    UTILELAS        2763     1  real       1
   139    DPARPRIV        2769     1  real       1
   140    DPARGOV         2774     1  real       1
   141    DPARSAVE        2779     1  real       1
   142    UTILPRIV        2784     1  real       1
   143    UTILGOV         2791     1  real       1
   144    UTILSAVE        2798     1  real       1
   145    SHRDFM          2844     3  real       2     7     1
   146    SHRDPM          2849     2  real       2     1
   147    SHRDGM          2854     2  real       2     1
   148    SHRDM           2869     2  real       2     1
   149    SHRST           2874     2  real       3     1
   150    SHRXMD          2879     3  real       2     1     1
   151    VIM             2908     2  real       2     1
   152    SHRIFM          2913     3  real       2     7     1
   153    SHRIPM          2918     2  real       2     1
   154    SHRIGM          2923     2  real       2     1
   155    SHREM           2936     3  real      11     7     1
   156    VXW             3049     2  real       2     1
   157    VXWREGION       3056     1  real       1
   158    VIW             3061     2  real       2     1
   159    VIWREGION       3065     1  real       1
   160    VENDWREG        3087     1  real       1
   161    VENDWWLD        3099     0  real
   162    GDP             3157     1  real       1
   163    VXWCOMMOD       3247     1  real       2
   164    VXWLD           3252     0  real
   165    VIWCOMMOD       3257     1  real       2
   166    PW_PM           3262     2  real       2     1
   167    VOW             3266     2  real       2     1
   168    VWOW            3273     1  real       2
   169    VWOU            3278     1  real       2
   170    TBAL            3605     1  real       1
   171    INCOMEEV        3672     1  real       1
   172    UTILPRIVEV      3679     1  real       1
   173    UTILGOVEV       3686     1  real       1
   174    UTILSAVEEV      3693     1  real       1
   175    VPAEV           3721     2  real       2     1
   176    VPAREGEV        3729     1  real       1
   177    CONSHREV        3737     2  real       2     1
   178    EYEV            3742     2  real       2     1
   179    UELASPRIVEV     3761     1  real       1
   180    XWCONSHREV      3772     2  real       2     1
   181    PRIVEXPEV       3797     1  real       1
   182    GOVEXPEV        3808     1  real       1
   183    SAVEEV          3816     1  real       1
   184    XSHRPRIVEV      3824     1  real       1
   185    XSHRGOVEV       3830     1  real       1
   186    XSHRSAVEEV      3836     1  real       1
   187    UTILELASEV      3880     1  real       1
   188    EVSCALFACT      3925     1  real       1
   189    VTMD            3930     2  real       3     1
   190    SX_IR           4401     2  real       2     1
   191    VTICOMM         4414     2  real       3     1
   192    VIWDIRALL       4419     2  real       2     1
   193    VIWDATOT        4426     1  real       1
   194    SM_IR           4431     2  real       2     1
   195    SX_IRS          4437     3  real       2     1     1
   196    SXT_IR          4445     2  real       3     1
   197    SM_IRS          4462     3  real       2     1     1
   198    SMT_IR          4467     2  real       3     1
   199    SW_IR           4484     2  real       2     1
   200    SW_I            4501     1  real       2
   201    LANDCOVER_L     4610     3  real      25    32     1
   202    LANDCOVER       4616     3  real      25    32     1
   203    LANDCOVER_R     4622     2  real      34     1
   204    LANDCOVER_W     4627     1  real      34
   205    NVFM            4635     3  real      25    15     1
   206    RENTCOVER       4642     3  real      25    34     1
   207    RENTCOVERAV     4664     2  real      25     1
   208    HARVSTAREA_L    4675     3  real      25    18     1
   209    HARVSTAREA      4681     3  real      25    18     1
   210    HA_LCSHR        4695     2  real      25     1
   211    ETA             4752     2  real      25     1
   212    LCOVERSHR       4788     3  real      25    34     1
   213    COMLCOVERSHR    4813     3  real      25    34     1
   214    RENTCROP        4827     3  real      25    18     1
   215    RENTCROPAV      4837     2  real      25     1
   216    HAREASHR        4854     3  real      25    18     1
   217    AEZHAREASHR     4873     3  real      25    18     1
   218    AEZHREGSHR      4894     2  real      25     1
   219    PARM_C          4966     2  real      25     1
   220    ECONLAND        4970     2  real      25     1
   221    ECONLANDW       4975     1  real       1
   222    MAX_LAND        4987     2  real      25     1
   223    MAX_LAND_INT    4992     2  real      25     1
   224    ELAND           4997     2  real      25     1
   225    MAXRATIO        5004     2  real      25     1
   226    ID_PES          5026     0  real
   227    PRODUCTION      5053     3  real      25    18     1
   228    YIELD           5073     2  real      18     1
   229    YIELDGL         5096     1  real      18
   230    PRODUCTSHR      5103     3  real      25    18     1
   231    YIELDREG        5161     2  real      18     1
   232    PRODUCTSHREG    5168     3  real      25    18     1
   233    VEXPORTS        5385     1  real       1
   234    VIMPORTS        5394     1  real       1
   235    GDPEXP          5401     2  real       1    37
   236    VP_ind          5424     1  real       1
   237    VG_ind          5426     1  real       1
   238    VFOBXW_ind      5428     1  real       1
   239    VSTXW_ind       5430     1  real       1
   240    GDPEXP_FPIQ     5515     2  real       1    37
   241    GDPEXP_IPFQ     5517     2  real       1    37
   242    MREGINC         5605     1  int        1
   243    POPR            5609     1  real       1
   244    INITGDP         5630     1  real       1
   245    REALGDP         5635     1  real       1
   246    VALRGDP         5639     1  real       1
   247    BGDP            5661     1  real       1
   248    MACT            5818     1  int       45
   249    MCOM            5821     1  int        2
   250    rTO             5885     2  real       9     1
   251    rTFD            5887     3  real       2     7     1
   252    rTFM            5889     3  real       2     7     1
   253    rTF             5891     3  real       6     7     1
   254    dTO             5894     2  real       9     1
   255    dTFD            5896     3  real       2     7     1
   256    dTFM            5898     3  real       2     7     1
   257    dTF             5900     3  real       6     7     1
   258    qow_r           5972     2  real       2     1
   259    qow_cropout     5979     1  real       1
   260    qow_pdyrice     5986     1  real       1
   261    qow_wheat       5991     1  real       1
   262    qow_crsgrns     5996     1  real       1
   263    qow_fruitveg    6001     1  real       1
   264    qow_oilsds      6006     1  real       1
   265    qow_sugarcrp    6011     1  real       1
   266    qow_cotton      6016     1  real       1
   267    qow_liveout     6021     1  real       1
   268    qow_fishout     6026     1  real       1
   269    qow_forsout     6031     1  real       1
   270    qow_agforout    6036     1  real       1
   271    qow_mnfc        6041     1  real       1
   272    qow_serv        6046     1  real       1
   273    qxw_r           6053     2  real       2     1
   274    qxw_cropout     6060     1  real       1
   275    qxw_pdyrice     6067     1  real       1
   276    qxw_wheat       6072     1  real       1
   277    qxw_crsgrns     6077     1  real       1
   278    qxw_fruitveg    6082     1  real       1
   279    qxw_oilsds      6087     1  real       1
   280    qxw_sugarcrp    6092     1  real       1
   281    qxw_cotton      6097     1  real       1
   282    qxw_liveout     6102     1  real       1
   283    qxw_fishout     6107     1  real       1
   284    qxw_forsout     6112     1  real       1
   285    qxw_agforout    6117     1  real       1
   286    qxw_mnfc        6122     1  real       1
   287    qxw_serv        6127     1  real       1
   288    qmt_pdyrice     6134     1  real       1
   289    qmt_wheat       6139     1  real       1
   290    qmt_crsgrns     6144     1  real       1
   291    qmt_fruitveg    6149     1  real       1
   292    qmt_oilsds      6154     1  real       1
   293    qmt_sugarcrp    6159     1  real       1
   294    qmt_cotton      6164     1  real       1
   295    lc_cropland     6192     1  real       1
   296    lc_mngforest    6197     1  real       1
   297    lc_pasture      6202     1  real       1
   298    VFM_AEZ         6214     1  real       1
   299    VDFA_alt        6239     3  real       2     7     1
   300    VIFA_alt        6244     3  real       2     7     1
   301    EVFA_alt        6249     3  real       6     7     1
   302    VFA_alt         6255     3  real       8     7     1
   303    VOA_alt         6260     2  real       9     1
   304    VFM_alt         6269     3  real       6     7     1
   305    VDPM_alt        6278     2  real       2     1
   306    VDGM_alt        6285     2  real       2     1
   307    VDFM_alt        6292     3  real       2     7     1
   308    VIFM_alt        6299     3  real       2     7     1
   309    VDM_alt         6307     2  real       2     1
   310    VXMD_alt        6312     3  real       2     1     1
   311    VST_alt         6320     2  real       3     1
   312    VOM_alt         6327     2  real       9     1
   313    dTO_alt         6342     2  real       9     1
   314    TO_dTO_ID       6347     2  real       2     1
   315    TO_AEZ_ID       6351     2  real      25     1
   316    WGHT_AEZ_ID     6355     2  real      25     1
   317    dTFD_alt        6360     3  real       2     7     1
   318    TO_dTFD_ID      6365     3  real       2     7     1
   319    dTFM_alt        6369     3  real       2     7     1
   320    TO_dTFM_ID      6374     3  real       2     7     1
   321    AGGINCOMEEV     6421     1  real      38
   322    GDPEXP_a        6453     2  real      38    37
   323    BGDPEXP_a       6457     2  real      38    37
   324    BGDP_a          6470     1  real      38
   325    GDPEXPWLD       6538     1  real      37
   326    BGDPEXPWLD      6542     1  real      37
   327    BGDPWLD         6549     0  real




 =================
 ++ EQUATION TABLE
 =================

           Defined     Semantic                        ALL quantifiers range
  Number   at line      Error?   Equation name         over sets numbered
  --------------------------------------------------------------------------
     1         750       no      E_to_1                     9     1
     2         918       no      E_INCOME_track             1
     3        1092       no      GPRICEINDEX                1
     4        1097       no      GOVDMNDS                   2     1
     5        1102       no      GOVU                       1
     6        1119       no      GHHDPRICE                  2     1
     7        1124       no      GHHIPRICES                 2     1
     8        1134       no      GCOMPRICE                  2     1
     9        1139       no      GHHLDAGRIMP                2     1
    10        1144       no      GHHLDDOM                   2     1
    11        1149       no      TGCRATIO                   1
    12        1189       no      PHHLDINDEX                 1
    13        1194       no      PRIVATEU                   1
    14        1210       no      UTILELASPRIV               1
    15        1264       no      PRIVDMNDS                  2     1
    16        1293       no      TPDSHIFT                   2     1
    17        1298       no      PHHDPRICE                  2     1
    18        1307       no      TPMSHIFT                   2     1
    19        1312       no      PHHIPRICES                 2     1
    20        1317       no      TPCRATIO                   1
    21        1331       no      PCOMPRICE                  2     1
    22        1336       no      PHHLDDOM                   2     1
    23        1341       no      PHHLDAGRIMP                2     1
    24        1422       no      DMNDDPRICE                 2     7     1
    25        1434       no      DMNDIPRICES                2     7     1
    26        1444       no      TIURATIO                   1
    27        1457       no      ICOMPRICE                  2     7     1
    28        1462       no      INDIMP                     2     7     1
    29        1467       no      INDDOM                     2     7     1
    30        1481       no      MPFACTPRICE               11     7     1
    31        1486       no      SPFACTPRICE               10     7     1
    32        1499       no      AFEWORLD                   6     7     1
    33        1520       no      VAPRICE                    7     1
    34        1525       no      TFURATIO                   1
    35        1594       no      ENDWDEMAND                 6    16     1
    36        1618       no      LANDPRICE                 15     1
    37        1624       no      LANDDEMAND                15     1
    38        1631       no      AEZDEMAND                 25    15     1
    39        1638       no      NLANDDEMAND               26    15     1
    40        1666       no      AOWORLD                    7     1
    41        1678       no      AVAWORLD                   7     1
    42        1696       no      VADEMAND                   7     1
    43        1715       no      AFWORLD                    2     7     1
    44        1720       no      INTDEMAND                  2     7     1
    45        1736       no      OUTPUTPRICES               7     1
    46        1746       no      TOUTRATIO                  1
    47        1764       no      ZEROPROFITS                7     1
    48        1823       no      KAPSVCES                   1
    49        1833       no      KAPRENTAL                  1
    50        1839       no      CAPGOODS                   1
    51        1849       no      PRCGOODS                   1
    52        1854       no      KBEGINNING                 1
    53        1881       no      KEND                       1
    54        1901       no      RORCURRENT                 1
    55        1920       no      ROREXPECTED                1
    56        1935       no      BALDWIN                   12     1
    57        1969       no      RORGLOBAL                  1
    58        1982       no      GLOBALINV           
    59        2001       no      PRICGDS             
    60        2021       no      SAVEPRICE                  1
    61        2063       no      EXPRICES                   2     1     1
    62        2068       no      TEXPRATIO                  1
    63        2097       no      MKTPRICES                  2     1     1
    64        2106       no      DPRICEIMP                  2     1
    65        2113       no      PRICETGT                   2     1
    66        2135       no      IMPORTDEMAND               2     1     1
    67        2142       no      TIMPRATIO                  1
    68        2251       no      QTRANS_MFSD                3     2     1     1

    69        2278       no      TRANS_DEMAND               3
    70        2298       no      PTRANSPORT                 3
    71        2329       no      TRANSCOSTINDEX             2     1     1
    72        2335       no      TRANSTECHANGE              3     2     1     1

    73        2341       no      TRANSVCES                  3     1
    74        2367       no      FOBCIF                     2     1     1
    75        2431       no      FACTORINCPRICES            6     1
    76        2441       no      TINCRATIO                  1
    77        2452       no      ENDW_PRICE                10     1
    78        2473       no      NAEZEND_SUPPLY            27     7     1
    79        2506       no      LAND_PRICE                25     1
    80        2532       no      CROPLAND_PRICE            25     1
    81        2537       no      AGRLAND_SUPPLY            25     1
    82        2543       no      OTHLAND_SUPPLY            25    28     1
    83        2559       no      INDCROPLAND_SUPPLY        25    18     1
    84        2576       no      FACTORINCOME               1
    85        2585       no      DINDTAXRATIO               1
    86        2594       no      DTAXRATIO                  1
    87        2663       no      E_pes_contribution         1
    88        2666       no      E_pes_balance       
    89        2683       no      REGIONALINCOME             1
    90        2707       no      DPARAV                     1
    91        2715       no      UTILITELASTIC              1
    92        2720       no      PRIVCONSEXP                1
    93        2725       no      GOVCONSEXP                 1
    94        2730       no      SAVING                     1
    95        2743       no      PRICEINDEXREG              1
    96        2810       no      UTILITY                    1
    97        2820       no      DISTPARSUM                 1
    98        2861       no      MKTCLDOM                   2     1
    99        2892       no      MKTCLTRD_MARG              3     1
   100        2900       no      MKTCLTRD_NMRG              4     1
   101        2928       no      MKTCLIMP                   2     1
   102        2941       no      MKTCLENDWM                11     1
   103        2950       no      MKTCLENDWS                10     7     1
   104        2966       no      WALRAS_S            
   105        2977       no      WALRAS_D            
   106        2993       no      WALRAS              
   107        3078       no      REALRETURN                 6     1
   108        3094       no      PRIMFACTPR                 1
   109        3105       no      PRIMFACTPRWLD       
   110        3120       no      REGSUPRICE                 1
   111        3134       no      REGDEMPRICE                1
   112        3146       no      TOTeq                      1
   113        3174       no      VGDP_r                     1
   114        3188       no      PGDP_r                     1
   115        3201       no      QGDP_r                     1
   116        3217       no      COMPVALADEQ                7     1
   117        3289       no      VREGEX_ir_MARG             3     1
   118        3295       no      VREGEX_ir_NMRG             4     1
   119        3301       no      VREGEX_r                   1
   120        3308       no      VWLDEX_i                   2
   121        3315       no      VWLDEX              
   122        3319       no      VREGIM_is                  2     1
   123        3325       no      VREGIM_s                   1
   124        3332       no      VWLDIM_i                   2
   125        3339       no      VWLDOUT                    2
   126        3346       no      VWLDOUTUSE                 2
   127        3360       no      PREGEX_ir_MARG             3     1
   128        3366       no      PREGEX_ir_NMRG             4     1
   129        3373       no      PREGEX_r                   1
   130        3380       no      PWLDEX_i                   2
   131        3387       no      PWLDEX              
   132        3393       no      PREGIM_is                  2     1
   133        3400       no      PREGIM_s                   1
   134        3407       no      PWLDIM_i                   2
   135        3414       no      PWLDOUT                    2
   136        3421       no      PWLDUSE                    2
   137        3437       no      QREGEX_ir_MARG             3     1
   138        3442       no      QREGEX_ir_NMRG             4     1
   139        3452       no      QREGEX_r                   1
   140        3462       no      QWLDEX_i                   2
   141        3472       no      QWLDEX              
   142        3481       no      QREGIM_is                  2     1
   143        3491       no      QREGIM_s                   1
   144        3501       no      QWLDIM_i                   2
   145        3511       no      QWLDOUT                    2
   146        3519       no      QCROPOUT                   1
   147        3526       no      QCROPWOUT           
   148        3533       no      QLIVEOUT                   1
   149        3542       no      QLIVEWOUT           
   150        3563       no      QWLDOUTU                   2
   151        3583       no      TRADEBAL_i                 2     1
   152        3591       no      TRADEBALANCE               1
   153        3612       no      DTBALRATIO                 1
   154        3706       no      GOVUSHD                    1
   155        3753       no      PRIVDMNDSEV                2     1
   156        3767       no      PRIVATEUEV                 1
   157        3778       no      UTILELASPRIVEV             1
   158        3843       no      DPARAVEV                   1
   159        3851       no      UTILITELASTICEV            1
   160        3856       no      PCONSEXPEV                 1
   161        3861       no      GOVCONSEXPEV               1
   162        3866       no      SAVINGEV                   1
   163        3871       no      SAVEUEV                    1
   164        3888       no      INCOME_EQUIV               1
   165        3906       no      EVREG                      1
   166        3913       no      EVWLD               
   167        3937       no      EV_DECOMPOSITION           1
   168        3982       no      WORLDEV             
   169        3988       no      CNT_WEV_dpar               1
   170        3998       no      CONT_EV_pop                1
   171        4004       no      CONT_EV_qor                1
   172        4013       no      CONT_EV_qoir               9     1
   173        4020       no      CONT_EV_qfer               1
   174        4029       no      CONT_EV_qfeir              6     1
   175        4038       no      CONT_EV_qfeijr             6     7     1
   176        4046       no      CONT_EV_qfmr               1
   177        4055       no      CONT_EV_qfmir              2     1
   178        4064       no      CONT_EV_qfmijr             2     7     1
   179        4072       no      CONT_EV_qfdr               1
   180        4081       no      CONT_EV_qfdir              2     1
   181        4090       no      CONT_EV_qfdijr             2     7     1
   182        4098       no      CONT_EV_qpmr               1
   183        4107       no      CONT_EV_qpmir              2     1
   184        4114       no      CONT_EV_qpdr               1
   185        4123       no      CONT_EV_qpdir              2     1
   186        4130       no      CONT_EV_qgmr               1
   187        4139       no      CONT_EV_qgmir              2     1
   188        4146       no      CONT_EV_qgdr               1
   189        4155       no      CONT_EV_qgdir              2     1
   190        4162       no      CONT_EV_qxsr               1
   191        4171       no      CONT_EV_qxsirs             2     1     1
   192        4179       no      CONT_EV_qimr               1
   193        4188       no      CONT_EV_qimisr             2     1     1
   194        4195       no      CONT_EV_alleffr            1
   195        4217       no      CONT_EV_alleffir_E         6     1
   196        4223       no      CONT_EV_alleffir_T         2     1
   197        4240       no      CONT_EV_totr               1
   198        4251       no      CNT_EV_cgdsr               1
   199        4259       no      CONT_EV_endwr              1
   200        4268       no      CONT_EV_endwir             6     1
   201        4274       no      CONT_EV_techr              1
   202        4290       no      CONT_EV_tech_aor           1
   203        4298       no      CONT_EV_tech_aoir          7     1
   204        4305       no      CONT_EV_tech_afer          1
   205        4314       no      CONT_EV_tech_afeijr        6     7     1
   206        4321       no      CONT_EV_tech_avar          1
   207        4329       no      CONT_EV_tech_avajr         7     1
   208        4336       no      CONT_EV_tech_afr           1
   209        4346       no      CONT_EV_tech_afijr         2     7     1
   210        4354       no      CONT_EV_tech_atrr          1
   211        4364       no      CONT_EV_tech_afmfdsd       3     2     1     1

   212        4371       no      CONT_EV_tech_amsr          1
   213        4380       no      CONT_EV_tech_amsirs        2     1     1
   214        4387       no      CONT_EV_kbr                1
   215        4452       no      EXPPRICE_MARG              3     1
   216        4457       no      EXPPRICE_NMRG              4     1
   217        4474       no      IMPPRICE1_MARG             3     1
   218        4479       no      IMPPRICE1_NMRG             4     1
   219        4496       no      WRLDPRICEi                 2
   220        4516       no      WRLDPRICE           
   221        4522       no      c1_irEQ                    2     1
   222        4529       no      c2_irEQ                    2     1
   223        4536       no      c3_irEQ                    2     1
   224        4543       no      c1_rEQ                     1
   225        4550       no      c2_rEQ                     1
   226        4557       no      c3_rEQ                     1
   227        4564       no      TOT2eq                     1
   228        4624       no      E_LANDCOVER_R             34     1
   229        4629       no      E_LANDCOVER_W             34
   230        4656       no      E_RENTCOVER1              25    35     1
   231        4659       no      E_RENTCOVER2              25    36     1
   232        4671       no      E_RENTCOVERAV             25     1
   233        4773       no      E_HARVSTAEZ               25     1
   234        4784       no      E_NONCROPCOV              25    35     1
   235        4796       no      FIXCOVER                  25     1
   236        4802       no      E_AREAADJUST              25     1
   237        4821       no      COMCOVER                  34     1
   238        4833       no      E_RENTCROP1               25    18     1
   239        4844       no      E_RENTCROPAV              25     1
   240        4848       no      E_HARVSTAREA              25    18     1
   241        4862       no      FIXAREA                   25     1
   242        4868       no      CROPCOVER                 25    36     1
   243        4881       no      COMHARVEST                18     1
   244        4903       no      HARVCOVERSLACK             1
   245        4915       no      E_XLCOVERAEZ              25     1
   246        4925       no      E_LUC                     25    32     1
   247        4933       no      E_cHARVSTAREA             25    18     1
   248        4977       no      E_ECONLANDW                1
   249        5019       no      E_LAND_SUPPLY             25     1
   250        5030       no      E_PES_COST                 1
   251        5039       no      E_LAND_ENDW               25     1
   252        5062       no      E_PRODUCTION              25    18     1
   253        5086       no      E_YIELD                   18     1
   254        5099       no      E_YIELDGL                 18
   255        5114       no      E_GLOBALOUTPUT            18
   256        5122       no      E_CNT_YIELD               18
   257        5131       no      E_CNT_YIELDI              18
   258        5140       no      E_CNT_YIELDE              18
   259        5149       no      E_CNT_AREA                18
   260        5182       no      E_REGOUTPUT               18     1
   261        5190       no      E_CNT_YIELDREG            18     1
   262        5199       no      E_CNT_YIELDIREG           18     1
   263        5208       no      E_CNT_YIELDEREG           18     1
   264        5217       no      E_CNT_AREAREG             18     1
   265        5441       no      E_qp                       1
   266        5446       no      E_qg                       1
   267        5451       no      E_qfobxw                   1
   268        5456       no      E_qstxw                    1
   269        5472       no      E_pfobxw                   1
   270        5477       no      E_pstxw                    1
   271        5482       no      E_pgdpexp_ind              1    37
   272        5489       no      E_qgdpexp                  1    37
   273        5496       no      E_vgdpexp                  1    37
   274        5528       no      E_pgdplaspeyres            1
   275        5533       no      E_qgdplaspeyres            1
   276        5538       no      E_pgdppaasche              1
   277        5543       no      E_qgdppaasche              1
   278        5548       no      E_pgdpfisher               1
   279        5552       no      E_qgdpfisher               1
   280        5556       no      E_vgdpfisher               1
   281        5563       no      PHOUSEHOLD                 1
   282        5572       no      HOUSERETURN                6     1
   283        5579       no      E_HOUSERETURN_LAND         1
   284        5585       no      E_REALRETURN_LAND          1
   285        5618       no      E_delQGDP                  1
   286        5625       no      E_qgdpreginc              38
   287        5667       no      E_contGDPEXP               1    37
   288        5680       no      E_qgdpexp2                 1
   289        5696       no      E_contGDPINC               1    40
   290        5723       no      E_contGDPINC2              1    41
   291        5751       no      E_qgdpinc                  1
   292        5758       no      E_qgdpdiff                 1
   293        5773       no      E_contGDPGVA               1    47
   294        5800       no      E_qgdpind                  1
   295        5808       no      E_qgdprep                  1    48
   296        5829       no      E_contGDPBACT              1    50
   297        5838       no      E_qoreg                   49     1
   298        5845       no      E_qobactwld               49
   299        5878       no      E_tf                       6     7     1
   300        5976       no      E_qow_r                    2     1
   301        5981       no      E_qow_crops                1
   302        5988       no      E_qow_paddyrice            1
   303        5993       no      E_qow_wheat                1
   304        5998       no      E_qow_crsgrns              1
   305        6003       no      E_qow_fruitveg             1
   306        6008       no      E_qow_oilsds               1
   307        6013       no      E_qow_sugarcrps            1
   308        6018       no      E_qow_cotton               1
   309        6023       no      E_qow_liveout              1
   310        6028       no      E_qow_fishout              1
   311        6033       no      E_qow_forsout              1
   312        6038       no      E_qow_agforout             1
   313        6043       no      E_qow_mnfc                 1
   314        6048       no      E_qow_serv                 1
   315        6057       no      E_qxw_r                    2     1
   316        6062       no      E_qxw_crops                1
   317        6069       no      E_qxw_paddyrice            1
   318        6074       no      E_qxw_wheat                1
   319        6079       no      E_qxw_crsgrns              1
   320        6084       no      E_qxw_fruitveg             1
   321        6089       no      E_qxw_oilsds               1
   322        6094       no      E_qxw_sugarcrps            1
   323        6099       no      E_qxw_cotton               1
   324        6104       no      E_qxw_liveout              1
   325        6109       no      E_qxw_fishout              1
   326        6114       no      E_qxw_forsout              1
   327        6119       no      E_qxw_agforout             1
   328        6124       no      E_qxw_mnfc                 1
   329        6129       no      E_qxw_serv                 1
   330        6136       no      E_qmt_paddyrice            1
   331        6141       no      E_qmt_wheat                1
   332        6146       no      E_qmt_crsgrns              1
   333        6151       no      E_qmt_fruitveg             1
   334        6156       no      E_qmt_oilsds               1
   335        6161       no      E_qmt_sugarcrps            1
   336        6166       no      E_qmt_cotton               1
   337        6173       no      E_REALRETURN_LND           1
   338        6179       no      E_REALRETURN_SKLAB         1
   339        6184       no      E_REALRETURN_USKLAB        1
   340        6189       no      E_REALRETURN_CAP           1
   341        6194       no      E_LC_CROPLAND              1
   342        6199       no      E_LC_MNGD_FOREST           1
   343        6204       no      E_LC_PASTURE               1
   344        6209       no      E_LC_NTL_LAND              1
   345        6219       no      E_pmallland                1
   346        6242       no      E_VDFA_alt                 2     7     1
   347        6247       no      E_VIFA_alt                 2     7     1
   348        6252       no      E_EVFA_alt                 6     7     1
   349        6257       no      E_VFA_alt_endw             6     7     1
   350        6258       no      E_VFA_alt_trad             2     7     1
   351        6263       no      E_VOA_alt_endw             6     1
   352        6265       no      E_VOA_alt_prod             7     1
   353        6273       no      E_VFM_alt_endwm           11     7     1
   354        6275       no      E_VFM_alt_endws           10     7     1
   355        6282       no      E_VDPM_alt                 2     1
   356        6289       no      E_VDGM_alt                 2     1
   357        6296       no      E_VDFM_alt                 2     7     1
   358        6303       no      E_VIFM_alt                 2     7     1
   359        6309       no      E_VDM_alt                  2     1
   360        6317       no      E_VXMD_alt                 2     1     1
   361        6322       no      E_VST_alt                  3     1
   362        6330       no      E_VOM_alt_endw             6     1
   363        6333       no      E_VOM_alt_marg             3     1
   364        6336       no      E_VOM_alt_nmrg             4     1
   365        6339       no      E_VOM_alt_cgds             5     1
   366        6344       no      E_dTO_alt                  9     1
   367        6362       no      E_dTFD_alt                 2     7     1
   368        6371       no      E_dTFM_alt                 2     7     1
   369        6383       no      E_c_dTO_AEZ               25     1
   370        6388       no      E_c_dTO_AEZR               1
   371        6391       no      E_dTO_revnue               1
   372        6400       no      E_CNTpesgin                1
   373        6407       no      E_CNTpesgrgout             1
   374        6414       no      E_CNTpesgr                 1
   375        6428       no      E_ureginc                 38
   376        6441       no      E_pgdpexreginc            38    37
   377        6448       no      E_qgdpexreginc            38    37
   378        6465       no      E_pgdpreginc              38
   379        6478       no      E_contGDPEXP_a            38    37
   380        6486       no      E_contGDPINC_a            38    41
   381        6516       no      E_pgdpwld           
   382        6521       no      E_qgdpwld           
   383        6527       no      E_qgdpewld                37
   384        6533       no      E_pgdpewld                37
   385        6557       no      E_contGDPEXP_w            37
   386        6564       no      E_contGDPINC_w            41
   387        6595       no      E_qoar                    49    38
   388        6603       no      E_poreg                   49    38
   389        6611       no      E_pobactwld               49
   390        6618       no      E_qear                     6    38
   391        6625       no      E_pear                     6    38
   392        6632       no      E_qewld                    6
   393        6639       no      E_pewld                    6
   394        6646       no      E_qfear                    6    49    38
   395        6654       no      E_pfear                    6    49    38
   396        6662       no      E_qfeawld                  6    49
   397        6670       no      E_pfeawld                  6    49
   398        6678       no      E_qxwacomreg              49    38
   399        6686       no      E_qxsareg                 49    38    38
   400        6694       no      E_pfobareg                49    38    38




 ================
 ++ FORMULA TABLE
 ================

           Defined   Semantic      LHS                RHS
  Number   at line    Error?    coefficient       coefficient numbers
  -------------------------------------------------------------------
     1         206     no      SIZE_TRAD   
     2         210     no      SIZE_ENDW   
     3         214     no      SIZE_DEMD   
     4         216     no      Assertion          4     2     3
     5         221     no      SIZE_CGDS   
     6         225     no      SIZE_PROD   
     7         227     no      Assertion          6     2     5
     8         241     no      Fm for Set         7
     9         290     no      UNITVEC0    
    10         293     no      ISLAND             8     9
    11         296     no      Fm for Set        10
    12         299     no      G2LAND_COMM        8
    13         317     no      UNITVEC     
    14         320     no      ISCROP             8    12
    15         323     no      Fm for Set        13
    16         326     no      G2CROP_COMM        8
    17         339     no      ISFOR              8    12
    18         342     no      Fm for Set        15
    19         345     no      G2FOREST_COM       8
    20         361     no      ISGRAZE            8    12
    21         364     no      Fm for Set        17
    22         367     no      G2GRAZE_COMM       8
    23         828     no      VFA               29
    24         830     no      VFA               30    31
    25         835     no      VOA               28
    26         837     no      VOA               41
    27         842     no      VDM               25    21    34
    28         847     no      VOM               32
    29         849     no      VOM               43    39    40
    30         851     no      VOM               43    39
    31         853     no      VOM               42
    32         891     no      VGA               20    22
    33         895     no      GOVEXP            45
    34         901     no      VPA               24    26
    35         905     no      PRIVEXP           47
    36         911     no      INCOME            48    46    19
    37         917     no      INCOME_track      49
    38         930     no      DGTAX             20    21
    39         934     no      IGTAX             22    23
    40         938     no      TGC               51    52
    41         943     no      DPTAX             24    25
    42         947     no      IPTAX             26    27
    43         951     no      TPC               54    55
    44         956     no      DFTAX             30    34
    45         960     no      IFTAX             31    33
    46         964     no      TIU               57    58
    47         969     no      ETAX              41    32
    48         973     no      TFU               60
    49         978     no      PTAX              44    42
    50         982     no      TOUT              62
    51         987     no      XTAXD             38    39
    52         991     no      TEX               64
    53         996     no      MTAX              36    37
    54        1000     no      TIM               66
    55        1019     no      REGINV            42
    56        1023     no      NETINV            42    35
    57        1027     no      GLOBINV           70
    58        1033     no      CONSHR            47
    59        1043     no      UELASPRIV         72    73
    60        1131     no      GMSHR             22    45
    61        1207     no      XWCONSHR          72    73    74
    62        1233     no      ALPHA             77
    63        1238     no      APE               78    72
    64        1241     no      APE               78    72
    65        1249     no      EY                72    73    78
    66        1259     no      EP          
    67        1261     no      EP                79    80    72
    68        1328     no      PMSHR             26    47
    69        1455     no      FMSHR             31    41
    70        1506     no      VVA               41
    71        1510     no      SVADEFAULT        41    84
    72        1516     no      SVA               84    41
    73        1518     no      SVA               84    85
    74        1548     no      TOTALC            41
    75        1553     no      LANDCOST          41
    76        1559     no      THETAi            88    87
    77        1583     no      ESUBVA            89    90    93    91    92

    78        1603     no      SAEZLAND          41
    79        1691     no      ESUBT             90    97    94
    80        1761     no      STC               41
    81        1878     no      INVKERATIO        69   100    70
    82        1894     no      GRNETRATIO        42    35
    83        2104     no      MSHRS             36
    84        2215     no      VTFSD            107
    85        2224     no      VTMUSE           107
    86        2229     no      VTMPROV           40
    87        2237     no      VTRPROV           40
    88        2242     no      VT                40
    89        2272     no      VTMUSESHR        108   112
    90        2274     no      VTMUSESHR        109   107
    91        2293     no      VTSUPPSHR        111   112
    92        2295     no      VTSUPPSHR        110    40
    93        2315     no      VTUSE            107
    94        2322     no      VTFSD_MSH        108   107
    95        2325     no      VTFSD_MSH        108   109   115
    96        2354     no      VIWSCOST          38   108
    97        2359     no      FOBSHR            38   117
    98        2364     no      TRNSHR           108   117
    99        2403     no      XSHRPRIV          48    49
   100        2408     no      XSHRGOV           46    49
   101        2413     no      XSHRSAVE          19    49
   102        2438     no      TINC              62
   103        2450     no      REVSHR            32
   104        2494     no      SIZE_LAND   
   105        2501     no      REVSHR1           44   127
   106        2503     no      REVSHR1           44    32
   107        2513     no      CROPRENTS         32
   108        2518     no      SIZE_CROP   
   109        2527     no      REVSHR2          129   130
   110        2529     no      REVSHR2          129    32
   111        2572     no      FY                44    35
   112        2652     no      Fm for Set       134
   113        2654     no      PESHR             49
   114        2671     no      INDTAX            56    53    59    61    63
                                                 65    67
   115        2765     no      UTILELAS          74   120   121   122   137

   116        2771     no      DPARPRIV          74   120   138
   117        2776     no      DPARGOV          121   138
   118        2781     no      DPARSAVE         122   138
   119        2786     no      UTILPRIV    
   120        2793     no      UTILGOV     
   121        2800     no      UTILSAVE    
   122        2846     no      SHRDFM            34    43
   123        2851     no      SHRDPM            25    43
   124        2856     no      SHRDGM            21    43
   125        2871     no      SHRDM             43    44
   126        2876     no      SHRST             40    44
   127        2881     no      SHRXMD            39    44
   128        2910     no      VIM               33    27    23
   129        2915     no      SHRIFM            33   151
   130        2920     no      SHRIPM            27   151
   131        2925     no      SHRIGM            23   151
   132        2938     no      SHREM             32    44
   133        3051     no      VXW               38    40
   134        3053     no      VXW               38
   135        3058     no      VXWREGION        156
   136        3063     no      VIW               37
   137        3067     no      VIWREGION        158
   138        3089     no      VENDWREG          44
   139        3101     no      VENDWWLD         160
   140        3159     no      GDP               47    45    42    38    40
                                                 37
   141        3249     no      VXWCOMMOD        156
   142        3254     no      VXWLD            157
   143        3259     no      VIWCOMMOD        158
   144        3264     no      PW_PM             38    39
   145        3268     no      VOW               43   166    38    40
   146        3270     no      VOW               43   166    38
   147        3275     no      VWOW             167
   148        3280     no      VWOU              47    45    41
   149        3607     no      TBAL             157   159
   150        3674     no      INCOMEEV          49
   151        3681     no      UTILPRIVEV       142
   152        3688     no      UTILGOVEV        143
   153        3695     no      UTILSAVEEV       144
   154        3724     no      VPAEV             47
   155        3731     no      VPAREGEV         175
   156        3740     no      CONSHREV         175   176
   157        3745     no      EYEV             177    73    78
   158        3764     no      UELASPRIVEV      177    73
   159        3775     no      XWCONSHREV       177    73   179
   160        3800     no      PRIVEXPEV         48
   161        3811     no      GOVEXPEV          46
   162        3819     no      SAVEEV            19
   163        3827     no      XSHRPRIVEV       181   171
   164        3833     no      XSHRGOVEV        182   171
   165        3838     no      XSHRSAVEEV       183   171
   166        3883     no      UTILELASEV       138
   167        3927     no      EVSCALFACT       187   138   171    49
   168        3932     no      VTMD             107
   169        4403     no      SX_IR             38    40
   170        4408     no      SX_IR             38    40
   171        4416     no      VTICOMM          107
   172        4421     no      VIWDIRALL         38   191
   173        4423     no      VIWDIRALL         38
   174        4428     no      VIWDATOT         192
   175        4433     no      SM_IR            192   193
   176        4439     no      SX_IRS            38    40
   177        4441     no      SX_IRS            38
   178        4447     no      SXT_IR            40    38
   179        4464     no      SM_IRS            38   192
   180        4469     no      SMT_IR           191   192
   181        4486     no      SW_IR             38    40
   182        4490     no      SW_IR             38
   183        4503     no      SW_I              38    40
   184        4508     no      SW_I              38    40
   185        4619     no      LANDCOVER        201
   186        4624     no      LANDCOVER_R      201
   187        4629     no      LANDCOVER_W      203
   188        4638     no      NVFM              32
   189        4645     no      RENTCOVER        205   201
   190        4648     no      RENTCOVER        205   201
   191        4667     no      RENTCOVERAV      205   201
   192        4684     no      HARVSTAREA       208
   193        4698     no      HA_LCSHR         208   201
   194        4791     no      LCOVERSHR        201
   195        4816     no      COMLCOVERSHR     201
   196        4830     no      RENTCROP         205   208
   197        4840     no      RENTCROPAV       205   208
   198        4857     no      HAREASHR         208
   199        4876     no      AEZHAREASHR      208
   200        4897     no      AEZHREGSHR       208
   201        4972     no      ECONLAND         201
   202        4977     no      ECONLANDW        220
   203        4994     no      MAX_LAND_INT     222
   204        4999     no      ELAND            219   222   220
   205        5006     no      MAXRATIO         222   220
   206        5079     no      YIELD            227   208
   207        5099     no      YIELDGL          227   208
   208        5106     no      PRODUCTSHR       227
   209        5164     no      YIELDREG         227   208
   210        5171     no      PRODUCTSHREG     227
   211        5388     no      VEXPORTS          38
   212        5397     no      VIMPORTS          37
   213        5403     no      GDPEXP            48
   214        5405     no      GDPEXP            69
   215        5406     no      GDPEXP            46
   216        5407     no      GDPEXP           233
   217        5408     no      GDPEXP            40
   218        5409     no      GDPEXP           234
   219        5432     no      VP_ind            47
   220        5434     no      VG_ind            45
   221        5436     no      VFOBXW_ind       156
   222        5438     no      VSTXW_ind         40
   223        5519     no      GDPEXP_FPIQ      235
   224        5521     no      GDPEXP_IPFQ      235
   225        5632     no      INITGDP          162
   226        5637     no      REALGDP          244  -312
   227        5641     no      VALRGDP          244  -312
   228        5663     no      BGDP             162
   229        5903     no      rTO               42    44
   230        5905     no      rTFD              30    34
   231        5907     no      rTFM              31    33
   232        5909     no      rTF               41    32
   233        5912     no      dTO               42    44
   234        5914     no      dTF               41    32
   235        5916     no      dTFD              30    34
   236        5918     no      dTFM              31    33
   237        5974     no      qow_r            167
   238        5981     no      qow_cropout      258
   239        5988     no      qow_pdyrice      258
   240        5993     no      qow_wheat        258
   241        5998     no      qow_crsgrns      258
   242        6003     no      qow_fruitveg     258
   243        6008     no      qow_oilsds       258
   244        6013     no      qow_sugarcrp     258
   245        6018     no      qow_cotton       258
   246        6023     no      qow_liveout      258
   247        6028     no      qow_fishout      258
   248        6033     no      qow_forsout      258
   249        6038     no      qow_agforout     259   267   268
   250        6043     no      qow_mnfc         258
   251        6048     no      qow_serv         258
   252        6055     no      qxw_r            156
   253        6062     no      qxw_cropout      273
   254        6069     no      qxw_pdyrice      273
   255        6074     no      qxw_wheat        273
   256        6079     no      qxw_crsgrns      273
   257        6084     no      qxw_fruitveg     273
   258        6089     no      qxw_oilsds       273
   259        6094     no      qxw_sugarcrp     273
   260        6099     no      qxw_cotton       273
   261        6104     no      qxw_liveout      273
   262        6109     no      qxw_fishout      273
   263        6114     no      qxw_forsout      273
   264        6119     no      qxw_agforout     274   282   283
   265        6124     no      qxw_mnfc         273
   266        6129     no      qxw_serv         273
   267        6136     no      qmt_pdyrice      227
   268        6141     no      qmt_wheat        227
   269        6146     no      qmt_crsgrns      227
   270        6151     no      qmt_fruitveg     227
   271        6156     no      qmt_oilsds       227
   272        6161     no      qmt_sugarcrp     227
   273        6166     no      qmt_cotton       227
   274        6194     no      lc_cropland      203
   275        6199     no      lc_mngforest     203
   276        6204     no      lc_pasture       203
   277        6216     no      VFM_AEZ           32
   278        6241     no      VDFA_alt          30
   279        6246     no      VIFA_alt          31
   280        6251     no      EVFA_alt          29
   281        6257     no      VFA_alt          301
   282        6258     no      VFA_alt          299   300
   283        6262     no      VOA_alt           28
   284        6265     no      VOA_alt          302
   285        6271     no      VFM_alt           32
   286        6280     no      VDPM_alt          25
   287        6287     no      VDGM_alt          21
   288        6294     no      VDFM_alt          34
   289        6301     no      VIFM_alt          33
   290        6309     no      VDM_alt          305   306   307
   291        6315     no      VXMD_alt          39
   292        6324     no      VST_alt           40
   293        6330     no      VOM_alt          304
   294        6333     no      VOM_alt          309   310   311
   295        6336     no      VOM_alt          309   310
   296        6339     no      VOM_alt          303
   297        6344     no      dTO_alt          303   312
   298        6357     no      WGHT_AEZ_ID      315
   299        6362     no      dTFD_alt         299   307
   300        6371     no      dTFM_alt         300   308
   301        6423     no      AGGINCOMEEV      242   171
   302        6455     no      GDPEXP_a         242   235
   303        6459     no      BGDPEXP_a        322
   304        6472     no      BGDP_a           242   247
   305        6540     no      GDPEXPWLD        235
   306        6544     no      BGDPEXPWLD       325
   307        6551     no      BGDPWLD          247




 ===============
 ++ UPDATE TABLE
 ===============

           Defined   Semantic    Updated         RHS coeff/var nos
  Number   at line    Error?    coefficient       (vars are negative)
  -------------------------------------------------------------------
     1         166     no      VERNUM             1
     2         455     no      SAVE              19    -1    -2
     3         472     no      VDGA              20    -3    -4
     4         481     no      VDGM              21    -5    -4
     5         492     no      VIGA              22    -6    -7
     6         501     no      VIGM              23    -8    -7
     7         518     no      VDPA              24    -9   -10
     8         525     no      VDPM              25    -5   -10
     9         536     no      VIPA              26   -11   -12
    10         543     no      VIPM              27    -8   -12
    11         560     no      EVOA              28   -13   -14
    12         571     no      EVFA              29   -15   -16
    13         582     no      VDFA              30   -17   -18
    14         593     no      VIFA              31   -19   -20
    15         602     no      VFM               32    -5   -16
    16         604     no      VFM               32   -21   -16
    17         611     no      VIFM              33    -8   -20
    18         618     no      VDFM              34    -5   -18
    19         635     no      VDEP              35   -22   -23
    20         656     no      VIMS              36   -24   -25
    21         665     no      VIWS              37   -26   -25
    22         674     no      VXWD              38   -27   -25
    23         682     no      VXMD              39    -5   -25
    24         692     no      VST               40    -5   -28
    25        1865     no      VKB              100   -23   -22
    26        2208     no      VTMFSD           107  -122  -113
    27        2760     no      DPARSUM          137  -140
    28        2788     no      UTILPRIV         142   -39
    29        2795     no      UTILGOV          143   -35
    30        2802     no      UTILSAVE         144    -2   -30
    31        3676     no      INCOMEEV         171  -196
    32        3683     no      UTILPRIVEV       172  -194
    33        3690     no      UTILGOVEV        173  -193
    34        3697     no      UTILSAVEEV       174  -195   -30
    35        3726     no      VPAEV            175  -199
    36        3802     no      PRIVEXPEV        181  -197
    37        3813     no      GOVEXPEV         182  -198
    38        3821     no      SAVEEV           183  -200
    39        3885     no      UTILELASEV       187  -191
    40        5083     no      YIELD            228  -286
    41        5523     no      GDPEXP_FPIQ      240  -304
    42        5525     no      GDPEXP_IPFQ      241  -305
    43        5613     no      POPR             243   -30
    44        5665     no      BGDP             247  -158
    45        6461     no      BGDPEXP_a        323  -404
    46        6474     no      BGDP_a           324  -406
    47        6546     no      BGDPEXPWLD       326  -412
    48        6553     no      BGDPWLD          327  -409
    49           0     no      INCOME_track      50   -54
    50           0     no      LANDCOVER_L      201  -263
    51           0     no      LANDCOVER_R      203  -264
    52           0     no      LANDCOVER_W      204  -265
    53           0     no      RENTCOVER        206  -266
    54           0     no      RENTCOVERAV      207  -267
    55           0     no      HARVSTAREA_L     208  -268
    56           0     no      RENTCROP         214  -274
    57           0     no      RENTCROPAV       215  -275
    58           0     no      ECONLAND         220  -280
    59           0     no      ECONLANDW        221  -281
    60           0     no      MAX_LAND         222  -284
    61           0     no      PRODUCTION       227  -285
    62           0     no      YIELDGL          229  -287
    63           0     no      qow_r            258  -334
    64           0     no      qow_cropout      259  -335
    65           0     no      qow_pdyrice      260  -336
    66           0     no      qow_wheat        261  -337
    67           0     no      qow_crsgrns      262  -338
    68           0     no      qow_fruitveg     263  -339
    69           0     no      qow_oilsds       264  -340
    70           0     no      qow_sugarcrp     265  -341
    71           0     no      qow_cotton       266  -342
    72           0     no      qow_liveout      267  -343
    73           0     no      qow_fishout      268  -344
    74           0     no      qow_forsout      269  -345
    75           0     no      qow_agforout     270  -346
    76           0     no      qow_mnfc         271  -347
    77           0     no      qow_serv         272  -348
    78           0     no      qxw_r            273  -349
    79           0     no      qxw_cropout      274  -350
    80           0     no      qxw_pdyrice      275  -351
    81           0     no      qxw_wheat        276  -352
    82           0     no      qxw_crsgrns      277  -353
    83           0     no      qxw_fruitveg     278  -354
    84           0     no      qxw_oilsds       279  -355
    85           0     no      qxw_sugarcrp     280  -356
    86           0     no      qxw_cotton       281  -357
    87           0     no      qxw_liveout      282  -358
    88           0     no      qxw_fishout      283  -359
    89           0     no      qxw_forsout      284  -360
    90           0     no      qxw_agforout     285  -361
    91           0     no      qxw_mnfc         286  -362
    92           0     no      qxw_serv         287  -363
    93           0     no      qmt_pdyrice      288  -364
    94           0     no      qmt_wheat        289  -365
    95           0     no      qmt_crsgrns      290  -366
    96           0     no      qmt_fruitveg     291  -367
    97           0     no      qmt_oilsds       292  -368
    98           0     no      qmt_sugarcrp     293  -369
    99           0     no      qmt_cotton       294  -370
   100           0     no      lc_cropland      295  -375
   101           0     no      lc_mngforest     296  -376
   102           0     no      lc_pasture       297  -377
   103           0     no      VDFA_alt         299  -380
   104           0     no      VIFA_alt         300  -381
   105           0     no      EVFA_alt         301  -382
   106           0     no      VFA_alt          302  -383
   107           0     no      VOA_alt          303  -384
   108           0     no      VFM_alt          304  -385
   109           0     no      VDPM_alt         305  -386
   110           0     no      VDGM_alt         306  -387
   111           0     no      VDFM_alt         307  -388
   112           0     no      VIFM_alt         308  -389
   113           0     no      VDM_alt          309  -390
   114           0     no      VXMD_alt         310  -391
   115           0     no      VST_alt          311  -392
   116           0     no      VOM_alt          312  -393
   117           0     no      dTO_alt          313  -394
   118           0     no      dTFD_alt         317  -395
   119           0     no      dTFM_alt         319  -396




 =============
 ++ READ TABLE
 =============

           Defined    Semantic  Coefficient   File number
  Number   at line     Error?    read into     read from   Header
  ---------------------------------------------------------------
     1        164       no      VERNUM              2       DVER
     2        238       no      SLUG                3       SLUG
     3        280       no      G2TRAD_COMM         1       MCOM
     4        457       no      SAVE                2       SAVE
     5        474       no      VDGA                2       VDGA
     6        483       no      VDGM                2       VDGM
     7        494       no      VIGA                2       VIGA
     8        503       no      VIGM                2       VIGM
     9        520       no      VDPA                2       VDPA
    10        527       no      VDPM                2       VDPM
    11        538       no      VIPA                2       VIPA
    12        545       no      VIPM                2       VIPM
    13        562       no      EVOA                2       EVOA
    14        573       no      EVFA                2       EVFA
    15        584       no      VDFA                2       VDFA
    16        595       no      VIFA                2       VIFA
    17        606       no      VFM                 2       VFM 
    18        613       no      VIFM                2       VIFM
    19        620       no      VDFM                2       VDFM
    20        637       no      VDEP                2       VDEP
    21        658       no      VIMS                2       VIMS
    22        667       no      VIWS                2       VIWS
    23        676       no      VXWD                2       VXWD
    24        684       no      VXMD                2       VXMD
    25        694       no      VST                 2       VST 
    26       1013       no      ESUBD               3       ESBD
    27       1038       no      INCPAR              3       INCP
    28       1225       no      SUBPAR              3       SUBP
    29       1564       no      YDONOFF             3       YD01
    30       1568       no      YDREGSCALE          3       YDRS
    31       1572       no      YDE_Target          3       YDEL
    32       1577       no      ESUBVA1             3       ESBV
    33       1615       no      ESUBAEZ             3       EAEZ
    34       1686       no      ESUBT1              3       ESBT
    35       1867       no      VKB                 2       VKB 
    36       1909       no      RORFLEX             3       RFLX
    37       1949       no      RORDELTA            3       RDLT
    38       2132       no      ESUBM               3       ESBM
    39       2210       no      VTMFSD              2       VTWR
    40       2460       no      ETRAE               3       ETRE
    41       2489       no      ETRAEL1             3       ETL1
    42       2556       no      ETRAEL2             3       ETL2
    43       2625       no      PESHR               2       SPES
    44       2629       no      PESha               4       PESH
    45       2758       no      DPARSUM             2       DPSM
    46       4613       no      LANDCOVER_L         2       LCOV
    47       4678       no      HARVSTAREA_L        2       AREA
    48       4755       no      ETA                 3       ETA 
    49       4968       no      PARM_C              3       PRMC
    50       4989       no      MAX_LAND            2       MAXL
    51       5028       no      ID_PES              4       IDPS
    52       5056       no      PRODUCTION          2       TONS
    53       5607       no      MREGINC             4       MRIN
    54       5611       no      POPR                2       POP 
    55       5820       no      MACT                4       MACT
    56       5823       no      MCOM                4       MACT
    57       6349       no      TO_dTO_ID           4       IDTO
    58       6353       no      TO_AEZ_ID           4       AZTO
    59       6367       no      TO_dTFD_ID          4       IDTD
    60       6376       no      TO_dTFM_ID          4       IDTM




 ==============
 ++ WRITE TABLE
 ==============

        Defined   Sem     Coeff/Var     Write
 Number at line  Error?   written       file   Header     Long Name
 --------------------------------------------------------------------------------
     1     2656   no      PESDONORS         5  PESD    Not defined by the user
     2     2658   no      PESHR             5  PESH    Not defined by the user
     3     2659   no      INCOME            5  INCR    Not defined by the user
     4     5643   no      REALGDP           5  RGDP    Not defined by the user
     5     5645   no      VALRGDP           5  VRGD    Not defined by the user
     6     5648   no      GDP               5  BGDP   "Base Nominal GDP"
     7     5650   no      GDP               5  UGDP   "Updated Nominal GDP"
     8     5922   no      VDFA              5  rVDA    Not defined by the user
     9     5924   no      VDFA              5  sVDA    Not defined by the user
    10     5925   no      VDFM              5  rVDM    Not defined by the user
    11     5926   no      VDFM              5  sVDM    Not defined by the user
    12     5927   no      VIFA              5  rVIA    Not defined by the user
    13     5928   no      VIFA              5  sVIA    Not defined by the user
    14     5929   no      VIFM              5  rVIM    Not defined by the user
    15     5930   no      VIFM              5  sVIM    Not defined by the user
    16     5931   no      VOA               5  rVOA    Not defined by the user
    17     5932   no      VOA               5  sVOA    Not defined by the user
    18     5933   no      VOM               5  rVOM    Not defined by the user
    19     5934   no      VOM               5  sVOM    Not defined by the user
    20     5935   no      rTO               5  rTO     Not defined by the user
    21     5936   no      rTO               5  sTO     Not defined by the user
    22     5937   no      rTF               5  rTF     Not defined by the user
    23     5938   no      rTF               5  sTF     Not defined by the user
    24     5939   no      rTFD              5  rTFD    Not defined by the user
    25     5940   no      rTFD              5  sTFD    Not defined by the user
    26     5941   no      rTFM              5  rTFM    Not defined by the user
    27     5942   no      rTFM              5  sTFM    Not defined by the user
    28     5943   no      dTO               5  dTO     Not defined by the user
    29     5944   no      dTO               5  eTO     Not defined by the user
    30     5945   no      dTF               5  dTF     Not defined by the user
    31     5946   no      dTF               5  eTF     Not defined by the user
    32     5947   no      dTFD              5  dTFD    Not defined by the user
    33     5948   no      dTFD              5  eTFD    Not defined by the user
    34     5949   no      dTFM              5  dTFM    Not defined by the user
    35     5950   no      dTFM              5  eTFM    Not defined by the user
    36     5951   no      INCOME            5  INC     Not defined by the user
    37     5952   no      INCOME            5  UINC    Not defined by the user
    38     5953   no      to                5  to      Not defined by the user
    39     5954   no      tfd               5  tfd     Not defined by the user
    40     5955   no      tfm               5  tfm     Not defined by the user
    41     5956   no      tf                5  tf      Not defined by the user
    42     6434   no      INCOMEEV          5  YEV0    Not defined by the user
    43     6436   no      INCOMEEV          5  YEVU    Not defined by the user




 ===================
 ++ ZERODIVIDE TABLE
 ===================

           Defined          Coefficient or
  Number   at line   Type   real value specified
  -----------------------------------------------
     1       1543     ZDZ   0                   
     2       1544     ZDZ   1                   
     3       4436     ZDZ   0                   
     4       4443     ZDZ   (Turned OFF)
     5       4632     ZDZ   1                   
     6       4633     NDZ   1                   
     7       5002     ZDZ   0                   
     8       5009     ZDZ   (Turned OFF)
     9       5068     ZDZ   0                   
    10       5069     NDZ   0                   
    11       5091     ZDZ   (Turned OFF)
    12       5092     NDZ   (Turned OFF)
    13       5158     ZDZ   0                   
    14       5159     NDZ   0                   
    15       5176     ZDZ   (Turned OFF)
    16       5177     NDZ   (Turned OFF)
    17       5884     ZDZ   0.0                 


   
 ======================
 ++ INPUT CHECK SUMMARY
 ======================

 Total number of statements is 2045.
 There are NO syntax errors or semantic problems.


 ******************************************************************************
 -3-
 -->                     Starting CONDENSATION

 ******************************************************************************



 ==================================================
 +1+
 ++>Task   1 - omission of   6 variables
 ==================================================


     List of variables to omit :
     ---------------------------

      1  atall          
      2  avaall         
      3  tgd            
      4  tgm            
      5  tpd            
      6  tpm            

     Equations affected by this omission :
     --------------------------------------

      Equation  Equation name
      --------------------------
      This omission was made in the following updates :
      -------------------------------------------------

          6     GHHDPRICE           
          7     GHHIPRICES          
         11     TGCRATIO            
         16     TPDSHIFT            
         18     TPMSHIFT            
         41     AVAWORLD            
         72     TRANSTECHANGE       
      This omission was made in the following updates :
      -------------------------------------------------


 This omission was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 1.

 ==================================================
 +2+
 ++> Task   2 - Substituting out variable 'pgov'
 ==================================================


  >> Equation number   3 selected for substitution.
     Equation name is 'GPRICEINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVDMNDS (equation number   4)
     GOVU (equation number   5)
     PRICEINDEXREG (equation number  95)
     E_pgdpexp_ind (equation number 271)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 2.

 ==================================================
 +3+
 ++> Task   3 - Substituting out variable 'qg'
 ==================================================


  >> Equation number   4 selected for substitution.
     Equation name is 'GOVDMNDS'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GHHLDAGRIMP (equation number   9)
     GHHLDDOM (equation number  10)
     VGDP_r (equation number 113)

 To simplify the 'pop' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00328(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,VGA(i,r))


 To simplify the 'pg' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00329(i,r)

  equal to the following expression: 
 
          -VGA(i,r) * {-1.0 + 1.0} + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r)

           / GOVEXP(r))

     QGDP_r (equation number 115)

 To simplify the 'pg' part of equation 'QGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00330(i,r)

  equal to the following expression: 
 
          VGA(i,r) + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r) / GOVEXP(r))

     VWLDOUTUSE (equation number 126)
     QWLDOUTU (equation number 150)
     E_qg (equation number 266)

 To simplify the 'pop' part of equation 'E_qg', we will set
 
          (ALL,r,REG) C00331(r)

  equal to the following expression: 
 
          -SUM(c,TRAD_COMM,VGA(c,r))


 To simplify the 'pg' part of equation 'E_qg', we will set
 
          (ALL,c,TRAD_COMM) (ALL,r,REG) C00332(c,r)

  equal to the following expression: 
 
          VGA(c,r) + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(c,r) / GOVEXP(r))

     E_contGDPEXP (equation number 287)

 To simplify the 'pop' part of equation 'E_contGDPEXP', we will set
 
          (ALL,e,GDPEX) (ALL,r,REG) C00333(e,r)

  equal to the following expression: 
 
           IF( $POS(e , GDPEX ) EQ $POS("Government" , GDPEX ) , -

          SUM(c,TRAD_COMM,VGA(c,r)))


 To simplify the 'pg' part of equation 'E_contGDPEXP', we will set
 
          (ALL,c,TRAD_COMM) (ALL,e,GDPEX) (ALL,r,REG) C00334(c,e,r)

  equal to the following expression: 
 
           IF( $POS(e , GDPEX ) EQ $POS("Government" , GDPEX ) , VGA(c,r)) + 

           IF( $POS(e , GDPEX ) EQ $POS("Government" , GDPEX ) , -

          SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(c,r) / GOVEXP(r)))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 3.

 ==================================================
 +4+
 ++> Task   4 - Substituting out variable 'pgd'
 ==================================================


  >> Equation number   6 selected for substitution.
     Equation name is 'GHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   8)
     GHHLDDOM (equation number  10)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 4.

 ==================================================
 +5+
 ++> Task   5 - Substituting out variable 'pgm'
 ==================================================


  >> Equation number   7 selected for substitution.
     Equation name is 'GHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   8)
     GHHLDAGRIMP (equation number   9)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 5.

 ==================================================
 +6+
 ++> Task   6 - Substituting out variable 'pg'
 ==================================================


  >> Equation number   8 selected for substitution.
     Equation name is 'GCOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVU (equation number   5)
     GHHLDAGRIMP (equation number   9)
     GHHLDDOM (equation number  10)
     PRICEINDEXREG (equation number  95)
     VGDP_r (equation number 113)
     PGDP_r (equation number 114)
     QGDP_r (equation number 115)
     VWLDOUTUSE (equation number 126)
     PWLDUSE (equation number 136)
     QWLDOUTU (equation number 150)
     E_qg (equation number 266)
     E_pgdpexp_ind (equation number 271)
     PHOUSEHOLD (equation number 281)
     E_contGDPEXP (equation number 287)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 6.

 ==================================================
 +7+
 ++> Task   7 - Substituting out variable 'qgm'
 ==================================================


  >> Equation number   9 selected for substitution.
     Equation name is 'GHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TGCRATIO (equation number  11)

 To simplify the 'pm' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00335(i,r)

  equal to the following expression: 
 
          -{DGTAX(i,r) + IGTAX(i,r) * [-1.0 + ESUBD(i,r)] * [1 - GMSHR(i,r)]}

           + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1 - 

          GMSHR(i,r)})


 To simplify the 'pim' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00336(i,r)

  equal to the following expression: 
 
          -IGTAX(i,r) * {1.0 - [ESUBD(i,r) - (-1.0 + ESUBD(i,r)) * GMSHR(i,r)]}

           + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * 

          GMSHR(i,r))


 To simplify the 'pop' part of equation 'TGCRATIO', we will set
 
          (ALL,r,REG) C00337(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r))

     MKTCLIMP (equation number 101)
     EV_DECOMPOSITION (equation number 167)

 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00338(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i,r)} * {1 - 

          GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1 - GMSHR(i,r)})


 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00339(i,r)

  equal to the following expression: 
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i,r) - [-1.0 + ESUBD(i,

          r)] * GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))


 To simplify the 'pop' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00340(r)

  equal to the following expression: 
 
          -{0.01   * EVSCALFACT(r) * [SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * (1.0 - 1.0)) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r))) + SUM(i,ENDW_COMM,-

          VOA(i,r)) + VDEP(r)] + 0.01   * INCOMEEV(r)}


 To simplify the 'ug' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00341(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,IGTAX(i,r))

     CONT_EV_qgmr (equation number 186)

 To simplify the 'pm' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00342(i,r)

  equal to the following expression: 
 
          -IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {-1.0 + ESUBD(i,r)} * {1 - 

          GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * {1 - GMSHR(i,r)})


 To simplify the 'pim' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00343(i,r)

  equal to the following expression: 
 
          IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i,r) - [-1.0 + ESUBD(i,

          r)] * GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))


 To simplify the 'pop' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00344(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {1.0 - 1.0})


 To simplify the 'ug' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00345(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qgmir (equation number 187)
     CONT_EV_alleffr (equation number 194)

 To simplify the 'pop' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00346(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * {SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * [1.0 - 1.0]) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r)))}

     CONT_EV_alleffir_T (equation number 196)

 To simplify the 'pop' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00347(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * {-PTAX(i,r) + SUM(j,PROD_COMM,-IFTAX(i,j,r)

          ) + SUM(j,PROD_COMM,-DFTAX(i,j,r)) - IPTAX(i,r) - DPTAX(i,r) + 

          IGTAX(i,r) * [1.0 - 1.0] - DGTAX(i,r) + SUM(s,REG,-XTAXD(i,r,s)) + 

          SUM(s,REG,-MTAX(i,s,r))}

     E_contGDPINC (equation number 289)

 To simplify the 'pm' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00348(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , -

          IGTAX(c,r) * {-1.0 + ESUBD(c,r)} * {1 - GMSHR(c,r)}) +  IF( 

          $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(c,r) / GOVEXP(r) * {1 - 

          GMSHR(c,r)}))


 To simplify the 'pim' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00349(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , IGTAX(c,

          r) * {ESUBD(c,r) - [-1.0 + ESUBD(c,r)] * GMSHR(c,r)}) +  IF( 

          $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(c,r) / GOVEXP(r) * GMSHR(c,r))

          )


 To simplify the 'pop' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00350(g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , -

          SUM(c,TRAD_COMM,IGTAX(c,r)))

     E_contGDPINC2 (equation number 290)

 To simplify the 'pm' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00351(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , -

          IGTAX(c,r) * {-1.0 + ESUBD(c,r)} * {1 - GMSHR(c,r)}) +  IF( 

          $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(c,r) / GOVEXP(r) * {1 - 

          GMSHR(c,r)}))


 To simplify the 'pim' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00352(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , 

          IGTAX(c,r) * {ESUBD(c,r) - [-1.0 + ESUBD(c,r)] * GMSHR(c,r)}) +  IF( 

          $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(c,r) / GOVEXP(r) * GMSHR(c,r))

          )


 To simplify the 'pop' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00353(g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , -

          SUM(c,TRAD_COMM,IGTAX(c,r)))

     E_contGDPGVA (equation number 293)

 To simplify the 'pm' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00354(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGVA ) EQ $POS("IndTaxes" , CONTGVA ) , -IGTAX(c,r)

           * {-1.0 + ESUBD(c,r)} * {1 - GMSHR(c,r)}) +  IF( $POS(g , CONTGVA )

           EQ $POS("IndTaxes" , CONTGVA ) , -SUM(XX01,TRAD_COMM,IGTAX(XX01,r)

           * VGA(c,r) / GOVEXP(r) * {1 - GMSHR(c,r)}))


 To simplify the 'pim' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00355(c,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGVA ) EQ $POS("IndTaxes" , CONTGVA ) , IGTAX(c,r)

           * {ESUBD(c,r) - [-1.0 + ESUBD(c,r)] * GMSHR(c,r)}) +  IF( 

          $POS(g , CONTGVA ) EQ $POS("IndTaxes" , CONTGVA ) , -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(c,r) / GOVEXP(r) * GMSHR(c,r))

          )


 To simplify the 'pop' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00356(g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGVA ) EQ $POS("IndTaxes" , CONTGVA ) , -

          SUM(c,TRAD_COMM,IGTAX(c,r)))

     E_contGDPINC_a (equation number 380)

 To simplify the 'pop' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00357(r,rr,g)

  equal to the following expression: 
 
           IF( $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC ) , - IF( 

          $POS(g , CONTGDPIN2 ) EQ $POS("IndTaxes" , CONTGDPIN2 ) , 

          SUM(c,TRAD_COMM,IGTAX(c,r))))

     E_contGDPINC_w (equation number 386)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 7.

 ==================================================
 +8+
 ++> Task   8 - Substituting out variable 'ppd'
 ==================================================


  >> Equation number  17 selected for substitution.
     Equation name is 'PHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  21)
     PHHLDDOM (equation number  22)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 8.

 ==================================================
 +9+
 ++> Task   9 - Substituting out variable 'ppm'
 ==================================================


  >> Equation number  19 selected for substitution.
     Equation name is 'PHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  21)
     PHHLDAGRIMP (equation number  23)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 9.

 ==================================================
 +10+
 ++> Task  10 - Substituting out variable 'qpm'
 ==================================================


  >> Equation number  23 selected for substitution.
     Equation name is 'PHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TPCRATIO (equation number  20)
     MKTCLIMP (equation number 101)
     EV_DECOMPOSITION (equation number 167)
     CONT_EV_qpmr (equation number 182)

 To simplify the 'pop' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,r,REG) C00358(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-IPTAX(i,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qpmir (equation number 183)
     CONT_EV_alleffr (equation number 194)
     CONT_EV_alleffir_T (equation number 196)
     E_contGDPINC (equation number 289)
     E_contGDPINC2 (equation number 290)
     E_contGDPGVA (equation number 293)
     E_contGDPINC_a (equation number 380)
     E_contGDPINC_w (equation number 386)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 10.

 ==================================================
 +11+
 ++> Task  11 - Substituting out variable 'ao'
 ==================================================


  >> Equation number  40 selected for substitution.
     Equation name is 'AOWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  42)
     INTDEMAND (equation number  44)
     ZEROPROFITS (equation number  47)

 To simplify the 'ava' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00359(j,r)

  equal to the following expression: 
 
          -SUM(i,ENDW_COMM,-STC(i,j,r))

     EV_DECOMPOSITION (equation number 167)

 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00360(r)

  equal to the following expression: 
 
          SUM(i,PROD_COMM,-0.01   * EVSCALFACT(r) * VOA(i,r))

     CONT_EV_techr (equation number 201)

 To simplify the 'aoreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00361(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,PROD_COMM,VOA(i,r))

     CONT_EV_tech_aor (equation number 202)
     CONT_EV_tech_aoir (equation number 203)
     E_contGDPINC (equation number 289)

 To simplify the 'aoreg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00362(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VOA(a,r)))

     E_contGDPINC2 (equation number 290)

 To simplify the 'aoreg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00363(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VOA(a,r)))

     E_contGDPGVA (equation number 293)

 To simplify the 'aoreg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00364(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VOA(a,r)))

     E_contGDPINC_a (equation number 380)

 To simplify the 'aosec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00365(rr,g,a)

  equal to the following expression: 
 
          SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC ) , 

           IF( $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VOA(a,r))))


 To simplify the 'aoreg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00366(r,rr,g)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC )

           ,  IF( $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VOA(a,r))))

     E_contGDPINC_w (equation number 386)

 To simplify the 'aosec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00367(g,a)

  equal to the following expression: 
 
          SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VOA(a,r)))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 11.

 ==================================================
 +12+
 ++> Task  12 - Substituting out variable 'ava'
 ==================================================


  >> Equation number  41 selected for substitution.
     Equation name is 'AVAWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  42)
     ZEROPROFITS (equation number  47)
     EV_DECOMPOSITION (equation number 167)

 To simplify the 'avareg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00368(r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VVA(j,r))

     CONT_EV_techr (equation number 201)
     CONT_EV_tech_avar (equation number 206)

 To simplify the 'avareg' part of equation 'CONT_EV_tech_avar', we will set
 
          (ALL,r,REG) C00369(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VVA(j,r))

     CONT_EV_tech_avajr (equation number 207)
     E_contGDPINC (equation number 289)

 To simplify the 'avareg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00370(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VVA(a,r)))

     E_contGDPINC2 (equation number 290)

 To simplify the 'avareg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00371(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VVA(a,r)))

     E_contGDPGVA (equation number 293)

 To simplify the 'avareg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00372(g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VVA(a,r)))

     E_contGDPINC_a (equation number 380)

 To simplify the 'avasec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00373(rr,g,a)

  equal to the following expression: 
 
          SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC ) , 

           IF( $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VVA(a,r))))


 To simplify the 'avareg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00374(r,rr,g)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC )

           ,  IF( $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VVA(a,r))))

     E_contGDPINC_w (equation number 386)

 To simplify the 'avasec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00375(g,a)

  equal to the following expression: 
 
          SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VVA(a,r)))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 12.

 ==================================================
 +13+
 ++> Task  13 - Substituting out variable 'qva'
 ==================================================


  >> Equation number  42 selected for substitution.
     Equation name is 'VADEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  35)
     LANDDEMAND (equation number  37)
     NLANDDEMAND (equation number  39)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 13.

 ==================================================
 +14+
 ++> Task  14 - Substituting out variable 'af'
 ==================================================


  >> Equation number  43 selected for substitution.
     Equation name is 'AFWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INTDEMAND (equation number  44)
     ZEROPROFITS (equation number  47)

 To simplify the 'afsec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00376(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 167)

 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00377(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00378(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00379(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 201)

 To simplify the 'afcom' part of equation 'CONT_EV_techr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00380(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )


 To simplify the 'afsec' part of equation 'CONT_EV_techr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00381(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )


 To simplify the 'afreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00382(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,

          r) + VDFA(i,j,r)}))

     CONT_EV_tech_afr (equation number 208)

 To simplify the 'afcom' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00383(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VIFA(i,j,r) + VDFA(i,j,r))


 To simplify the 'afsec' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00384(j,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,VIFA(i,j,r) + VDFA(i,j,r))


 To simplify the 'afreg' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,r,REG) C00385(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,TRAD_COMM,VIFA(i,j,r)

           + VDFA(i,j,r)))

     CONT_EV_tech_afijr (equation number 209)
     E_contGDPINC (equation number 289)

 To simplify the 'afcom' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00386(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afsec' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00387(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afreg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00388(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -{VIFA(c,a,r) + VDFA(c,a,r)})))

     E_contGDPINC2 (equation number 290)

 To simplify the 'afcom' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00389(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afsec' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00390(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afreg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00391(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)})))

     E_contGDPGVA (equation number 293)

 To simplify the 'afcom' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00392(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afsec' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00393(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))


 To simplify the 'afreg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00394(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -{VIFA(c,a,r) + VDFA(c,a,r)})))

     E_contGDPINC_a (equation number 380)

 To simplify the 'afcom' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00395(rr,g,c)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))))


 To simplify the 'afsec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00396(rr,g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))))


 To simplify the 'afreg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00397(r,rr,g)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)}))))

     E_contGDPINC_w (equation number 386)

 To simplify the 'afcom' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00398(g,c)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)})))


 To simplify the 'afsec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00399(g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -{VIFA(c,a,r) + VDFA(c,a,r)})))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 14.

 ==================================================
 +15+
 ++> Task  15 - Substituting out variable 'qf'
 ==================================================


  >> Equation number  44 selected for substitution.
     Equation name is 'INTDEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  28)
     INDDOM (equation number  29)
     VWLDOUTUSE (equation number 126)

 To simplify the 'aosec' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) C00400(i,j)

  equal to the following expression: 
 
          SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j,s)})


 To simplify the 'aoreg' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00401(i,s)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-VFA(i,j,s) * {-1.0 + ESUBT(j,s)})


 To simplify the 'afcom' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) C00402(i)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j,s)}))

     QWLDOUTU (equation number 150)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 15.

 ==================================================
 +16+
 ++> Task  16 - Substituting out variable 'pfd'
 ==================================================


  >> Equation number  24 selected for substitution.
     Equation name is 'DMNDDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  27)
     INDDOM (equation number  29)
     E_VDFA_alt (equation number 346)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 16.

 ==================================================
 +17+
 ++> Task  17 - Substituting out variable 'pfm'
 ==================================================


  >> Equation number  25 selected for substitution.
     Equation name is 'DMNDIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  27)
     INDIMP (equation number  28)
     E_VIFA_alt (equation number 347)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 17.

 ==================================================
 +18+
 ++> Task  18 - Substituting out variable 'pf'
 ==================================================


  >> Equation number  27 selected for substitution.
     Equation name is 'ICOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  28)
     INDDOM (equation number  29)
     ZEROPROFITS (equation number  47)
     VWLDOUTUSE (equation number 126)

 To simplify the 'pm' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00403(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1.0 - 1.0} * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,{-VFA(i,

          j,s) + VFA(i,j,s) * ESUBT(j,s)} * {1 - FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00404(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1.0 - 1.0} * GMSHR(i,s) + SUM(j,PROD_COMM,{-VFA(i,j,s)

           + VFA(i,j,s) * ESUBT(j,s)} * FMSHR(i,j,s))

     PWLDUSE (equation number 136)

 To simplify the 'pm' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00405(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,-VFA(i,j,s) * {1 - 

          FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00406(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,-VFA(i,j,s) * FMSHR(i,j,s))

     QWLDOUTU (equation number 150)

 To simplify the 'pm' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00407(i,s)

  equal to the following expression: 
 
          VGA(i,s) * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j,s)

           * {1 - FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00408(i,s)

  equal to the following expression: 
 
          VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j,s) * 

          FMSHR(i,j,s))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 18.

 ==================================================
 +19+
 ++> Task  19 - Substituting out variable 'qfm'
 ==================================================


  >> Equation number  28 selected for substitution.
     Equation name is 'INDIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TIURATIO (equation number  26)

 To simplify the 'pm' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00409(i,r)

  equal to the following expression: 
 
          -{SUM(j,PROD_COMM,DFTAX(i,j,r)) + SUM(j,PROD_COMM,IFTAX(i,j,r) * [-

          ESUBT(j,r) + ESUBD(i,r)] * [1 - FMSHR(i,j,r)])}


 To simplify the 'pim' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00410(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {1.0 - [ESUBD(i,r) - (-ESUBT(j,r) + 

          ESUBD(i,r)) * FMSHR(i,j,r)]})


 To simplify the 'ps' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00411(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * ESUBT(j,r))


 To simplify the 'qo' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00412(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r))


 To simplify the 'aosec' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00413(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j,r)})


 To simplify the 'aoreg' part of equation 'TIURATIO', we will set
 
          (ALL,r,REG) C00414(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j,r)}))


 To simplify the 'afcom' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00415(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j,r)})

     MKTCLIMP (equation number 101)

 To simplify the 'pm' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00416(i,r)

  equal to the following expression: 
 
          -SHRIGM(i,r) * {-1.0 + ESUBD(i,r)} * {1 - GMSHR(i,r)} + 

          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-ESUBT(j,r) + ESUBD(i,r)} * {1 - 

          FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00417(i,r)

  equal to the following expression: 
 
          SHRIGM(i,r) * {ESUBD(i,r) - [-1.0 + ESUBD(i,r)] * GMSHR(i,r)} + 

          SHRIPM(i,r) * ESUBD(i,r) + SUM(j,PROD_COMM,SHRIFM(i,j,r) * {ESUBD(i,

          r) - [-ESUBT(j,r) + ESUBD(i,r)] * FMSHR(i,j,r)})


 To simplify the 'aoreg' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00418(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-1.0 + ESUBT(j,r)})

     EV_DECOMPOSITION (equation number 167)

 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00419(i,r)

  equal to the following expression: 
 
          C00338(i,r) + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j,r) + ESUBD(i,r)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00420(i,r)

  equal to the following expression: 
 
          C00339(i,r) + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i,r) + 

          SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i,r)

           - [-ESUBT(j,r) + ESUBD(i,r)] * FMSHR(i,j,r)})


 To simplify the 'ps' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00421(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * ESUBT(j,r))


 To simplify the 'qo' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00422(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r))


 To simplify the 'aosec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00423(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j,r)}) + -0.01   * EVSCALFACT(r) * VOA(j,r)


 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00424(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j,r)})) + C00360(r)


 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00425(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j,r)}) + C00377(i,r)


 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00426(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j,r)}) + C00378(j,r)


 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00427(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j,r)})) + C00379(r)

     CONT_EV_qfmr (equation number 176)

 To simplify the 'pm' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00428(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-ESUBT(j,r)

           + ESUBD(i,r)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00429(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i,r)

           - [-ESUBT(j,r) + ESUBD(i,r)] * FMSHR(i,j,r)})


 To simplify the 'ps' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00430(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * ESUBT(j,r))


 To simplify the 'qo' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00431(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))


 To simplify the 'pop' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00432(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r)))


 To simplify the 'aosec' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00433(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j,r)})


 To simplify the 'aoreg' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00434(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r) * {-1.0 + ESUBT(j,r)}))


 To simplify the 'afcom' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00435(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j,r)})

     CONT_EV_qfmir (equation number 177)

 To simplify the 'pop' part of equation 'CONT_EV_qfmir', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00436(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qfmijr (equation number 178)
     CONT_EV_alleffr (equation number 194)

 To simplify the 'aosec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00437(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j,r)})


 To simplify the 'aoreg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00438(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j,r)}))


 To simplify the 'afcom' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00439(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j,r)})

     CONT_EV_alleffir_T (equation number 196)

 To simplify the 'pm' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00440(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i,r)} * {1 - 

          GMSHR(i,r)} + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j,r) + ESUBD(i,r)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00441(i,r)

  equal to the following expression: 
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i,r) - [-1.0 + ESUBD(i,

          r)] * GMSHR(i,r)} + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i,r)

           + SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i,

          r) - [-ESUBT(j,r) + ESUBD(i,r)] * FMSHR(i,j,r)})

     E_contGDPINC (equation number 289)

 To simplify the 'pm' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00442(c,g,r)

  equal to the following expression: 
 
          C00348(c,g,r) + SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-ESUBT(a,r) + 

          ESUBD(c,r)} * {1 - FMSHR(c,a,r)}))


 To simplify the 'pim' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00443(c,g,r)

  equal to the following expression: 
 
          C00349(c,g,r) +  IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , IPTAX(c,r) * ESUBD(c,r)) + 

          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , IFTAX(c,a,r) * {ESUBD(c,r) - [-

          ESUBT(a,r) + ESUBD(c,r)] * FMSHR(c,a,r)}))


 To simplify the 'ps' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00444(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * ESUBT(a,r)))


 To simplify the 'qo' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00445(a,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGDPIN ) EQ $POS("IndTaxes" , CONTGDPIN ) , -PTAX(a,

          r)) + SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r)))


 To simplify the 'aosec' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00446(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           +  IF( $POS(g , CONTGDPIN ) EQ $POS("TechChange" , CONTGDPIN ) , -

          VOA(a,r))


 To simplify the 'aoreg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00447(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

          ) + C00362(g,r)


 To simplify the 'afcom' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00448(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           + C00386(c,g,r)


 To simplify the 'afsec' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00449(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           + C00387(a,g,r)


 To simplify the 'afreg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00450(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("IndTaxes" , CONTGDPIN ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

          ) + C00388(g,r)

     E_contGDPINC2 (equation number 290)

 To simplify the 'pm' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00451(c,g,r)

  equal to the following expression: 
 
          C00351(c,g,r) + SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-ESUBT(a,r) + 

          ESUBD(c,r)} * {1 - FMSHR(c,a,r)}))


 To simplify the 'pim' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00452(c,g,r)

  equal to the following expression: 
 
          C00352(c,g,r) +  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , IPTAX(c,r) * ESUBD(c,r)) + 

          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , IFTAX(c,a,r) * {ESUBD(c,r) - [-

          ESUBT(a,r) + ESUBD(c,r)] * FMSHR(c,a,r)}))


 To simplify the 'ps' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00453(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * ESUBT(a,r)))


 To simplify the 'qo' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00454(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)))


 To simplify the 'aosec' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00455(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          ) +  IF( $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , 

          -VOA(a,r))


 To simplify the 'aoreg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00456(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          )) + C00363(g,r)


 To simplify the 'afcom' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00457(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          ) + C00389(c,g,r)


 To simplify the 'afsec' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00458(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          ) + C00390(a,g,r)


 To simplify the 'afreg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00459(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          )) + C00391(g,r)

     E_contGDPGVA (equation number 293)

 To simplify the 'pm' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00460(c,g,r)

  equal to the following expression: 
 
          C00354(c,g,r) + SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-ESUBT(a,r) + ESUBD(c,

          r)} * {1 - FMSHR(c,a,r)}))


 To simplify the 'pim' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00461(c,g,r)

  equal to the following expression: 
 
          C00355(c,g,r) +  IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , IPTAX(c,r) * ESUBD(c,r)) + 

          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , IFTAX(c,a,r) * {ESUBD(c,r) - [-ESUBT(a,

          r) + ESUBD(c,r)] * FMSHR(c,a,r)}))


 To simplify the 'ps' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00462(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * ESUBT(a,r)))


 To simplify the 'qo' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00463(a,g,r)

  equal to the following expression: 
 
           IF( $POS(g , CONTGVA ) EQ $POS("IndTaxes" , CONTGVA ) , -PTAX(a,r))

           + SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r)))


 To simplify the 'aosec' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00464(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           +  IF( $POS(g , CONTGVA ) EQ $POS("TechChange" , CONTGVA ) , -VOA(a,

          r))


 To simplify the 'aoreg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00465(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})))

           + C00364(g,r)


 To simplify the 'afcom' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00466(c,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           + C00392(c,g,r)


 To simplify the 'afsec' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00467(a,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)}))

           + C00393(a,g,r)


 To simplify the 'afreg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00468(g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("IndTaxes" , CONTGVA ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})))

           + C00394(g,r)

     E_VIFA_alt (equation number 347)
     E_VIFM_alt (equation number 358)
     E_contGDPINC_a (equation number 380)

 To simplify the 'aosec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00469(rr,g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)) * {-1.0 + ESUBT(a,r)}

          ))) + C00365(rr,g,a)


 To simplify the 'aoreg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00470(r,rr,g)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)) * {-1.0 + ESUBT(a,r)}

          ))) + C00366(r,rr,g)


 To simplify the 'afcom' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00471(rr,g,c)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)) * {-1.0 + ESUBT(a,r)}

          ))) + C00395(rr,g,c)


 To simplify the 'afsec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00472(rr,g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)) * {-1.0 + ESUBT(a,r)}

          ))) + C00396(rr,g,a)


 To simplify the 'afreg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00473(r,rr,g)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r)) * {-1.0 + ESUBT(a,r)}

          ))) + C00397(r,rr,g)

     E_contGDPINC_w (equation number 386)

 To simplify the 'aosec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00474(g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          )) + C00367(g,a)


 To simplify the 'afcom' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00475(g,c)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          )) + C00398(g,c)


 To simplify the 'afsec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00476(g,a)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("IndTaxes" , CONTGDPIN2 ) , -IFTAX(c,a,r) * {-1.0 + ESUBT(a,r)})

          )) + C00399(g,a)


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 19.

 ==================================================
 +20+
 ++> Task  20 - Substituting out variable 'afe'
 ==================================================


  >> Equation number  32 selected for substitution.
     Equation name is 'AFEWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VAPRICE (equation number  33)

 To simplify the 'afesec' part of equation 'VAPRICE', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00477(j,r)

  equal to the following expression: 
 
          -SUM(k,ENDW_COMM,-SVA(k,j,r))

     ENDWDEMAND (equation number  35)
     LANDPRICE (equation number  36)

 To simplify the 'afesec' part of equation 'LANDPRICE', we will set
 
          (ALL,j,LAND_COMM) (ALL,r,REG) C00478(j,r)

  equal to the following expression: 
 
          -SUM(k,AEZ_COMM,-SAEZLAND(k,j,r))

     AEZDEMAND (equation number  38)
     NLANDDEMAND (equation number  39)
     ZEROPROFITS (equation number  47)

 To simplify the 'afesec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00479(j,r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 167)

 To simplify the 'afecom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00480(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afesec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00481(j,r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afereg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00482(r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 201)
     CONT_EV_tech_afer (equation number 204)

 To simplify the 'afecom' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00483(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VFA(i,j,r))


 To simplify the 'afesec' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00484(j,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,ENDW_COMM,VFA(i,j,r))


 To simplify the 'afereg' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,r,REG) C00485(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,ENDW_COMM,VFA(i,j,r))

          )

     CONT_EV_tech_afeijr (equation number 205)
     E_contGDPINC (equation number 289)

 To simplify the 'afecom' part of equation 'E_contGDPINC', we will set
 
          (ALL,e,ENDW_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00486(e,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VFA(e,a,r)))


 To simplify the 'afesec' part of equation 'E_contGDPINC', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00487(a,g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VFA(e,a,r)))


 To simplify the 'afereg' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00488(g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VFA(e,a,r))))

     E_contGDPINC2 (equation number 290)

 To simplify the 'afecom' part of equation 'E_contGDPINC2', we will set
 
          (ALL,e,ENDW_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00489(e,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r)))


 To simplify the 'afesec' part of equation 'E_contGDPINC2', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00490(a,g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r)))


 To simplify the 'afereg' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00491(g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r))))

     E_contGDPGVA (equation number 293)

 To simplify the 'afecom' part of equation 'E_contGDPGVA', we will set
 
          (ALL,e,ENDW_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00492(e,g,r)

  equal to the following expression: 
 
          SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VFA(e,a,r)))


 To simplify the 'afesec' part of equation 'E_contGDPGVA', we will set
 
          (ALL,a,PROD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00493(a,g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VFA(e,a,r)))


 To simplify the 'afereg' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00494(g,r)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(a,PROD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VFA(e,a,r))))

     E_contGDPINC_a (equation number 380)

 To simplify the 'afecom' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,e,ENDW_COMM) C00495(rr,g,e)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r)))))


 To simplify the 'afesec' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00496(rr,g,a)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r)))))


 To simplify the 'afereg' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00497(r,rr,g)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(a,PROD_COMM, IF( $POS(MREGINC(r) , REGINC ) EQ 

          $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r)))))

     E_contGDPINC_w (equation number 386)

 To simplify the 'afecom' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,e,ENDW_COMM) C00498(g,e)

  equal to the following expression: 
 
          SUM(a,PROD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r))))


 To simplify the 'afesec' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,a,PROD_COMM) C00499(g,a)

  equal to the following expression: 
 
          SUM(e,ENDW_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VFA(e,a,r))))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 20.

 ==================================================
 +21+
 ++> Task  21 - Substituting out variable 'pva'
 ==================================================


  >> Equation number  33 selected for substitution.
     Equation name is 'VAPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  35)
     LANDDEMAND (equation number  37)
     NLANDDEMAND (equation number  39)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 21.

 ==================================================
 +22+
 ++> Task  22 - Substituting out variable 'pfob'
 ==================================================


  >> Equation number  61 selected for substitution.
     Equation name is 'EXPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TEXPRATIO (equation number  62)

 To simplify the 'pm' part of equation 'TEXPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00500(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,XTAXD(i,r,s))


 To simplify the 'tx' part of equation 'TEXPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00501(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-VXMD(i,r,s) - XTAXD(i,r,s))

     FOBCIF (equation number  74)
     REGSUPRICE (equation number 110)

 To simplify the 'pm' part of equation 'REGSUPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00502(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,VXWD(i,r,s))


 To simplify the 'tx' part of equation 'REGSUPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00503(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-VXWD(i,r,s))

     VGDP_r (equation number 113)

 To simplify the 'pm' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00504(i,r)

  equal to the following expression: 
 
          C00329(i,r) * {1 - GMSHR(i,r)} + SUM(s,REG,-VXWD(i,r,s))


 To simplify the 'tx' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00505(i,r)

  equal to the following expression: 
 
          SUM(s,REG,VXWD(i,r,s))

     PGDP_r (equation number 114)

 To simplify the 'pm' part of equation 'PGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00506(i,r)

  equal to the following expression: 
 
          -VGA(i,r) * {1 - GMSHR(i,r)} + SUM(s,REG,-VXWD(i,r,s))

     VREGEX_ir_MARG (equation number 117)

 To simplify the 'pm' part of equation 'VREGEX_ir_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00507(m,r)

  equal to the following expression: 
 
          -{SUM(s,REG,VXWD(m,r,s)) + VST(m,r)}


 To simplify the 'tx' part of equation 'VREGEX_ir_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00508(m,r)

  equal to the following expression: 
 
          -SUM(s,REG,-VXWD(m,r,s))

     VREGEX_ir_NMRG (equation number 118)

 To simplify the 'pm' part of equation 'VREGEX_ir_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00509(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,VXWD(i,r,s))


 To simplify the 'tx' part of equation 'VREGEX_ir_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00510(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-VXWD(i,r,s))

     PREGEX_ir_MARG (equation number 127)
     PREGEX_ir_NMRG (equation number 128)
     EV_DECOMPOSITION (equation number 167)

 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00511(i,r)

  equal to the following expression: 
 
          C00419(i,r) + SUM(s,REG,-0.01   * EVSCALFACT(r) * VXWD(i,r,s))


 To simplify the 'tx' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00512(i,r)

  equal to the following expression: 
 
          SUM(s,REG,0.01   * EVSCALFACT(r) * VXWD(i,r,s))

     CONT_EV_totr (equation number 197)

 To simplify the 'pm' part of equation 'CONT_EV_totr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00513(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,VXWD(i,r,s))


 To simplify the 'tx' part of equation 'CONT_EV_totr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00514(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,-VXWD(i,r,s))


 To simplify the 'pxwwld' part of equation 'CONT_EV_totr', we will set
 
          (ALL,r,REG) C00515(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * {SUM(i,TRAD_COMM,SUM(s,REG,-VXWD(i,r,s)))

           + SUM(m,MARG_COMM,-VST(m,r)) - SUM(i,TRAD_COMM,SUM(s,REG,-VXWD(i,s,

          r))) - SUM(m,MARG_COMM,-VTMD(m,r))}

     EXPPRICE_MARG (equation number 215)

 To simplify the 'pm' part of equation 'EXPPRICE_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00516(m,r)

  equal to the following expression: 
 
          -{SUM(s,REG,SX_IRS(m,r,s)) + SXT_IR(m,r)}


 To simplify the 'tx' part of equation 'EXPPRICE_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00517(m,r)

  equal to the following expression: 
 
          -SUM(s,REG,-SX_IRS(m,r,s))

     EXPPRICE_NMRG (equation number 216)

 To simplify the 'pm' part of equation 'EXPPRICE_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00518(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,SX_IRS(i,r,s))


 To simplify the 'tx' part of equation 'EXPPRICE_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00519(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-SX_IRS(i,r,s))

     IMPPRICE1_MARG (equation number 217)
     IMPPRICE1_NMRG (equation number 218)
     E_pfobxw (equation number 269)

 To simplify the 'pm' part of equation 'E_pfobxw', we will set
 
          (ALL,c,TRAD_COMM) (ALL,r,REG) C00520(c,r)

  equal to the following expression: 
 
          -SUM(d,REG,VXWD(c,r,d))


 To simplify the 'tx' part of equation 'E_pfobxw', we will set
 
          (ALL,c,TRAD_COMM) (ALL,r,REG) C00521(c,r)

  equal to the following expression: 
 
          -SUM(d,REG,-VXWD(c,r,d))

     E_pfobareg (equation number 400)

 To simplify the 'pfobareg' part of equation 'E_pfobareg', we will set
 
          (ALL,i,BACT) (ALL,r,REGINC) (ALL,s,REGINC) C00522(i,r,s)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM: $POS(MCOM(c) , BACT ) EQ $POS(i , BACT ) , 

          SUM(rr,REG: $POS(MREGINC(rr) , REGINC ) EQ $POS(r , REGINC ) , 

          SUM(ss,REG: $POS(MREGINC(ss) , REGINC ) EQ $POS(s , REGINC ) , 

          VXWD(c,rr,ss))))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 22.

 ==================================================
 +23+
 ++> Task  23 - Substituting out variable 'pms'
 ==================================================


  >> Equation number  63 selected for substitution.
     Equation name is 'MKTPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  64)

 To simplify the 'tm' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00523(i,s)

  equal to the following expression: 
 
          -SUM(k,REG,MSHRS(i,k,s))

     IMPORTDEMAND (equation number  66)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 23.

 ==================================================
 +24+
 ++> Task  24 - Substituting out variable 'qtmfsd'
 ==================================================


  >> Equation number  68 selected for substitution.
     Equation name is 'QTRANS_MFSD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  69)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 24.

 ==================================================
 +25+
 ++> Task  25 - Substituting out variable 'ptrans'
 ==================================================


  >> Equation number  71 selected for substitution.
     Equation name is 'TRANSCOSTINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     FOBCIF (equation number  74)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 25.

 ==================================================
 +26+
 ++> Task  26 - Substituting out variable 'atmfsd'
 ==================================================


  >> Equation number  72 selected for substitution.
     Equation name is 'TRANSTECHANGE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  69)

 To simplify the 'atm' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) C00524(m)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s))))


 To simplify the 'atf' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) C00525(m,i)

  equal to the following expression: 
 
          SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s)))


 To simplify the 'ats' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00526(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,VTMUSESHR(m,i,r,s)))


 To simplify the 'atd' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,s,REG) C00527(m,s)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(r,REG,VTMUSESHR(m,i,r,s)))

     FOBCIF (equation number  74)

 To simplify the 'atf' part of equation 'FOBCIF', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) (ALL,s,REG) C00528(i,r,s)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     EV_DECOMPOSITION (equation number 167)

 To simplify the 'atm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00529(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))


 To simplify the 'atf' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00530(i,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))


 To simplify the 'ats' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00531(s,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,

          s,r)))


 To simplify the 'atd' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00532(r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * 

          VTMFSD(m,i,s,r))))

     CONT_EV_techr (equation number 201)
     CONT_EV_tech_atrr (equation number 210)

 To simplify the 'atm' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00533(m,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))


 To simplify the 'atf' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00534(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))


 To simplify the 'ats' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00535(s,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,VTMFSD(m,i,

          s,r)))


 To simplify the 'atd' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,r,REG) C00536(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,

          VTMFSD(m,i,s,r))))

     CONT_EV_tech_afmfdsd (equation number 211)
     E_contGDPINC (equation number 289)

 To simplify the 'atm' part of equation 'E_contGDPINC', we will set
 
          (ALL,m,MARG_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00537(m,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atf' part of equation 'E_contGDPINC', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN) (ALL,r,REG) C00538(c,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VTMFSD(m,c,s,r))))


 To simplify the 'ats' part of equation 'E_contGDPINC', we will set
 
          (ALL,s,REG) (ALL,g,CONTGDPIN) (ALL,r,REG) C00539(s,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN ) EQ 

          $POS("TechChange" , CONTGDPIN ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atd' part of equation 'E_contGDPINC', we will set
 
          (ALL,g,CONTGDPIN) (ALL,r,REG) C00540(g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN )

           EQ $POS("TechChange" , CONTGDPIN ) , -VTMFSD(m,c,s,r)))))

     E_contGDPINC2 (equation number 290)

 To simplify the 'atm' part of equation 'E_contGDPINC2', we will set
 
          (ALL,m,MARG_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00541(m,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atf' part of equation 'E_contGDPINC2', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00542(c,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r))))


 To simplify the 'ats' part of equation 'E_contGDPINC2', we will set
 
          (ALL,s,REG) (ALL,g,CONTGDPIN2) (ALL,r,REG) C00543(s,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atd' part of equation 'E_contGDPINC2', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,r,REG) C00544(g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGDPIN2 )

           EQ $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r)))))

     E_contGDPGVA (equation number 293)

 To simplify the 'atm' part of equation 'E_contGDPGVA', we will set
 
          (ALL,m,MARG_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00545(m,g,r)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atf' part of equation 'E_contGDPGVA', we will set
 
          (ALL,c,TRAD_COMM) (ALL,g,CONTGVA) (ALL,r,REG) C00546(c,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VTMFSD(m,c,s,r))))


 To simplify the 'ats' part of equation 'E_contGDPGVA', we will set
 
          (ALL,s,REG) (ALL,g,CONTGVA) (ALL,r,REG) C00547(s,g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VTMFSD(m,c,s,r))))


 To simplify the 'atd' part of equation 'E_contGDPGVA', we will set
 
          (ALL,g,CONTGVA) (ALL,r,REG) C00548(g,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(s,REG, IF( $POS(g , CONTGVA ) EQ 

          $POS("TechChange" , CONTGVA ) , -VTMFSD(m,c,s,r)))))

     E_contGDPINC_a (equation number 380)

 To simplify the 'atm' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,m,MARG_COMM) C00549(rr,g,m)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(s,REG,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC )

           EQ $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r))))))


 To simplify the 'atf' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00550(rr,g,c)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG,SUM(r,REG, IF( $POS(MREGINC(r) , REGINC )

           EQ $POS(rr , REGINC ) ,  IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r))))))


 To simplify the 'ats' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) (ALL,s,REG) C00551(rr,g,s)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(r,REG, IF( 

          $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC ) ,  IF( 

          $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VTMFSD(m,c,s,r))))))


 To simplify the 'atd' part of equation 'E_contGDPINC_a', we will set
 
          (ALL,r,REG) (ALL,rr,REGINC) (ALL,g,CONTGDPIN2) C00552(r,rr,g)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(s,REG, IF( 

          $POS(MREGINC(r) , REGINC ) EQ $POS(rr , REGINC ) ,  IF( 

          $POS(g , CONTGDPIN2 ) EQ $POS("TechChange" , CONTGDPIN2 ) , -

          VTMFSD(m,c,s,r))))))

     E_contGDPINC_w (equation number 386)

 To simplify the 'atm' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,m,MARG_COMM) C00553(g,m)

  equal to the following expression: 
 
          SUM(c,TRAD_COMM,SUM(s,REG,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r)))))


 To simplify the 'atf' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,c,TRAD_COMM) C00554(g,c)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG,SUM(r,REG, IF( $POS(g , CONTGDPIN2 ) EQ 

          $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r)))))


 To simplify the 'ats' part of equation 'E_contGDPINC_w', we will set
 
          (ALL,g,CONTGDPIN2) (ALL,s,REG) C00555(g,s)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(c,TRAD_COMM,SUM(r,REG, IF( $POS(g , CONTGDPIN2 )

           EQ $POS("TechChange" , CONTGDPIN2 ) , -VTMFSD(m,c,s,r)))))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 26.

 ==================================================
 +27+
 ++> Task  27 - Substituting out variable 'pcif'
 ==================================================


  >> Equation number  74 selected for substitution.
     Equation name is 'FOBCIF'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  64)

 To simplify the 'atm' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00556(m,i,s)

  equal to the following expression: 
 
          SUM(k,REG,MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))


 To simplify the 'atf' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00557(i,s)

  equal to the following expression: 
 
          SUM(k,REG,MSHRS(i,k,s) * C00528(i,k,s))


 To simplify the 'pt' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00558(m,i,s)

  equal to the following expression: 
 
          SUM(k,REG,-MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))

     IMPORTDEMAND (equation number  66)
     TIMPRATIO (equation number  67)

 To simplify the 'tm' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00559(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,VIMS(i,s,r))


 To simplify the 'atm' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00560(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * TRNSHR(i,s,r) * 

          VTFSD_MSH(m,i,s,r)))


 To simplify the 'atf' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00561(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-MTAX(i,s,r) * C00528(i,s,r))


 To simplify the 'ats' part of equation 'TIMPRATIO', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00562(s,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-MTAX(i,s,r) * C00528(i,s,r))


 To simplify the 'atd' part of equation 'TIMPRATIO', we will set
 
          (ALL,r,REG) C00563(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * C00528(i,s,r)))


 To simplify the 'pt' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00564(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,MTAX(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     REGDEMPRICE (equation number 111)

 To simplify the 'atm' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00565(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * TRNSHR(i,k,r) * 

          VTFSD_MSH(m,i,k,r)))


 To simplify the 'atf' part of equation 'REGDEMPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00566(i,r)

  equal to the following expression: 
 
          -SUM(k,REG,-VIWS(i,k,r) * C00528(i,k,r))


 To simplify the 'ats' part of equation 'REGDEMPRICE', we will set
 
          (ALL,k,REG) (ALL,r,REG) C00567(k,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-VIWS(i,k,r) * C00528(i,k,r))


 To simplify the 'atd' part of equation 'REGDEMPRICE', we will set
 
          (ALL,r,REG) C00568(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * C00528(i,k,r)))


 To simplify the 'pt' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00569(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,VIWS(i,k,r) * TRNSHR(i,k,r) * VTFSD_MSH(m,

          i,k,r)))

     VGDP_r (equation number 113)

 To simplify the 'atm' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00570(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))


 To simplify the 'atf' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00571(i,r)

  equal to the following expression: 
 
          SUM(s,REG,-VIWS(i,s,r) * C00528(i,s,r))


 To simplify the 'ats' part of equation 'VGDP_r', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00572(s,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-VIWS(i,s,r) * C00528(i,s,r))


 To simplify the 'atd' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00573(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * C00528(i,s,r)))


 To simplify the 'pt' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00574(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     PGDP_r (equation number 114)
     VREGIM_is (equation number 122)

 To simplify the 'atm' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00575(m,i,s)

  equal to the following expression: 
 
          -SUM(r,REG,-VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))


 To simplify the 'atf' part of equation 'VREGIM_is', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00576(i,s)

  equal to the following expression: 
 
          -SUM(r,REG,-VIWS(i,r,s) * C00528(i,r,s))


 To simplify the 'pt' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00577(m,i,s)

  equal to the following expression: 
 
          -SUM(r,REG,VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     PREGIM_is (equation number 132)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 27.

 ==================================================
 +28+
 ++> Task  28 - Substituting out variable 'compvalad'
 ==================================================


  >> Equation number 116 selected for substitution.
     Equation name is 'COMPVALADEQ'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 28.

 ==================================================
 +29+
 ++> Task  29 - Substituting out variable 'CNTqor'
 ==================================================


  >> Equation number 171 selected for substitution.
     Equation name is 'CONT_EV_qor'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 29.

 ==================================================
 +30+
 ++> Task  30 - Substituting out variable 'CNTqoir'
 ==================================================


  >> Equation number 172 selected for substitution.
     Equation name is 'CONT_EV_qoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 30.

 ==================================================
 +31+
 ++> Task  31 - Substituting out variable 'CNTqfer'
 ==================================================


  >> Equation number 173 selected for substitution.
     Equation name is 'CONT_EV_qfer'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 31.

 ==================================================
 +32+
 ++> Task  32 - Substituting out variable 'CNTqfeir'
 ==================================================


  >> Equation number 174 selected for substitution.
     Equation name is 'CONT_EV_qfeir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 32.

 ==================================================
 +33+
 ++> Task  33 - Substituting out variable 'CNTqfeijr'
 ==================================================


  >> Equation number 175 selected for substitution.
     Equation name is 'CONT_EV_qfeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 33.

 ==================================================
 +34+
 ++> Task  34 - Substituting out variable 'CNTqfmr'
 ==================================================


  >> Equation number 176 selected for substitution.
     Equation name is 'CONT_EV_qfmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 34.

 ==================================================
 +35+
 ++> Task  35 - Substituting out variable 'CNTqfmir'
 ==================================================


  >> Equation number 177 selected for substitution.
     Equation name is 'CONT_EV_qfmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 35.

 ==================================================
 +36+
 ++> Task  36 - Substituting out variable 'CNTqfmijr'
 ==================================================


  >> Equation number 178 selected for substitution.
     Equation name is 'CONT_EV_qfmijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 36.

 ==================================================
 +37+
 ++> Task  37 - Substituting out variable 'CNTqfdr'
 ==================================================


  >> Equation number 179 selected for substitution.
     Equation name is 'CONT_EV_qfdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 37.

 ==================================================
 +38+
 ++> Task  38 - Substituting out variable 'CNTqfdir'
 ==================================================


  >> Equation number 180 selected for substitution.
     Equation name is 'CONT_EV_qfdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 38.

 ==================================================
 +39+
 ++> Task  39 - Substituting out variable 'CNTqfdijr'
 ==================================================


  >> Equation number 181 selected for substitution.
     Equation name is 'CONT_EV_qfdijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 39.

 ==================================================
 +40+
 ++> Task  40 - Substituting out variable 'CNTqpmr'
 ==================================================


  >> Equation number 182 selected for substitution.
     Equation name is 'CONT_EV_qpmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 40.

 ==================================================
 +41+
 ++> Task  41 - Substituting out variable 'CNTqpmir'
 ==================================================


  >> Equation number 183 selected for substitution.
     Equation name is 'CONT_EV_qpmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 41.

 ==================================================
 +42+
 ++> Task  42 - Substituting out variable 'CNTqpdr'
 ==================================================


  >> Equation number 184 selected for substitution.
     Equation name is 'CONT_EV_qpdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 42.

 ==================================================
 +43+
 ++> Task  43 - Substituting out variable 'CNTqpdir'
 ==================================================


  >> Equation number 185 selected for substitution.
     Equation name is 'CONT_EV_qpdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 43.

 ==================================================
 +44+
 ++> Task  44 - Substituting out variable 'CNTqgmr'
 ==================================================


  >> Equation number 186 selected for substitution.
     Equation name is 'CONT_EV_qgmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 44.

 ==================================================
 +45+
 ++> Task  45 - Substituting out variable 'CNTqgmir'
 ==================================================


  >> Equation number 187 selected for substitution.
     Equation name is 'CONT_EV_qgmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 45.

 ==================================================
 +46+
 ++> Task  46 - Substituting out variable 'CNTqgdr'
 ==================================================


  >> Equation number 188 selected for substitution.
     Equation name is 'CONT_EV_qgdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 46.

 ==================================================
 +47+
 ++> Task  47 - Substituting out variable 'CNTqgdir'
 ==================================================


  >> Equation number 189 selected for substitution.
     Equation name is 'CONT_EV_qgdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 47.

 ==================================================
 +48+
 ++> Task  48 - Substituting out variable 'CNTqxsr'
 ==================================================


  >> Equation number 190 selected for substitution.
     Equation name is 'CONT_EV_qxsr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 48.

 ==================================================
 +49+
 ++> Task  49 - Substituting out variable 'CNTqxsirs'
 ==================================================


  >> Equation number 191 selected for substitution.
     Equation name is 'CONT_EV_qxsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 49.

 ==================================================
 +50+
 ++> Task  50 - Substituting out variable 'CNTqimr'
 ==================================================


  >> Equation number 192 selected for substitution.
     Equation name is 'CONT_EV_qimr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 50.

 ==================================================
 +51+
 ++> Task  51 - Substituting out variable 'CNTqimisr'
 ==================================================


  >> Equation number 193 selected for substitution.
     Equation name is 'CONT_EV_qimisr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 51.

 ==================================================
 +52+
 ++> Task  52 - Substituting out variable 'CNTalleffr'
 ==================================================


  >> Equation number 194 selected for substitution.
     Equation name is 'CONT_EV_alleffr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 52.

 ==================================================
 +53+
 ++> Task  53 - Substituting out variable 'CNTtotr'
 ==================================================


  >> Equation number 197 selected for substitution.
     Equation name is 'CONT_EV_totr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 53.

 ==================================================
 +54+
 ++> Task  54 - Substituting out variable 'CNTtech_aoir'
 ==================================================


  >> Equation number 203 selected for substitution.
     Equation name is 'CONT_EV_tech_aoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 54.

 ==================================================
 +55+
 ++> Task  55 - Substituting out variable 'CNTtech_afeijr'
 ==================================================


  >> Equation number 205 selected for substitution.
     Equation name is 'CONT_EV_tech_afeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 55.

 ==================================================
 +56+
 ++> Task  56 - Substituting out variable 'CNTtech_avajr'
 ==================================================


  >> Equation number 207 selected for substitution.
     Equation name is 'CONT_EV_tech_avajr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 56.

 ==================================================
 +57+
 ++> Task  57 - Substituting out variable 'CNTtech_afijr'
 ==================================================


  >> Equation number 209 selected for substitution.
     Equation name is 'CONT_EV_tech_afijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 57.

 ==================================================
 +58+
 ++> Task  58 - Substituting out variable 'CNTtech_afmfdsd'
 ==================================================


  >> Equation number 211 selected for substitution.
     Equation name is 'CONT_EV_tech_afmfdsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 58.

 ==================================================
 +59+
 ++> Task  59 - Substituting out variable 'CNTtech_amsirs'
 ==================================================


  >> Equation number 213 selected for substitution.
     Equation name is 'CONT_EV_tech_amsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 59.

 ==================================================
 --> Summary of CONDENSATION
 ==================================================



     ============================
     List of CONDENSATION actions
     ============================

     The following  59 condensation actions were performed : 

     Action |  Brief description of action
     -------|---------------------------------------------------
            | 
         1  |  OMISSION
            |  The following variables were omitted: 
            |     atall          (var. no. 119)
            |     avaall         (var. no.  92)
            |     tgd            (var. no.  57)
            |     tgm            (var. no.  58)
            |     tpd            (var. no.  62)
            |     tpm            (var. no.  64)
            | 
         2  |  BACKSOLVE
            |  Variable 'pgov           ' (var. no.  33)
            |  was made available for backsolving
            |  using equation 'GPRICEINDEX         ' (eq. no.   3)
            | 
         3  |  BACKSOLVE
            |  Variable 'qg             ' (var. no.  56)
            |  was made available for backsolving
            |  using equation 'GOVDMNDS            ' (eq. no.   4)
            | 
         4  |  BACKSOLVE
            |  Variable 'pgd            ' (var. no.   3)
            |  was made available for backsolving
            |  using equation 'GHHDPRICE           ' (eq. no.   6)
            | 
         5  |  BACKSOLVE
            |  Variable 'pgm            ' (var. no.   6)
            |  was made available for backsolving
            |  using equation 'GHHIPRICES          ' (eq. no.   7)
            | 
         6  |  BACKSOLVE
            |  Variable 'pg             ' (var. no.  55)
            |  was made available for backsolving
            |  using equation 'GCOMPRICE           ' (eq. no.   8)
            | 
         7  |  BACKSOLVE
            |  Variable 'qgm            ' (var. no.   7)
            |  was made available for backsolving
            |  using equation 'GHHLDAGRIMP         ' (eq. no.   9)
            | 
         8  |  BACKSOLVE
            |  Variable 'ppd            ' (var. no.   9)
            |  was made available for backsolving
            |  using equation 'PHHDPRICE           ' (eq. no.  17)
            | 
         9  |  BACKSOLVE
            |  Variable 'ppm            ' (var. no.  11)
            |  was made available for backsolving
            |  using equation 'PHHIPRICES          ' (eq. no.  19)
            | 
        10  |  BACKSOLVE
            |  Variable 'qpm            ' (var. no.  12)
            |  was made available for backsolving
            |  using equation 'PHHLDAGRIMP         ' (eq. no.  23)
            | 
        11  |  BACKSOLVE
            |  Variable 'ao             ' (var. no.  70)
            |  was made available for backsolving
            |  using equation 'AOWORLD             ' (eq. no.  40)
            | 
        12  |  BACKSOLVE
            |  Variable 'ava            ' (var. no.  71)
            |  was made available for backsolving
            |  using equation 'AVAWORLD            ' (eq. no.  41)
            | 
        13  |  BACKSOLVE
            |  Variable 'qva            ' (var. no.  67)
            |  was made available for backsolving
            |  using equation 'VADEMAND            ' (eq. no.  42)
            | 
        14  |  BACKSOLVE
            |  Variable 'af             ' (var. no.  72)
            |  was made available for backsolving
            |  using equation 'AFWORLD             ' (eq. no.  43)
            | 
        15  |  BACKSOLVE
            |  Variable 'qf             ' (var. no.  69)
            |  was made available for backsolving
            |  using equation 'INTDEMAND           ' (eq. no.  44)
            | 
        16  |  BACKSOLVE
            |  Variable 'pfd            ' (var. no.  17)
            |  was made available for backsolving
            |  using equation 'DMNDDPRICE          ' (eq. no.  24)
            | 
        17  |  BACKSOLVE
            |  Variable 'pfm            ' (var. no.  19)
            |  was made available for backsolving
            |  using equation 'DMNDIPRICES         ' (eq. no.  25)
            | 
        18  |  BACKSOLVE
            |  Variable 'pf             ' (var. no.  68)
            |  was made available for backsolving
            |  using equation 'ICOMPRICE           ' (eq. no.  27)
            | 
        19  |  BACKSOLVE
            |  Variable 'qfm            ' (var. no.  20)
            |  was made available for backsolving
            |  using equation 'INDIMP              ' (eq. no.  28)
            | 
        20  |  BACKSOLVE
            |  Variable 'afe            ' (var. no.  73)
            |  was made available for backsolving
            |  using equation 'AFEWORLD            ' (eq. no.  32)
            | 
        21  |  BACKSOLVE
            |  Variable 'pva            ' (var. no.  66)
            |  was made available for backsolving
            |  using equation 'VAPRICE             ' (eq. no.  33)
            | 
        22  |  BACKSOLVE
            |  Variable 'pfob           ' (var. no.  27)
            |  was made available for backsolving
            |  using equation 'EXPRICES            ' (eq. no.  61)
            | 
        23  |  BACKSOLVE
            |  Variable 'pms            ' (var. no.  24)
            |  was made available for backsolving
            |  using equation 'MKTPRICES           ' (eq. no.  63)
            | 
        24  |  BACKSOLVE
            |  Variable 'qtmfsd         ' (var. no. 113)
            |  was made available for backsolving
            |  using equation 'QTRANS_MFSD         ' (eq. no.  68)
            | 
        25  |  BACKSOLVE
            |  Variable 'ptrans         ' (var. no. 120)
            |  was made available for backsolving
            |  using equation 'TRANSCOSTINDEX      ' (eq. no.  71)
            | 
        26  |  BACKSOLVE
            |  Variable 'atmfsd         ' (var. no. 114)
            |  was made available for backsolving
            |  using equation 'TRANSTECHANGE       ' (eq. no.  72)
            | 
        27  |  BACKSOLVE
            |  Variable 'pcif           ' (var. no.  26)
            |  was made available for backsolving
            |  using equation 'FOBCIF              ' (eq. no.  74)
            | 
        28  |  BACKSOLVE
            |  Variable 'compvalad      ' (var. no. 160)
            |  was made available for backsolving
            |  using equation 'COMPVALADEQ         ' (eq. no. 116)
            | 
        29  |  BACKSOLVE
            |  Variable 'CNTqor         ' (var. no. 208)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qor         ' (eq. no. 171)
            | 
        30  |  BACKSOLVE
            |  Variable 'CNTqoir        ' (var. no. 209)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qoir        ' (eq. no. 172)
            | 
        31  |  BACKSOLVE
            |  Variable 'CNTqfer        ' (var. no. 210)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfer        ' (eq. no. 173)
            | 
        32  |  BACKSOLVE
            |  Variable 'CNTqfeir       ' (var. no. 211)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeir       ' (eq. no. 174)
            | 
        33  |  BACKSOLVE
            |  Variable 'CNTqfeijr      ' (var. no. 212)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeijr      ' (eq. no. 175)
            | 
        34  |  BACKSOLVE
            |  Variable 'CNTqfmr        ' (var. no. 213)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmr        ' (eq. no. 176)
            | 
        35  |  BACKSOLVE
            |  Variable 'CNTqfmir       ' (var. no. 214)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmir       ' (eq. no. 177)
            | 
        36  |  BACKSOLVE
            |  Variable 'CNTqfmijr      ' (var. no. 215)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmijr      ' (eq. no. 178)
            | 
        37  |  BACKSOLVE
            |  Variable 'CNTqfdr        ' (var. no. 216)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdr        ' (eq. no. 179)
            | 
        38  |  BACKSOLVE
            |  Variable 'CNTqfdir       ' (var. no. 217)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdir       ' (eq. no. 180)
            | 
        39  |  BACKSOLVE
            |  Variable 'CNTqfdijr      ' (var. no. 218)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdijr      ' (eq. no. 181)
            | 
        40  |  BACKSOLVE
            |  Variable 'CNTqpmr        ' (var. no. 219)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmr        ' (eq. no. 182)
            | 
        41  |  BACKSOLVE
            |  Variable 'CNTqpmir       ' (var. no. 220)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmir       ' (eq. no. 183)
            | 
        42  |  BACKSOLVE
            |  Variable 'CNTqpdr        ' (var. no. 221)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdr        ' (eq. no. 184)
            | 
        43  |  BACKSOLVE
            |  Variable 'CNTqpdir       ' (var. no. 222)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdir       ' (eq. no. 185)
            | 
        44  |  BACKSOLVE
            |  Variable 'CNTqgmr        ' (var. no. 223)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmr        ' (eq. no. 186)
            | 
        45  |  BACKSOLVE
            |  Variable 'CNTqgmir       ' (var. no. 224)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmir       ' (eq. no. 187)
            | 
        46  |  BACKSOLVE
            |  Variable 'CNTqgdr        ' (var. no. 225)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdr        ' (eq. no. 188)
            | 
        47  |  BACKSOLVE
            |  Variable 'CNTqgdir       ' (var. no. 226)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdir       ' (eq. no. 189)
            | 
        48  |  BACKSOLVE
            |  Variable 'CNTqxsr        ' (var. no. 227)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsr        ' (eq. no. 190)
            | 
        49  |  BACKSOLVE
            |  Variable 'CNTqxsirs      ' (var. no. 228)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsirs      ' (eq. no. 191)
            | 
        50  |  BACKSOLVE
            |  Variable 'CNTqimr        ' (var. no. 229)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimr        ' (eq. no. 192)
            | 
        51  |  BACKSOLVE
            |  Variable 'CNTqimisr      ' (var. no. 230)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimisr      ' (eq. no. 193)
            | 
        52  |  BACKSOLVE
            |  Variable 'CNTalleffr     ' (var. no. 231)
            |  was made available for backsolving
            |  using equation 'CONT_EV_alleffr     ' (eq. no. 194)
            | 
        53  |  BACKSOLVE
            |  Variable 'CNTtotr        ' (var. no. 233)
            |  was made available for backsolving
            |  using equation 'CONT_EV_totr        ' (eq. no. 197)
            | 
        54  |  BACKSOLVE
            |  Variable 'CNTtech_aoir   ' (var. no. 239)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_aoir   ' (eq. no. 203)
            | 
        55  |  BACKSOLVE
            |  Variable 'CNTtech_afeijr ' (var. no. 241)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afeijr ' (eq. no. 205)
            | 
        56  |  BACKSOLVE
            |  Variable 'CNTtech_avajr  ' (var. no. 243)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_avajr  ' (eq. no. 207)
            | 
        57  |  BACKSOLVE
            |  Variable 'CNTtech_afijr  ' (var. no. 245)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afijr  ' (eq. no. 209)
            | 
        58  |  BACKSOLVE
            |  Variable 'CNTtech_afmfdsd' (var. no. 247)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afmfdsd' (eq. no. 211)
            | 
        59  |  BACKSOLVE
            |  Variable 'CNTtech_amsirs ' (var. no. 249)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_amsirs ' (eq. no. 213)



     =============================
     Final status of all Equations
     =============================

  Number |      Equation        | Status of equation             |  Max   
         |        name          |                                | number 
 --------|----------------------|--------------------------------|--------
         |                      |                                |        
     1   | E_to_1               | In the condensed system        |         0
     2   | E_INCOME_track       | In the condensed system        |        10
     3   | GPRICEINDEX          | Used for BACKSOLVING           |[        10]
     4   | GOVDMNDS             | Used for BACKSOLVING           |[       100]
     5   | GOVU                 | In the condensed system        |        10
     6   | GHHDPRICE            | Used for BACKSOLVING           |[       100]
     7   | GHHIPRICES           | Used for BACKSOLVING           |[       100]
     8   | GCOMPRICE            | Used for BACKSOLVING           |[       100]
     9   | GHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
    10   | GHHLDDOM             | In the condensed system        |       100
    11   | TGCRATIO             | In the condensed system        |        10
    12   | PHHLDINDEX           | In the condensed system        |        10
    13   | PRIVATEU             | In the condensed system        |        10
    14   | UTILELASPRIV         | In the condensed system        |        10
    15   | PRIVDMNDS            | In the condensed system        |       100
    16   | TPDSHIFT             | In the condensed system        |       100
    17   | PHHDPRICE            | Used for BACKSOLVING           |[       100]
    18   | TPMSHIFT             | In the condensed system        |       100
    19   | PHHIPRICES           | Used for BACKSOLVING           |[       100]
    20   | TPCRATIO             | In the condensed system        |        10
    21   | PCOMPRICE            | In the condensed system        |       100
    22   | PHHLDDOM             | In the condensed system        |       100
    23   | PHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
    24   | DMNDDPRICE           | Used for BACKSOLVING           |[         0]
    25   | DMNDIPRICES          | Used for BACKSOLVING           |[         0]
    26   | TIURATIO             | In the condensed system        |        10
    27   | ICOMPRICE            | Used for BACKSOLVING           |[         0]
    28   | INDIMP               | Used for BACKSOLVING           |[         0]
    29   | INDDOM               | In the condensed system        |         0
    30   | MPFACTPRICE          | In the condensed system        |         0
    31   | SPFACTPRICE          | In the condensed system        |         0
    32   | AFEWORLD             | Used for BACKSOLVING           |[         0]
    33   | VAPRICE              | Used for BACKSOLVING           |[         0]
    34   | TFURATIO             | In the condensed system        |        10
    35   | ENDWDEMAND           | In the condensed system        |         0
    36   | LANDPRICE            | In the condensed system        |       100
    37   | LANDDEMAND           | In the condensed system        |       100
    38   | AEZDEMAND            | In the condensed system        |      1800
    39   | NLANDDEMAND          | In the condensed system        |         0
    40   | AOWORLD              | Used for BACKSOLVING           |[         0]
    41   | AVAWORLD             | Used for BACKSOLVING           |[         0]
    42   | VADEMAND             | Used for BACKSOLVING           |[         0]
    43   | AFWORLD              | Used for BACKSOLVING           |[         0]
    44   | INTDEMAND            | Used for BACKSOLVING           |[         0]
    45   | OUTPUTPRICES         | In the condensed system        |         0
    46   | TOUTRATIO            | In the condensed system        |        10
    47   | ZEROPROFITS          | In the condensed system        |         0
    48   | KAPSVCES             | In the condensed system        |        10
    49   | KAPRENTAL            | In the condensed system        |        10
    50   | CAPGOODS             | In the condensed system        |        10
    51   | PRCGOODS             | In the condensed system        |        10
    52   | KBEGINNING           | In the condensed system        |        10
    53   | KEND                 | In the condensed system        |        10
    54   | RORCURRENT           | In the condensed system        |        10
    55   | ROREXPECTED          | In the condensed system        |        10
    56   | BALDWIN              | In the condensed system        |        10
    57   | RORGLOBAL            | In the condensed system        |        10
    58   | GLOBALINV            | In the condensed system        |         1
    59   | PRICGDS              | In the condensed system        |         1
    60   | SAVEPRICE            | In the condensed system        |        10
    61   | EXPRICES             | Used for BACKSOLVING           |[      1000]
    62   | TEXPRATIO            | In the condensed system        |        10
    63   | MKTPRICES            | Used for BACKSOLVING           |[      1000]
    64   | DPRICEIMP            | In the condensed system        |       100
    65   | PRICETGT             | In the condensed system        |       100
    66   | IMPORTDEMAND         | In the condensed system        |      1000
    67   | TIMPRATIO            | In the condensed system        |        10
    68   | QTRANS_MFSD          | Used for BACKSOLVING           |[     10000]
    69   | TRANS_DEMAND         | In the condensed system        |        10
    70   | PTRANSPORT           | In the condensed system        |        10
    71   | TRANSCOSTINDEX       | Used for BACKSOLVING           |[      1000]
    72   | TRANSTECHANGE        | Used for BACKSOLVING           |[     10000]
    73   | TRANSVCES            | In the condensed system        |       100
    74   | FOBCIF               | Used for BACKSOLVING           |[      1000]
    75   | FACTORINCPRICES      | In the condensed system        |        50
    76   | TINCRATIO            | In the condensed system        |        10
    77   | ENDW_PRICE           | In the condensed system        |        50
    78   | NAEZEND_SUPPLY       | In the condensed system        |         0
    79   | LAND_PRICE           | In the condensed system        |       180
    80   | CROPLAND_PRICE       | In the condensed system        |       180
    81   | AGRLAND_SUPPLY       | In the condensed system        |       180
    82   | OTHLAND_SUPPLY       | In the condensed system        |         0
    83   | INDCROPLAND_SUPPLY   | In the condensed system        |      1800
    84   | FACTORINCOME         | In the condensed system        |        10
    85   | DINDTAXRATIO         | In the condensed system        |        10
    86   | DTAXRATIO            | In the condensed system        |        10
    87   | E_pes_contribution   | In the condensed system        |        10
    88   | E_pes_balance        | In the condensed system        |         1
    89   | REGIONALINCOME       | In the condensed system        |        10
    90   | DPARAV               | In the condensed system        |        10
    91   | UTILITELASTIC        | In the condensed system        |        10
    92   | PRIVCONSEXP          | In the condensed system        |        10
    93   | GOVCONSEXP           | In the condensed system        |        10
    94   | SAVING               | In the condensed system        |        10
    95   | PRICEINDEXREG        | In the condensed system        |        10
    96   | UTILITY              | In the condensed system        |        10
    97   | DISTPARSUM           | In the condensed system        |        10
    98   | MKTCLDOM             | In the condensed system        |       100
    99   | MKTCLTRD_MARG        | In the condensed system        |       100
   100   | MKTCLTRD_NMRG        | In the condensed system        |         0
   101   | MKTCLIMP             | In the condensed system        |       100
   102   | MKTCLENDWM           | In the condensed system        |         0
   103   | MKTCLENDWS           | In the condensed system        |         0
   104   | WALRAS_S             | In the condensed system        |         1
   105   | WALRAS_D             | In the condensed system        |         1
   106   | WALRAS               | In the condensed system        |         1
   107   | REALRETURN           | In the condensed system        |        50
   108   | PRIMFACTPR           | In the condensed system        |        10
   109   | PRIMFACTPRWLD        | In the condensed system        |         1
   110   | REGSUPRICE           | In the condensed system        |        10
   111   | REGDEMPRICE          | In the condensed system        |        10
   112   | TOTeq                | In the condensed system        |        10
   113   | VGDP_r               | In the condensed system        |        10
   114   | PGDP_r               | In the condensed system        |        10
   115   | QGDP_r               | In the condensed system        |        10
   116   | COMPVALADEQ          | Used for BACKSOLVING           |[         0]
   117   | VREGEX_ir_MARG       | In the condensed system        |       100
   118   | VREGEX_ir_NMRG       | In the condensed system        |         0
   119   | VREGEX_r             | In the condensed system        |        10
   120   | VWLDEX_i             | In the condensed system        |        10
   121   | VWLDEX               | In the condensed system        |         1
   122   | VREGIM_is            | In the condensed system        |       100
   123   | VREGIM_s             | In the condensed system        |        10
   124   | VWLDIM_i             | In the condensed system        |        10
   125   | VWLDOUT              | In the condensed system        |        10
   126   | VWLDOUTUSE           | In the condensed system        |        10
   127   | PREGEX_ir_MARG       | In the condensed system        |       100
   128   | PREGEX_ir_NMRG       | In the condensed system        |         0
   129   | PREGEX_r             | In the condensed system        |        10
   130   | PWLDEX_i             | In the condensed system        |        10
   131   | PWLDEX               | In the condensed system        |         1
   132   | PREGIM_is            | In the condensed system        |       100
   133   | PREGIM_s             | In the condensed system        |        10
   134   | PWLDIM_i             | In the condensed system        |        10
   135   | PWLDOUT              | In the condensed system        |        10
   136   | PWLDUSE              | In the condensed system        |        10
   137   | QREGEX_ir_MARG       | In the condensed system        |       100
   138   | QREGEX_ir_NMRG       | In the condensed system        |         0
   139   | QREGEX_r             | In the condensed system        |        10
   140   | QWLDEX_i             | In the condensed system        |        10
   141   | QWLDEX               | In the condensed system        |         1
   142   | QREGIM_is            | In the condensed system        |       100
   143   | QREGIM_s             | In the condensed system        |        10
   144   | QWLDIM_i             | In the condensed system        |        10
   145   | QWLDOUT              | In the condensed system        |        10
   146   | QCROPOUT             | In the condensed system        |        10
   147   | QCROPWOUT            | In the condensed system        |         1
   148   | QLIVEOUT             | In the condensed system        |        10
   149   | QLIVEWOUT            | In the condensed system        |         1
   150   | QWLDOUTU             | In the condensed system        |        10
   151   | TRADEBAL_i           | In the condensed system        |       100
   152   | TRADEBALANCE         | In the condensed system        |        10
   153   | DTBALRATIO           | In the condensed system        |        10
   154   | GOVUSHD              | In the condensed system        |        10
   155   | PRIVDMNDSEV          | In the condensed system        |       100
   156   | PRIVATEUEV           | In the condensed system        |        10
   157   | UTILELASPRIVEV       | In the condensed system        |        10
   158   | DPARAVEV             | In the condensed system        |        10
   159   | UTILITELASTICEV      | In the condensed system        |        10
   160   | PCONSEXPEV           | In the condensed system        |        10
   161   | GOVCONSEXPEV         | In the condensed system        |        10
   162   | SAVINGEV             | In the condensed system        |        10
   163   | SAVEUEV              | In the condensed system        |        10
   164   | INCOME_EQUIV         | In the condensed system        |        10
   165   | EVREG                | In the condensed system        |        10
   166   | EVWLD                | In the condensed system        |         1
   167   | EV_DECOMPOSITION     | In the condensed system        |        10
   168   | WORLDEV              | In the condensed system        |         1
   169   | CNT_WEV_dpar         | In the condensed system        |        10
   170   | CONT_EV_pop          | In the condensed system        |        10
   171   | CONT_EV_qor          | Used for BACKSOLVING           |[        10]
   172   | CONT_EV_qoir         | Used for BACKSOLVING           |[         0]
   173   | CONT_EV_qfer         | Used for BACKSOLVING           |[        10]
   174   | CONT_EV_qfeir        | Used for BACKSOLVING           |[        50]
   175   | CONT_EV_qfeijr       | Used for BACKSOLVING           |[         0]
   176   | CONT_EV_qfmr         | Used for BACKSOLVING           |[        10]
   177   | CONT_EV_qfmir        | Used for BACKSOLVING           |[       100]
   178   | CONT_EV_qfmijr       | Used for BACKSOLVING           |[         0]
   179   | CONT_EV_qfdr         | Used for BACKSOLVING           |[        10]
   180   | CONT_EV_qfdir        | Used for BACKSOLVING           |[       100]
   181   | CONT_EV_qfdijr       | Used for BACKSOLVING           |[         0]
   182   | CONT_EV_qpmr         | Used for BACKSOLVING           |[        10]
   183   | CONT_EV_qpmir        | Used for BACKSOLVING           |[       100]
   184   | CONT_EV_qpdr         | Used for BACKSOLVING           |[        10]
   185   | CONT_EV_qpdir        | Used for BACKSOLVING           |[       100]
   186   | CONT_EV_qgmr         | Used for BACKSOLVING           |[        10]
   187   | CONT_EV_qgmir        | Used for BACKSOLVING           |[       100]
   188   | CONT_EV_qgdr         | Used for BACKSOLVING           |[        10]
   189   | CONT_EV_qgdir        | Used for BACKSOLVING           |[       100]
   190   | CONT_EV_qxsr         | Used for BACKSOLVING           |[        10]
   191   | CONT_EV_qxsirs       | Used for BACKSOLVING           |[      1000]
   192   | CONT_EV_qimr         | Used for BACKSOLVING           |[        10]
   193   | CONT_EV_qimisr       | Used for BACKSOLVING           |[      1000]
   194   | CONT_EV_alleffr      | Used for BACKSOLVING           |[        10]
   195   | CONT_EV_alleffir_E   | In the condensed system        |        50
   196   | CONT_EV_alleffir_T   | In the condensed system        |       100
   197   | CONT_EV_totr         | Used for BACKSOLVING           |[        10]
   198   | CNT_EV_cgdsr         | In the condensed system        |        10
   199   | CONT_EV_endwr        | In the condensed system        |        10
   200   | CONT_EV_endwir       | In the condensed system        |        50
   201   | CONT_EV_techr        | In the condensed system        |        10
   202   | CONT_EV_tech_aor     | In the condensed system        |        10
   203   | CONT_EV_tech_aoir    | Used for BACKSOLVING           |[         0]
   204   | CONT_EV_tech_afer    | In the condensed system        |        10
   205   | CONT_EV_tech_afeijr  | Used for BACKSOLVING           |[         0]
   206   | CONT_EV_tech_avar    | In the condensed system        |        10
   207   | CONT_EV_tech_avajr   | Used for BACKSOLVING           |[         0]
   208   | CONT_EV_tech_afr     | In the condensed system        |        10
   209   | CONT_EV_tech_afijr   | Used for BACKSOLVING           |[         0]
   210   | CONT_EV_tech_atrr    | In the condensed system        |        10
   211   | CONT_EV_tech_afmfdsd | Used for BACKSOLVING           |[     10000]
   212   | CONT_EV_tech_amsr    | In the condensed system        |        10
   213   | CONT_EV_tech_amsirs  | Used for BACKSOLVING           |[      1000]
   214   | CONT_EV_kbr          | In the condensed system        |        10
   215   | EXPPRICE_MARG        | In the condensed system        |       100
   216   | EXPPRICE_NMRG        | In the condensed system        |         0
   217   | IMPPRICE1_MARG       | In the condensed system        |       100
   218   | IMPPRICE1_NMRG       | In the condensed system        |         0
   219   | WRLDPRICEi           | In the condensed system        |        10
   220   | WRLDPRICE            | In the condensed system        |         1
   221   | c1_irEQ              | In the condensed system        |       100
   222   | c2_irEQ              | In the condensed system        |       100
   223   | c3_irEQ              | In the condensed system        |       100
   224   | c1_rEQ               | In the condensed system        |        10
   225   | c2_rEQ               | In the condensed system        |        10
   226   | c3_rEQ               | In the condensed system        |        10
   227   | TOT2eq               | In the condensed system        |        10
   228   | E_LANDCOVER_R        | In the condensed system        |         0
   229   | E_LANDCOVER_W        | In the condensed system        |         0
   230   | E_RENTCOVER1         | In the condensed system        |         0
   231   | E_RENTCOVER2         | In the condensed system        |         0
   232   | E_RENTCOVERAV        | In the condensed system        |       180
   233   | E_HARVSTAEZ          | In the condensed system        |       180
   234   | E_NONCROPCOV         | In the condensed system        |         0
   235   | FIXCOVER             | In the condensed system        |       180
   236   | E_AREAADJUST         | In the condensed system        |       180
   237   | COMCOVER             | In the condensed system        |         0
   238   | E_RENTCROP1          | In the condensed system        |      1800
   239   | E_RENTCROPAV         | In the condensed system        |       180
   240   | E_HARVSTAREA         | In the condensed system        |      1800
   241   | FIXAREA              | In the condensed system        |       180
   242   | CROPCOVER            | In the condensed system        |         0
   243   | COMHARVEST           | In the condensed system        |       100
   244   | HARVCOVERSLACK       | In the condensed system        |        10
   245   | E_XLCOVERAEZ         | In the condensed system        |       180
   246   | E_LUC                | In the condensed system        |         0
   247   | E_cHARVSTAREA        | In the condensed system        |      1800
   248   | E_ECONLANDW          | In the condensed system        |        10
   249   | E_LAND_SUPPLY        | In the condensed system        |       180
   250   | E_PES_COST           | In the condensed system        |        10
   251   | E_LAND_ENDW          | In the condensed system        |       180
   252   | E_PRODUCTION         | In the condensed system        |      1800
   253   | E_YIELD              | In the condensed system        |       100
   254   | E_YIELDGL            | In the condensed system        |        10
   255   | E_GLOBALOUTPUT       | In the condensed system        |        10
   256   | E_CNT_YIELD          | In the condensed system        |        10
   257   | E_CNT_YIELDI         | In the condensed system        |        10
   258   | E_CNT_YIELDE         | In the condensed system        |        10
   259   | E_CNT_AREA           | In the condensed system        |        10
   260   | E_REGOUTPUT          | In the condensed system        |       100
   261   | E_CNT_YIELDREG       | In the condensed system        |       100
   262   | E_CNT_YIELDIREG      | In the condensed system        |       100
   263   | E_CNT_YIELDEREG      | In the condensed system        |       100
   264   | E_CNT_AREAREG        | In the condensed system        |       100
   265   | E_qp                 | In the condensed system        |        10
   266   | E_qg                 | In the condensed system        |        10
   267   | E_qfobxw             | In the condensed system        |        10
   268   | E_qstxw              | In the condensed system        |        10
   269   | E_pfobxw             | In the condensed system        |        10
   270   | E_pstxw              | In the condensed system        |        10
   271   | E_pgdpexp_ind        | In the condensed system        |        60
   272   | E_qgdpexp            | In the condensed system        |        60
   273   | E_vgdpexp            | In the condensed system        |        60
   274   | E_pgdplaspeyres      | In the condensed system        |        10
   275   | E_qgdplaspeyres      | In the condensed system        |        10
   276   | E_pgdppaasche        | In the condensed system        |        10
   277   | E_qgdppaasche        | In the condensed system        |        10
   278   | E_pgdpfisher         | In the condensed system        |        10
   279   | E_qgdpfisher         | In the condensed system        |        10
   280   | E_vgdpfisher         | In the condensed system        |        10
   281   | PHOUSEHOLD           | In the condensed system        |        10
   282   | HOUSERETURN          | In the condensed system        |        50
   283   | E_HOUSERETURN_LAND   | In the condensed system        |        10
   284   | E_REALRETURN_LAND    | In the condensed system        |        10
   285   | E_delQGDP            | In the condensed system        |        10
   286   | E_qgdpreginc         | In the condensed system        |         0
   287   | E_contGDPEXP         | In the condensed system        |        60
   288   | E_qgdpexp2           | In the condensed system        |        10
   289   | E_contGDPINC         | In the condensed system        |         0
   290   | E_contGDPINC2        | In the condensed system        |         0
   291   | E_qgdpinc            | In the condensed system        |        10
   292   | E_qgdpdiff           | In the condensed system        |        10
   293   | E_contGDPGVA         | In the condensed system        |         0
   294   | E_qgdpind            | In the condensed system        |        10
   295   | E_qgdprep            | In the condensed system        |        30
   296   | E_contGDPBACT        | In the condensed system        |         0
   297   | E_qoreg              | In the condensed system        |         0
   298   | E_qobactwld          | In the condensed system        |         0
   299   | E_tf                 | In the condensed system        |         0
   300   | E_qow_r              | In the condensed system        |       100
   301   | E_qow_crops          | In the condensed system        |        10
   302   | E_qow_paddyrice      | In the condensed system        |        10
   303   | E_qow_wheat          | In the condensed system        |        10
   304   | E_qow_crsgrns        | In the condensed system        |        10
   305   | E_qow_fruitveg       | In the condensed system        |        10
   306   | E_qow_oilsds         | In the condensed system        |        10
   307   | E_qow_sugarcrps      | In the condensed system        |        10
   308   | E_qow_cotton         | In the condensed system        |        10
   309   | E_qow_liveout        | In the condensed system        |        10
   310   | E_qow_fishout        | In the condensed system        |        10
   311   | E_qow_forsout        | In the condensed system        |        10
   312   | E_qow_agforout       | In the condensed system        |        10
   313   | E_qow_mnfc           | In the condensed system        |        10
   314   | E_qow_serv           | In the condensed system        |        10
   315   | E_qxw_r              | In the condensed system        |       100
   316   | E_qxw_crops          | In the condensed system        |        10
   317   | E_qxw_paddyrice      | In the condensed system        |        10
   318   | E_qxw_wheat          | In the condensed system        |        10
   319   | E_qxw_crsgrns        | In the condensed system        |        10
   320   | E_qxw_fruitveg       | In the condensed system        |        10
   321   | E_qxw_oilsds         | In the condensed system        |        10
   322   | E_qxw_sugarcrps      | In the condensed system        |        10
   323   | E_qxw_cotton         | In the condensed system        |        10
   324   | E_qxw_liveout        | In the condensed system        |        10
   325   | E_qxw_fishout        | In the condensed system        |        10
   326   | E_qxw_forsout        | In the condensed system        |        10
   327   | E_qxw_agforout       | In the condensed system        |        10
   328   | E_qxw_mnfc           | In the condensed system        |        10
   329   | E_qxw_serv           | In the condensed system        |        10
   330   | E_qmt_paddyrice      | In the condensed system        |        10
   331   | E_qmt_wheat          | In the condensed system        |        10
   332   | E_qmt_crsgrns        | In the condensed system        |        10
   333   | E_qmt_fruitveg       | In the condensed system        |        10
   334   | E_qmt_oilsds         | In the condensed system        |        10
   335   | E_qmt_sugarcrps      | In the condensed system        |        10
   336   | E_qmt_cotton         | In the condensed system        |        10
   337   | E_REALRETURN_LND     | In the condensed system        |        10
   338   | E_REALRETURN_SKLAB   | In the condensed system        |        10
   339   | E_REALRETURN_USKLAB  | In the condensed system        |        10
   340   | E_REALRETURN_CAP     | In the condensed system        |        10
   341   | E_LC_CROPLAND        | In the condensed system        |        10
   342   | E_LC_MNGD_FOREST     | In the condensed system        |        10
   343   | E_LC_PASTURE         | In the condensed system        |        10
   344   | E_LC_NTL_LAND        | In the condensed system        |        10
   345   | E_pmallland          | In the condensed system        |        10
   346   | E_VDFA_alt           | In the condensed system        |         0
   347   | E_VIFA_alt           | In the condensed system        |         0
   348   | E_EVFA_alt           | In the condensed system        |         0
   349   | E_VFA_alt_endw       | In the condensed system        |         0
   350   | E_VFA_alt_trad       | In the condensed system        |         0
   351   | E_VOA_alt_endw       | In the condensed system        |        50
   352   | E_VOA_alt_prod       | In the condensed system        |         0
   353   | E_VFM_alt_endwm      | In the condensed system        |         0
   354   | E_VFM_alt_endws      | In the condensed system        |         0
   355   | E_VDPM_alt           | In the condensed system        |       100
   356   | E_VDGM_alt           | In the condensed system        |       100
   357   | E_VDFM_alt           | In the condensed system        |         0
   358   | E_VIFM_alt           | In the condensed system        |         0
   359   | E_VDM_alt            | In the condensed system        |       100
   360   | E_VXMD_alt           | In the condensed system        |      1000
   361   | E_VST_alt            | In the condensed system        |       100
   362   | E_VOM_alt_endw       | In the condensed system        |        50
   363   | E_VOM_alt_marg       | In the condensed system        |       100
   364   | E_VOM_alt_nmrg       | In the condensed system        |         0
   365   | E_VOM_alt_cgds       | In the condensed system        |        10
   366   | E_dTO_alt            | In the condensed system        |         0
   367   | E_dTFD_alt           | In the condensed system        |         0
   368   | E_dTFM_alt           | In the condensed system        |         0
   369   | E_c_dTO_AEZ          | In the condensed system        |       180
   370   | E_c_dTO_AEZR         | In the condensed system        |        10
   371   | E_dTO_revnue         | In the condensed system        |        10
   372   | E_CNTpesgin          | In the condensed system        |        10
   373   | E_CNTpesgrgout       | In the condensed system        |        10
   374   | E_CNTpesgr           | In the condensed system        |        10
   375   | E_ureginc            | In the condensed system        |         0
   376   | E_pgdpexreginc       | In the condensed system        |         0
   377   | E_qgdpexreginc       | In the condensed system        |         0
   378   | E_pgdpreginc         | In the condensed system        |         0
   379   | E_contGDPEXP_a       | In the condensed system        |         0
   380   | E_contGDPINC_a       | In the condensed system        |         0
   381   | E_pgdpwld            | In the condensed system        |         1
   382   | E_qgdpwld            | In the condensed system        |         1
   383   | E_qgdpewld           | In the condensed system        |         6
   384   | E_pgdpewld           | In the condensed system        |         6
   385   | E_contGDPEXP_w       | In the condensed system        |         6
   386   | E_contGDPINC_w       | In the condensed system        |         0
   387   | E_qoar               | In the condensed system        |         0
   388   | E_poreg              | In the condensed system        |         0
   389   | E_pobactwld          | In the condensed system        |         0
   390   | E_qear               | In the condensed system        |         0
   391   | E_pear               | In the condensed system        |         0
   392   | E_qewld              | In the condensed system        |         5
   393   | E_pewld              | In the condensed system        |         5
   394   | E_qfear              | In the condensed system        |         0
   395   | E_pfear              | In the condensed system        |         0
   396   | E_qfeawld            | In the condensed system        |         0
   397   | E_pfeawld            | In the condensed system        |         0
   398   | E_qxwacomreg         | In the condensed system        |         0
   399   | E_qxsareg            | In the condensed system        |         0
   400   | E_pfobareg           | In the condensed system        |         0


 Maximum number of equations in condensed system is 21825



     =============================
     Final status of all Variables
     =============================

  Number |    Variable     | Status of variable                  |   Max  
         |      name       |                                     |  size  
 --------|-----------------|-------------------------------------|--------
         |                 |                                     |
     1   | psave           | In the condensed system             |        10
     2   | qsave           | In the condensed system             |        10
     3   | pgd             | You can BACKSOLVE for its values    |       100B
     4   | qgd             | In the condensed system             |       100
     5   | pm              | In the condensed system             |         0
     6   | pgm             | You can BACKSOLVE for its values    |       100B
     7   | qgm             | You can BACKSOLVE for its values    |       100B
     8   | pim             | In the condensed system             |       100
     9   | ppd             | You can BACKSOLVE for its values    |       100B
    10   | qpd             | In the condensed system             |       100
    11   | ppm             | You can BACKSOLVE for its values    |       100B
    12   | qpm             | You can BACKSOLVE for its values    |       100B
    13   | ps              | In the condensed system             |         0
    14   | qo              | In the condensed system             |         0
    15   | pfe             | In the condensed system             |         0
    16   | qfe             | In the condensed system             |         0
    17   | pfd             | You can BACKSOLVE for its values    |         0B
    18   | qfd             | In the condensed system             |         0
    19   | pfm             | You can BACKSOLVE for its values    |         0B
    20   | qfm             | You can BACKSOLVE for its values    |         0B
    21   | pmes            | In the condensed system             |         0
    22   | kb              | In the condensed system             |        10
    23   | pcgds           | In the condensed system             |        10
    24   | pms             | You can BACKSOLVE for its values    |      1000B
    25   | qxs             | In the condensed system             |      1000
    26   | pcif            | You can BACKSOLVE for its values    |      1000B
    27   | pfob            | You can BACKSOLVE for its values    |      1000B
    28   | qst             | In the condensed system             |       100
    29   | y               | In the condensed system             |        10
    30   | pop             | In the condensed system             |        10
    31   | qoes            | In the condensed system             |         0
    32   | endwslack       | In the condensed system             |        50
    33   | pgov            | You can BACKSOLVE for its values    |        10B
    34   | yg              | In the condensed system             |        10
    35   | ug              | In the condensed system             |        10
    36   | ppriv           | In the condensed system             |        10
    37   | uepriv          | In the condensed system             |        10
    38   | yp              | In the condensed system             |        10
    39   | up              | In the condensed system             |        10
    40   | to              | In the condensed system             |         0
    41   | to_1            | In the condensed system             |         0
    42   | to_2            | In the condensed system             |        10
    43   | qim             | In the condensed system             |       100
    44   | globalcgds      | In the condensed system             |         1
    45   | pcgdswld        | In the condensed system             |         1
    46   | del_taxrgc      | In the condensed system             |        10
    47   | del_taxrpc      | In the condensed system             |        10
    48   | del_taxriu      | In the condensed system             |        10
    49   | del_taxrfu      | In the condensed system             |        10
    50   | del_taxrout     | In the condensed system             |        10
    51   | del_taxrexp     | In the condensed system             |        10
    52   | del_taxrimp     | In the condensed system             |        10
    53   | del_taxrinc     | In the condensed system             |        10
    54   | p_INCOME_track  | In the condensed system             |        10
    55   | pg              | You can BACKSOLVE for its values    |       100B
    56   | qg              | You can BACKSOLVE for its values    |       100B
    57   | tgd             | OMITTED from condensed system       |[       100]
    58   | tgm             | OMITTED from condensed system       |[       100]
    59   | pp              | In the condensed system             |       100
    60   | qp              | In the condensed system             |       100
    61   | tp              | In the condensed system             |        10
    62   | tpd             | OMITTED from condensed system       |[       100]
    63   | atpd            | In the condensed system             |       100
    64   | tpm             | OMITTED from condensed system       |[       100]
    65   | atpm            | In the condensed system             |       100
    66   | pva             | You can BACKSOLVE for its values    |         0B
    67   | qva             | You can BACKSOLVE for its values    |         0B
    68   | pf              | You can BACKSOLVE for its values    |         0B
    69   | qf              | You can BACKSOLVE for its values    |         0B
    70   | ao              | You can BACKSOLVE for its values    |         0B
    71   | ava             | You can BACKSOLVE for its values    |         0B
    72   | af              | You can BACKSOLVE for its values    |         0B
    73   | afe             | You can BACKSOLVE for its values    |         0B
    74   | ams             | In the condensed system             |      1000
    75   | tfd             | In the condensed system             |         0
    76   | tfm             | In the condensed system             |         0
    77   | tf              | In the condensed system             |         0
    78   | afecom          | In the condensed system             |         5
    79   | afesec          | In the condensed system             |         0
    80   | afereg          | In the condensed system             |        10
    81   | afeall          | In the condensed system             |         0
    82   | pfeland         | In the condensed system             |       100
    83   | qfeland         | In the condensed system             |       100
    84   | aosec           | In the condensed system             |         0
    85   | aoreg           | In the condensed system             |        10
    86   | aoall           | In the condensed system             |         0
    87   | aoall2          | In the condensed system             |         0
    88   | aoall3          | In the condensed system             |         0
    89   | aoall4          | In the condensed system             |         0
    90   | avasec          | In the condensed system             |         0
    91   | avareg          | In the condensed system             |        10
    92   | avaall          | OMITTED from condensed system       |[         0]
    93   | afcom           | In the condensed system             |        10
    94   | afsec           | In the condensed system             |         0
    95   | afreg           | In the condensed system             |        10
    96   | afall           | In the condensed system             |         0
    97   | profitslack     | In the condensed system             |         0
    98   | rental          | In the condensed system             |        10
    99   | ke              | In the condensed system             |        10
   100   | rore            | In the condensed system             |        10
   101   | rorc            | In the condensed system             |        10
   102   | qcgds           | In the condensed system             |        10
   103   | ksvces          | In the condensed system             |        10
   104   | EXPAND          | In the condensed system             |        10
   105   | rorg            | In the condensed system             |         1
   106   | cgdslack        | In the condensed system             |        10
   107   | psaveslack      | In the condensed system             |        10
   108   | tx              | In the condensed system             |       100
   109   | txs             | In the condensed system             |      1000
   110   | tm              | In the condensed system             |       100
   111   | tms             | In the condensed system             |      1000
   112   | pr              | In the condensed system             |       100
   113   | qtmfsd          | You can BACKSOLVE for its values    |     10000B
   114   | atmfsd          | You can BACKSOLVE for its values    |     10000B
   115   | atm             | In the condensed system             |        10
   116   | atf             | In the condensed system             |        10
   117   | ats             | In the condensed system             |        10
   118   | atd             | In the condensed system             |        10
   119   | atall           | OMITTED from condensed system       |[     10000]
   120   | ptrans          | You can BACKSOLVE for its values    |      1000B
   121   | qtm             | In the condensed system             |        10
   122   | pt              | In the condensed system             |        10
   123   | uelas           | In the condensed system             |        10
   124   | dppriv          | In the condensed system             |        10
   125   | dpgov           | In the condensed system             |        10
   126   | dpsave          | In the condensed system             |        10
   127   | pmland          | In the condensed system             |       180
   128   | qocropland      | In the condensed system             |       180
   129   | pmcropland      | In the condensed system             |       180
   130   | fincome         | In the condensed system             |        10
   131   | del_indtaxr     | In the condensed system             |        10
   132   | del_ttaxr       | In the condensed system             |        10
   133   | incomeslack     | In the condensed system             |        10
   134   | pes_inflow      | In the condensed system             |        10
   135   | pes_outflow     | In the condensed system             |        10
   136   | pes_outflow_wld | In the condensed system             |         1
   137   | dpav            | In the condensed system             |        10
   138   | p               | In the condensed system             |        10
   139   | au              | In the condensed system             |        10
   140   | dpsum           | In the condensed system             |        10
   141   | u               | In the condensed system             |        10
   142   | qds             | In the condensed system             |       100
   143   | tradslack       | In the condensed system             |       100
   144   | walras_sup      | In the condensed system             |         1
   145   | walras_dem      | In the condensed system             |         1
   146   | walraslack      | In the condensed system             |         1
   147   | vxwfob          | In the condensed system             |       100
   148   | viwcif          | In the condensed system             |       100
   149   | vxwreg          | In the condensed system             |        10
   150   | viwreg          | In the condensed system             |        10
   151   | pfactreal       | In the condensed system             |        50
   152   | pfactor         | In the condensed system             |        10
   153   | pfactwld        | In the condensed system             |         1
   154   | psw             | In the condensed system             |        10
   155   | pdw             | In the condensed system             |        10
   156   | tot             | In the condensed system             |        10
   157   | vgdp            | In the condensed system             |        10
   158   | pgdp            | In the condensed system             |        10
   159   | qgdp            | In the condensed system             |        10
   160   | compvalad       | You can BACKSOLVE for its values    |         0B
   161   | pxw             | In the condensed system             |       100
   162   | vxwcom          | In the condensed system             |        10
   163   | vxwwld          | In the condensed system             |         1
   164   | viwcom          | In the condensed system             |        10
   165   | valuew          | In the condensed system             |        10
   166   | valuewu         | In the condensed system             |        10
   167   | pxwreg          | In the condensed system             |        10
   168   | pxwcom          | In the condensed system             |        10
   169   | pxwwld          | In the condensed system             |         1
   170   | piw             | In the condensed system             |       100
   171   | piwreg          | In the condensed system             |        10
   172   | piwcom          | In the condensed system             |        10
   173   | pw              | In the condensed system             |        10
   174   | pwu             | In the condensed system             |        10
   175   | qxw             | In the condensed system             |       100
   176   | qxwreg          | In the condensed system             |        10
   177   | qxwcom          | In the condensed system             |        10
   178   | qxwwld          | In the condensed system             |         1
   179   | qiw             | In the condensed system             |       100
   180   | qiwreg          | In the condensed system             |        10
   181   | qiwcom          | In the condensed system             |        10
   182   | qow             | In the condensed system             |        10
   183   | qo_crops        | In the condensed system             |        10
   184   | qow_crops       | In the condensed system             |         1
   185   | qo_live         | In the condensed system             |        10
   186   | qow_live        | In the condensed system             |         1
   187   | qowu            | In the condensed system             |        10
   188   | DTBALi          | In the condensed system             |       100
   189   | DTBAL           | In the condensed system             |        10
   190   | DTBALR          | In the condensed system             |        10
   191   | uelasev         | In the condensed system             |        10
   192   | ueprivev        | In the condensed system             |        10
   193   | ugev            | In the condensed system             |        10
   194   | upev            | In the condensed system             |        10
   195   | qsaveev         | In the condensed system             |        10
   196   | yev             | In the condensed system             |        10
   197   | ypev            | In the condensed system             |        10
   198   | ygev            | In the condensed system             |        10
   199   | qpev            | In the condensed system             |       100
   200   | ysaveev         | In the condensed system             |        10
   201   | dpavev          | In the condensed system             |        10
   202   | EV              | In the condensed system             |        10
   203   | WEV             | In the condensed system             |         1
   204   | EV_ALT          | In the condensed system             |        10
   205   | WEV_ALT         | In the condensed system             |         1
   206   | CNTdpar         | In the condensed system             |        10
   207   | CNTpopr         | In the condensed system             |        10
   208   | CNTqor          | You can BACKSOLVE for its values    |        10B
   209   | CNTqoir         | You can BACKSOLVE for its values    |         0B
   210   | CNTqfer         | You can BACKSOLVE for its values    |        10B
   211   | CNTqfeir        | You can BACKSOLVE for its values    |        50B
   212   | CNTqfeijr       | You can BACKSOLVE for its values    |         0B
   213   | CNTqfmr         | You can BACKSOLVE for its values    |        10B
   214   | CNTqfmir        | You can BACKSOLVE for its values    |       100B
   215   | CNTqfmijr       | You can BACKSOLVE for its values    |         0B
   216   | CNTqfdr         | You can BACKSOLVE for its values    |        10B
   217   | CNTqfdir        | You can BACKSOLVE for its values    |       100B
   218   | CNTqfdijr       | You can BACKSOLVE for its values    |         0B
   219   | CNTqpmr         | You can BACKSOLVE for its values    |        10B
   220   | CNTqpmir        | You can BACKSOLVE for its values    |       100B
   221   | CNTqpdr         | You can BACKSOLVE for its values    |        10B
   222   | CNTqpdir        | You can BACKSOLVE for its values    |       100B
   223   | CNTqgmr         | You can BACKSOLVE for its values    |        10B
   224   | CNTqgmir        | You can BACKSOLVE for its values    |       100B
   225   | CNTqgdr         | You can BACKSOLVE for its values    |        10B
   226   | CNTqgdir        | You can BACKSOLVE for its values    |       100B
   227   | CNTqxsr         | You can BACKSOLVE for its values    |        10B
   228   | CNTqxsirs       | You can BACKSOLVE for its values    |      1000B
   229   | CNTqimr         | You can BACKSOLVE for its values    |        10B
   230   | CNTqimisr       | You can BACKSOLVE for its values    |      1000B
   231   | CNTalleffr      | You can BACKSOLVE for its values    |        10B
   232   | CNTalleffir     | In the condensed system             |         0
   233   | CNTtotr         | You can BACKSOLVE for its values    |        10B
   234   | CNTcgdsr        | In the condensed system             |        10
   235   | CNTendwr        | In the condensed system             |        10
   236   | CNTendwir       | In the condensed system             |        50
   237   | CNTtechr        | In the condensed system             |        10
   238   | CNTtech_aor     | In the condensed system             |        10
   239   | CNTtech_aoir    | You can BACKSOLVE for its values    |         0B
   240   | CNTtech_afer    | In the condensed system             |        10
   241   | CNTtech_afeijr  | You can BACKSOLVE for its values    |         0B
   242   | CNTtech_avar    | In the condensed system             |        10
   243   | CNTtech_avajr   | You can BACKSOLVE for its values    |         0B
   244   | CNTtech_afr     | In the condensed system             |        10
   245   | CNTtech_afijr   | You can BACKSOLVE for its values    |         0B
   246   | CNTtech_atrr    | In the condensed system             |        10
   247   | CNTtech_afmfdsd | You can BACKSOLVE for its values    |     10000B
   248   | CNTtech_amsr    | In the condensed system             |        10
   249   | CNTtech_amsirs  | You can BACKSOLVE for its values    |      1000B
   250   | CNTkbr          | In the condensed system             |        10
   251   | px_ir           | In the condensed system             |       100
   252   | pm_ir           | In the condensed system             |       100
   253   | px_i            | In the condensed system             |        10
   254   | px_             | In the condensed system             |         1
   255   | c1_ir           | In the condensed system             |       100
   256   | c2_ir           | In the condensed system             |       100
   257   | c3_ir           | In the condensed system             |       100
   258   | c1_r            | In the condensed system             |        10
   259   | c2_r            | In the condensed system             |        10
   260   | c3_r            | In the condensed system             |        10
   261   | tot2            | In the condensed system             |        10
   262   | lcoveraez       | In the condensed system             |       180
   263   | p_LANDCOVER_L   | In the condensed system             |         0
   264   | p_LANDCOVER_R   | In the condensed system             |         0
   265   | p_LANDCOVER_W   | In the condensed system             |         0
   266   | p_RENTCOVER     | In the condensed system             |         0
   267   | p_RENTCOVERAV   | In the condensed system             |       180
   268   | p_HARVSTAREA_L  | In the condensed system             |      1800
   269   | harvstaez       | In the condensed system             |       180
   270   | harvstslack     | In the condensed system             |       180
   271   | harvstcom       | In the condensed system             |       100
   272   | areaadjust      | In the condensed system             |       180
   273   | lcovercom       | In the condensed system             |         0
   274   | p_RENTCROP      | In the condensed system             |      1800
   275   | p_RENTCROPAV    | In the condensed system             |       180
   276   | hareaslackreg   | In the condensed system             |        10
   277   | xlcoveraez      | In the condensed system             |       180
   278   | LUC             | In the condensed system             |         0
   279   | cHARVSTAREA     | In the condensed system             |      1800
   280   | p_ECONLAND      | In the condensed system             |       180
   281   | p_ECONLANDW     | In the condensed system             |        10
   282   | p_slackland     | In the condensed system             |       180
   283   | p_slacklandr    | In the condensed system             |        10
   284   | c_MAX_LAND      | In the condensed system             |       180
   285   | p_PRODUCTION    | In the condensed system             |      1800
   286   | p_YIELD         | In the condensed system             |       100
   287   | p_YIELDGL       | In the condensed system             |        10
   288   | globalouput     | In the condensed system             |        10
   289   | cnt_yield       | In the condensed system             |        10
   290   | cnt_yieldint    | In the condensed system             |        10
   291   | cnt_yieldext    | In the condensed system             |        10
   292   | cnt_area        | In the condensed system             |        10
   293   | regouput        | In the condensed system             |       100
   294   | cnt_yieldreg    | In the condensed system             |       100
   295   | cnt_yieldintreg | In the condensed system             |       100
   296   | cnt_yieldextreg | In the condensed system             |       100
   297   | cnt_areareg     | In the condensed system             |       100
   298   | qp_ind          | In the condensed system             |        10
   299   | qg_ind          | In the condensed system             |        10
   300   | qfobxw_ind      | In the condensed system             |        10
   301   | qstxw_ind       | In the condensed system             |        10
   302   | pfobxw_ind      | In the condensed system             |        10
   303   | pstxw_ind       | In the condensed system             |        10
   304   | pgdpexp_ind     | In the condensed system             |        60
   305   | qgdpexp_ind     | In the condensed system             |        60
   306   | vgdpexp_ind     | In the condensed system             |        60
   307   | pgdplaspeyres   | In the condensed system             |        10
   308   | qgdplaspeyres   | In the condensed system             |        10
   309   | pgdppaasche     | In the condensed system             |        10
   310   | qgdppaasche     | In the condensed system             |        10
   311   | pgdpfisher      | In the condensed system             |        10
   312   | qgdpfisher      | In the condensed system             |        10
   313   | vgdpfisher      | In the condensed system             |        10
   314   | preg            | In the condensed system             |        10
   315   | pfacthouse      | In the condensed system             |        50
   316   | pfacthouse_l    | In the condensed system             |        10
   317   | pfactreal_l     | In the condensed system             |        10
   318   | delQGDP         | In the condensed system             |        10
   319   | qgdpreginc      | In the condensed system             |         0
   320   | contGDPEXP      | In the condensed system             |        60
   321   | qgdpexp         | In the condensed system             |        10
   322   | contGDPINC      | In the condensed system             |         0
   323   | contGDPINC2     | In the condensed system             |         0
   324   | qgdpinc         | In the condensed system             |        10
   325   | qgdpdiff        | In the condensed system             |        10
   326   | contGDPGVA      | In the condensed system             |         0
   327   | qgdpind         | In the condensed system             |        10
   328   | qgdprep         | In the condensed system             |        30
   329   | contGDPBACT     | In the condensed system             |         0
   330   | qobactreg       | In the condensed system             |         0
   331   | qobactwld       | In the condensed system             |         0
   332   | tfijr           | In the condensed system             |         0
   333   | tfreg           | In the condensed system             |        10
   334   | p_qow_r         | In the condensed system             |       100
   335   | p_qow_cropout   | In the condensed system             |        10
   336   | p_qow_pdyrice   | In the condensed system             |        10
   337   | p_qow_wheat     | In the condensed system             |        10
   338   | p_qow_crsgrns   | In the condensed system             |        10
   339   | p_qow_fruitveg  | In the condensed system             |        10
   340   | p_qow_oilsds    | In the condensed system             |        10
   341   | p_qow_sugarcrp  | In the condensed system             |        10
   342   | p_qow_cotton    | In the condensed system             |        10
   343   | p_qow_liveout   | In the condensed system             |        10
   344   | p_qow_fishout   | In the condensed system             |        10
   345   | p_qow_forsout   | In the condensed system             |        10
   346   | p_qow_agforout  | In the condensed system             |        10
   347   | p_qow_mnfc      | In the condensed system             |        10
   348   | p_qow_serv      | In the condensed system             |        10
   349   | p_qxw_r         | In the condensed system             |       100
   350   | p_qxw_cropout   | In the condensed system             |        10
   351   | p_qxw_pdyrice   | In the condensed system             |        10
   352   | p_qxw_wheat     | In the condensed system             |        10
   353   | p_qxw_crsgrns   | In the condensed system             |        10
   354   | p_qxw_fruitveg  | In the condensed system             |        10
   355   | p_qxw_oilsds    | In the condensed system             |        10
   356   | p_qxw_sugarcrp  | In the condensed system             |        10
   357   | p_qxw_cotton    | In the condensed system             |        10
   358   | p_qxw_liveout   | In the condensed system             |        10
   359   | p_qxw_fishout   | In the condensed system             |        10
   360   | p_qxw_forsout   | In the condensed system             |        10
   361   | p_qxw_agforout  | In the condensed system             |        10
   362   | p_qxw_mnfc      | In the condensed system             |        10
   363   | p_qxw_serv      | In the condensed system             |        10
   364   | p_qmt_pdyrice   | In the condensed system             |        10
   365   | p_qmt_wheat     | In the condensed system             |        10
   366   | p_qmt_crsgrns   | In the condensed system             |        10
   367   | p_qmt_fruitveg  | In the condensed system             |        10
   368   | p_qmt_oilsds    | In the condensed system             |        10
   369   | p_qmt_sugarcrp  | In the condensed system             |        10
   370   | p_qmt_cotton    | In the condensed system             |        10
   371   | pfactrl_land    | In the condensed system             |        10
   372   | pfactrl_sklab   | In the condensed system             |        10
   373   | pfactrl_usklab  | In the condensed system             |        10
   374   | pfactrl_cap     | In the condensed system             |        10
   375   | p_lc_cropland   | In the condensed system             |        10
   376   | p_lc_mngforest  | In the condensed system             |        10
   377   | p_lc_pasture    | In the condensed system             |        10
   378   | lc_ntl_land     | In the condensed system             |        10
   379   | pmallland       | In the condensed system             |        10
   380   | p_VDFA_alt      | In the condensed system             |         0
   381   | p_VIFA_alt      | In the condensed system             |         0
   382   | p_EVFA_alt      | In the condensed system             |         0
   383   | p_VFA_alt       | In the condensed system             |         0
   384   | p_VOA_alt       | In the condensed system             |         0
   385   | p_VFM_alt       | In the condensed system             |         0
   386   | p_VDPM_alt      | In the condensed system             |       100
   387   | p_VDGM_alt      | In the condensed system             |       100
   388   | p_VDFM_alt      | In the condensed system             |         0
   389   | p_VIFM_alt      | In the condensed system             |         0
   390   | p_VDM_alt       | In the condensed system             |       100
   391   | p_VXMD_alt      | In the condensed system             |      1000
   392   | p_VST_alt       | In the condensed system             |       100
   393   | p_VOM_alt       | In the condensed system             |         0
   394   | c_dTO_alt       | In the condensed system             |         0
   395   | c_dTFD_alt      | In the condensed system             |         0
   396   | c_dTFM_alt      | In the condensed system             |         0
   397   | c_dTO_slack     | In the condensed system             |        10
   398   | c_dTO_AEZ       | In the condensed system             |       180
   399   | c_dTO_AEZR      | In the condensed system             |        10
   400   | CNTpesgrin      | In the condensed system             |        10
   401   | CNTpesgrout     | In the condensed system             |        10
   402   | CNTpesgr        | In the condensed system             |        10
   403   | ureginc         | In the condensed system             |         0
   404   | pgdpexreginc    | In the condensed system             |         0
   405   | qgdpexreginc    | In the condensed system             |         0
   406   | pgdpreginc      | In the condensed system             |         0
   407   | contGDPEXP_a    | In the condensed system             |         0
   408   | contGDPINC_a    | In the condensed system             |         0
   409   | pgdpwld         | In the condensed system             |         1
   410   | qgdpwld         | In the condensed system             |         1
   411   | qgdpewld        | In the condensed system             |         6
   412   | pgdpewld        | In the condensed system             |         6
   413   | contGDPEXP_w    | In the condensed system             |         6
   414   | contGDPINC_w    | In the condensed system             |         0
   415   | qoar            | In the condensed system             |         0
   416   | poar            | In the condensed system             |         0
   417   | pobactwld       | In the condensed system             |         0
   418   | qear            | In the condensed system             |         0
   419   | pear            | In the condensed system             |         0
   420   | qewld           | In the condensed system             |         5
   421   | pewld           | In the condensed system             |         5
   422   | qfear           | In the condensed system             |         0
   423   | pfear           | In the condensed system             |         0
   424   | qfeawld         | In the condensed system             |         0
   425   | pfeawld         | In the condensed system             |         0
   426   | qxwacomreg      | In the condensed system             |         0
   427   | qxsareg         | In the condensed system             |         0
   428   | pfobareg        | In the condensed system             |         0


 Maximum number of variables in condensed system is 21401
 Maximum number of extra variables available for backsolving is 38580

 

              Summary of model
              ----------------

 There are 342 equations left in the CONDENSED model.
 0 equations have been used to SUBSTITUTE out variables.
 58 equations have been used to BACKSOLVE for variables.
 The entire model contains 400 equations.

 There are 364 variables left in the CONDENSED model.
 0 variables have been SUBSTITUTED out.
 6 variables have been OMITTED.
 You can BACKSOLVE for 58 variables.
 The entire model contains 428 variables.


 ******************************************************************************
 -3-
 -->                     Starting CODE GENERATION

 ******************************************************************************



  CODE OPTIONS CHOSEN
  -------------------


                         TABLO PORTABLE
               CODE OPTIONS   ( --> indicates those in effect )

      NEQ Do no equations           PGS Prepare output for GEMSIM
      NDS Do no displays        --> WFP Write a Fortran Program
      NWR Do no writes                    (i.e. a TABLO-generated program)
                                --> FC5 Fast Compile TG-prog under LF95
      ACC All comment lines in      NMS Don't allow simulations
             code
                                    CIN Code file name same as
                                          Information file name
                                    CDM Old option. Has no effect.
                                    NRZ No run-time reports re use of
                                           ZERODIVIDE default values
                                    NXS No "extra" statements allowed

  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return

  END OF CODE OPTIONS CHOSEN
  --------------------------
  
! ( Program is 'gtapaez.for'.)
 (Total number of lines of code is 413142.)

 This program
     o can create the Equations file (for the condensed system)
     o can carry out 43 WRITEs
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations

 MXGSRS = 0, MXGSIS = 0.
 MXGSLG = 0, MXGSIC = 0.

 MXGSOP = 0, MXGSIN = 0.
 MXGSRC = 0, MXGSNS=0.
! (Model Information file is 'gtapaez.min'.)

 (Total number of programs written is 1.)

 *******************************************************************
 Successful completion of TABLO.
 The program is
   'gtapaez.for'.

 This program
     o can create the Equations file (for the condensed system)
     o can carry out 43 WRITEs
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations

 *******************************************************************
